{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"UP",
				"UPrim_master"
			],
			[
				"StartReceive",
				"StartReceiveHwmMPIData"
			],
			[
				"WMLESRecv",
				"WMLESRecvProc"
			],
			[
				"WMLESSen",
				"WMLESSendProc"
			],
			[
				"nBCS",
				"nBCSidesPerProc"
			],
			[
				"HWMSen",
				"HWMSendInfo_tmp"
			],
			[
				"MPI_B",
				"MPI_BARRIER"
			],
			[
				"nPro",
				"nProcessors"
			],
			[
				"nWMLES",
				"nWMLESSendProcs"
			],
			[
				"WMLESSend",
				"WMLESSendProc"
			],
			[
				"HWMRe",
				"HWMRecvInfo_tmp"
			],
			[
				"HWMRecvI",
				"HWMRecvInfo_tmp"
			],
			[
				"nHWMRec",
				"nHWMRecvPoints_tmp"
			],
			[
				"nHWMRe",
				"nHWMRecvPoints_tmp"
			],
			[
				"HWMRec",
				"HWMRecvInfo_tmp"
			],
			[
				"nHWM",
				"nHWMSendPoints_tmp"
			],
			[
				"nHWSen",
				"nHWMSendPoints_tmp"
			],
			[
				"SendToInter",
				"SendToInterpPoint_tmp"
			],
			[
				"HWMInter",
				"HWMInterpInfo_tmp"
			],
			[
				"nHWMSend",
				"nHWMSendPoints_tmp"
			],
			[
				"HWMLo",
				"HWMLocalInfo_tmp"
			],
			[
				"LocalT",
				"LocalToInterpPoint_tmp"
			],
			[
				"WMLESRec",
				"WMLESRecvProc_tmp"
			],
			[
				"nHWMSen",
				"nHWMSendPoints_tmp"
			],
			[
				"nHW",
				"nHWMPropSend"
			],
			[
				"nmo",
				"nModelledBCSides_global"
			],
			[
				"WMLESToBC",
				"WMLESToBCSide"
			],
			[
				"BCSide",
				"BCSideToWMLES"
			],
			[
				"WMCon",
				"WMConnectionFileProposal"
			],
			[
				"WMLESToB",
				"WMLESToBCSide"
			],
			[
				"S2",
				"S2E_ELEM_ID"
			],
			[
				"TempV",
				"TempVdmOutIn"
			],
			[
				"WMLESF",
				"WMLESFilter"
			],
			[
				"UNIT",
				"UNIT_logOut"
			],
			[
				"MasterToOpp",
				"MasterToOppSide"
			],
			[
				"Distance",
				"Distance"
			],
			[
				"MAstert",
				"MasterToOppSide"
			],
			[
				"WMLESFL",
				"WMLESFlip_tmp"
			],
			[
				"OpPSide",
				"OppSideID"
			],
			[
				"WMLESFli",
				"WMLESFlip_tmp"
			],
			[
				"S2E",
				"S2E_FLIP"
			],
			[
				"SlaveTo",
				"SlaveToWMLESSide_tmp"
			],
			[
				"Oppsi",
				"OppSideID"
			],
			[
				"WMLESFl",
				"WMLESFlip_tmp"
			],
			[
				"nS",
				"nSlaveWMLESSide"
			],
			[
				"WMLESTo",
				"WMLESToBCSide_tmp"
			],
			[
				"SideID_",
				"SideID_start"
			],
			[
				"Finish",
				"FinishExchangeMPIData"
			],
			[
				"MPIR",
				"MPIRequest_U"
			],
			[
				"WallElem",
				"WallElemID"
			],
			[
				"BcSide",
				"BCSideToWMLES"
			],
			[
				"OtherElem",
				"OthersElemInfo"
			],
			[
				"nTauW",
				"nTauW_MINE_FacePoint"
			],
			[
				"gradU",
				"gradUy_master"
			],
			[
				"WallToB",
				"WallToBCSide"
			],
			[
				"Interior",
				"InteriorToLocalPoint"
			],
			[
				"Newton",
				"NewtonLogLaw"
			],
			[
				"MOD_WMLES",
				"MOD_WMLES_Vars"
			],
			[
				"Int",
				"InteriorToLocalPoint"
			],
			[
				"Interpola",
				"InterpolateHwm"
			],
			[
				"Interpo",
				"InterpolateHwm"
			],
			[
				"Lag_",
				"Lag_xi"
			],
			[
				"nTau",
				"nTauW_MINE_Interpolate"
			],
			[
				"nT",
				"nTauW_MINE_Interpolate"
			],
			[
				"nTauW_MINE_Inte",
				"nTauW_MINE_Interpolate"
			],
			[
				"sendRe",
				"sendRequest"
			],
			[
				"COMM",
				"MPI_COMM_FLEXI"
			],
			[
				"TauW_MINE_Is",
				"TauW_MINE_IsFace"
			],
			[
				"Glob_",
				"Glob_hwmElemID-1"
			],
			[
				"Other",
				"OthersElemInfo"
			],
			[
				"Proc_Re",
				"Proc_RecvTauW_Inv"
			],
			[
				"WMLES_Re",
				"WMLES_RecvRequests"
			],
			[
				"nPRocs",
				"nProcs_RecvTauW"
			],
			[
				"nTa",
				"nTauW_YOURS"
			],
			[
				"Dista",
				"Distance"
			],
			[
				"Face",
				"FaceToLocalPoint"
			],
			[
				"TauW_M",
				"TauW_MINE_FacePoint"
			],
			[
				"Proc",
				"Proc_SendTauW_tmp"
			],
			[
				"nTauW_MINE_Inter",
				"nTauW_MINE_InteriorPoint"
			],
			[
				"nProcs",
				"nProcs_SendTauW"
			],
			[
				"MOD_WMLE",
				"MOD_WMLES_Vars"
			],
			[
				"TauW_F",
				"TauW_MINE_IsFace"
			],
			[
				"MOD_MPI",
				"MOD_MPI_Vars"
			],
			[
				"E2S",
				"E2S_FLIP"
			],
			[
				"OppSi",
				"OppSideID"
			],
			[
				"WAllS",
				"WallStressCount_local"
			],
			[
				"Glob",
				"Glob_hwmElemID"
			],
			[
				"Foun",
				"FoundhwmPoint"
			],
			[
				"F",
				"FoundhwmPoint"
			],
			[
				"Dist",
				"DistanceFromPoint"
			],
			[
				"offs",
				"offsetElem"
			],
			[
				"Loc",
				"Loc_hwmElemID"
			],
			[
				"nTaw",
				"nTauW_RecvFromProc"
			],
			[
				"TauW_Re",
				"TauW_RecvFrom_tmp"
			],
			[
				"WallS",
				"WallStressCount_local"
			],
			[
				"GT",
				"GT"
			],
			[
				"wallS",
				"WallStressCount_local"
			],
			[
				"nPoin",
				"nPoints_MINE_tmp2"
			],
			[
				"nPoint",
				"nPoints_MINE_tmp"
			],
			[
				"MPI_RE",
				"MPI_REQUEST_NULL"
			],
			[
				"BCTo",
				"BCSideToWMLES"
			],
			[
				"hwm",
				"h_wm_Coords"
			],
			[
				"WMLESTO",
				"WMLESToBC_tmp"
			],
			[
				"GlobalSide",
				"GlobalOppSideID"
			],
			[
				"offsetElem",
				"offsetElemMPI"
			],
			[
				"offset",
				"offsetElemMPI"
			],
			[
				"UNIT_",
				"UNIT_stdOut"
			],
			[
				"Found",
				"FoundOrNomB"
			],
			[
				"hWM",
				"hwmElemID"
			],
			[
				"FindH",
				"FindHwmElementMPI"
			],
			[
				"Tau",
				"TauW_Element_MINE"
			],
			[
				"tmpTa",
				"tmpTauW_FacexGP_MINE"
			],
			[
				"tmpT",
				"tmpTauW_NormVec_MINE"
			],
			[
				"h_wm",
				"h_wm_Coords"
			],
			[
				"tmpTaw",
				"tmpTauW_FacexGP_MINE"
			],
			[
				"abs",
				"abs_h_wm"
			],
			[
				"hwme",
				"hwmElemID"
			],
			[
				"hwmEle",
				"hwmElemID"
			],
			[
				"hwmEl",
				"hwmElemID"
			],
			[
				"Opposi",
				"OppositeSideID"
			],
			[
				"Oppo",
				"OppositeSideID"
			],
			[
				"LOG",
				"LOGWRITE"
			],
			[
				"tmpWM",
				"tmpWMLESToTSide_slave"
			],
			[
				"tmpWMLE",
				"tmpWMLESToTSide_master"
			],
			[
				"UPri",
				"UPrim_slave"
			],
			[
				"Uni",
				"UNIT_stdOut"
			],
			[
				"EvalDi",
				"EvalDiffFlux3D_WMLES"
			],
			[
				"Fin",
				"FinalizeWMLES"
			]
		]
	},
	"buffers":
	[
		{
			"file": "flexi.f90",
			"settings":
			{
				"buffer_size": 2105,
				"line_ending": "Unix"
			}
		},
		{
			"file": "flexilib.f90",
			"settings":
			{
				"buffer_size": 11441,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/eron/Workspace/CFD/Flexi/flexi-zles_dev/src/flexilib.f90",
			"settings":
			{
				"buffer_size": 13254,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "flexi.h",
			"settings":
			{
				"buffer_size": 5163,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"DAAAAAAAAAAAAAAAAAAAAAAAAACWEgAAIT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQohIENvcHlyaWdodCAoYykgMjAxMC0yMDE2ICBQcm9mLiBDbGF1cy1EaWV0ZXIgTXVueiAKISBUaGlzIGZpbGUgaXMgcGFydCBvZiBGTEVYSSwgYSBoaWdoLW9yZGVyIGFjY3VyYXRlIGZyYW1ld29yayBmb3IgbnVtZXJpY2FsbHkgc29sdmluZyBQREVzIHdpdGggZGlzY29udGludW91cyBHYWxlcmtpbiBtZXRob2RzLgohIEZvciBtb3JlIGluZm9ybWF0aW9uIHNlZSBodHRwczovL3d3dy5mbGV4aS1wcm9qZWN0Lm9yZyBhbmQgaHR0cHM6Ly9ucmcuaWFnLnVuaS1zdHV0dGdhcnQuZGUvCiEKISBGTEVYSSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5IGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgCiEgYXMgcHVibGlzaGVkIGJ5IHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uCiEKISBGTEVYSSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLCBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eQohIG9mIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gU2VlIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSB2My4wIGZvciBtb3JlIGRldGFpbHMuCiEKISBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhbG9uZyB3aXRoIEZMRVhJLiBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uCiE9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KIT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiEgSGVyZSwgcHJlcHJvY2Vzc29yIHZhcmlhYmxlcyBmb3IgZGlmZmVyZW50IGVxdWF0aW9uIHN5c3RlbXMgYW5kIGFiYnJldmlhdGlvbnMgZm9yIHNwZWNpZmljIGV4cHJlc3Npb25zIGFyZSBkZWZpbmVkCiE9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQoKISBBYmJyZXZhdGlvbnMKI2lmZGVmIFNVTgojICBkZWZpbmUgX19EQVRFX18gJ19fVElNRV9fIGFuZCBfX0RBVEVfXyBub3QnCiMgIGRlZmluZSBfX1RJTUVfXyAnYXZhaWxhYmxlIGZvciBTVU4gQ09NUElMRVInCiMgIGRlZmluZSBJRUVFX0lTTkFOCiNlbGlmIFNYCiMgIGRlZmluZSBfX0RBVEVfXyAnX19USU1FX18gYW5kIF9fREFURV9fIG5vdCcKIyAgZGVmaW5lIF9fVElNRV9fICdhdmFpbGFibGUgZm9yIFNYIENPTVBJTEVSJwojZWxpZiBQR0kKIyAgZGVmaW5lIE5PX0lTTkFOCiNlbmRpZgojaWZuZGVmIF9fRklMRU5BTUVfXyAKI2RlZmluZSBfX0ZJTEVOQU1FX18gX19GSUxFX18KI2VuZGlmCiNkZWZpbmUgX19TVEFNUF9fIF9fRklMRU5BTUVfXyxfX0xJTkVfXyxfX0RBVEVfXyxfX1RJTUVfXwoKI2lmZGVmIEdOVQojICBkZWZpbmUgSUVFRV9JU19OQU4gSVNOQU4KI2VuZGlmCgojZGVmaW5lIFNJWkVPRl9GKHgpIChTVE9SQUdFX1NJWkUoeCkvOCkKCiNpZmRlZiBHTlUKI2RlZmluZSBDSEVDS1NBRkVJTlQoeCxrKSAgSUYoeD5IVUdFKDFfICBrKS5PUi54PC1IVUdFKDFfICBrKSkgICAgICAgQ0FMTCBBQk9SVChfX1NUQU1QX18sJ0ludGVnZXIgY29udmVyc2lvbiBmYWlsZWQ6IG91dCBvZiByYW5nZSEnKQojZGVmaW5lIENIRUNLU0FGRVJFQUwoeCxrKSBJRih4PkhVR0UoMS5fIGspLk9SLng8LUhVR0UoMS5fIGspKSAgICAgICBDQUxMIEFCT1JUKF9fU1RBTVBfXywnUmVhbCBjb252ZXJzaW9uIGZhaWxlZDogb3V0IG9mIHJhbmdlIScpCiNlbGlmIENSQVkKI2RlZmluZSBDSEVDS1NBRkVJTlQoeCxrKSAgCiNkZWZpbmUgQ0hFQ0tTQUZFUkVBTCh4LGspIAojZWxzZQojZGVmaW5lIENIRUNLU0FGRUlOVCh4LGspICBJRih4PkhVR0UoMV8gICMjIGspLk9SLng8LUhVR0UoMV8gICMjIGspKSBDQUxMIEFCT1JUKF9fU1RBTVBfXywnSW50ZWdlciBjb252ZXJzaW9uIGZhaWxlZDogb3V0IG9mIHJhbmdlIScpCiNkZWZpbmUgQ0hFQ0tTQUZFUkVBTCh4LGspIElGKHg+SFVHRSgxLl8gIyMgaykuT1IueDwtSFVHRSgxLl8gIyMgaykpIENBTEwgQUJPUlQoX19TVEFNUF9fLCdSZWFsIGNvbnZlcnNpb24gZmFpbGVkOiBvdXQgb2YgcmFuZ2UhJykKI2VuZGlmCgoKISBUZXN0IGZvciBlcXVhbGl0eTogcmVhZCBkZXNjcmlwdGlvbiBpbiBtYXRodG9vbHMuZjkwIGZvciBmdXJ0aGVyIGluZm9zCiNkZWZpbmUgQUxNT1NURVFVQUxBQlNPTFVURSh4LHksdG9sKSAgKEFCUygoeCktKHkpKS5MRS4odG9sKSkKI2RlZmluZSBBTE1PU1RFUVVBTFJFTEFUSVZFKHgseSx0b2wpICAoQUJTKCh4KS0oeSkpLkxFLk1BWChBQlMoeCksQUJTKHkpKSoodG9sKSkKI2RlZmluZSBBTE1PU1RFUVVBTEFCU09SUkVMKHgseSx0b2wpICAoQUxNT1NURVFVQUxBQlNPTFVURSh4LHksdG9sKSAuT1IuICBBTE1PU1RFUVVBTFJFTEFUSVZFKHgseSx0b2wpKQojZGVmaW5lIEFMTU9TVEVRVUFMQUJTQU5EUkVMKHgseSx0b2wpIChBTE1PU1RFUVVBTEFCU09MVVRFKHgseSx0b2wpIC5BTkQuIEFMTU9TVEVRVUFMUkVMQVRJVkUoeCx5LHRvbCkpCgohIERlZmluZSBNUEkgc3BlY2lmaWMgd3JpdGUgc2hvcnRjdXRzCiNpZiBVU0VfTVBJCiMgIGRlZmluZSBTV1JJVEUgSUYoTVBJUm9vdCkgV1JJVEUKIyAgZGVmaW5lIElQV1JJVEUoYSxiKSBXUklURShhLGIpbXlSYW5rLAojICBkZWZpbmUgR0VUVElNRShhKSBhPU1QSV9XVElNRSgpCiNlbHNlCiMgIGRlZmluZSBTV1JJVEUgV1JJVEUKIyAgZGVmaW5lIElQV1JJVEUgV1JJVEUKIyAgZGVmaW5lIEdFVFRJTUUoYSkgQ0FMTCBDUFVfVElNRShhKQojZW5kaWYKI2RlZmluZSBFUlJXUklURShhLGIpIENBTEwgQ3JlYXRlRXJyRmlsZSgpOyBJRihFcnJvckZpbGVzKSBXUklURShVTklUX2Vyck91dCxiKSAKI2RlZmluZSBMT0dXUklURShhLGIpIElGKExvZ2dpbmcpIFdSSVRFKFVOSVRfbG9nT3V0LGIpCiNkZWZpbmUgU0RFQUxMT0NBVEUoQSkgSUYoQUxMT0NBVEVEKEEpKSAgREVBTExPQ0FURShBKQojZGVmaW5lIEFERUFMTE9DQVRFKEEpIElGKEFTU09DSUFURUQoQSkpIERFQUxMT0NBVEUoQSkKCiEgTG9vcCB2YXJpYWJsZXMKI2RlZmluZSBQUF9JSksgICAgIGksaixrCiNkZWZpbmUgUFBfaWogICAgICBpLGoKCiEgUHJlZGVmaW5lZCAiUEFSQU1FVEVSLWxpa2UiIHZhcmlhYmxlcwojZGVmaW5lIFhJX01JTlVTICAgNQojZGVmaW5lIFhJX1BMVVMgICAgMwojZGVmaW5lIEVUQV9NSU5VUyAgMgojZGVmaW5lIEVUQV9QTFVTICAgNAojZGVmaW5lIFpFVEFfTUlOVVMgMQojZGVmaW5lIFpFVEFfUExVUyAgNgoKISBFbnRyeSBwb3NpdGlvbiBpbiBTaWRlVG9FbGVtCiNkZWZpbmUgUzJFX0VMRU1fSUQgICAgICAgIDEKI2RlZmluZSBTMkVfTkJfRUxFTV9JRCAgICAgMgojZGVmaW5lIFMyRV9MT0NfU0lERV9JRCAgICAzCiNkZWZpbmUgUzJFX05CX0xPQ19TSURFX0lEIDQKI2RlZmluZSBTMkVfRkxJUCAgICAgICAgICAgNQoKISBFbnRyeSBwb3NpdGlvbiBpbiBFbGVtVG9TaWRlCiNkZWZpbmUgRTJTX1NJREVfSUQgMQojZGVmaW5lIEUyU19GTElQICAgIDIKCiEgRW50cnkgcG9zaXRpb24gaW4gQkMKI2RlZmluZSBNSV9TSURFSUQgMQojZGVmaW5lIE1JX0ZMSVAgICAyCgohIEVudHJ5IHBvc2l0aW9uIGluIEJDCiNkZWZpbmUgQkNfVFlQRSAgMQojZGVmaW5lIEJDX1NUQVRFIDIKI2RlZmluZSBCQ19BTFBIQSAzCgohIEVudHJ5IHBvc2l0aW9uIGluIEJDCiNkZWZpbmUgU0VORCAxCiNkZWZpbmUgUkVDViAyCgohI2RlZmluZSBERUJVR01FU0gKCiNpZiAhKEZWX0VOQUJMRUQpCiNkZWZpbmUgRlZfRWxlbXMoeCkgMAojZGVmaW5lIEZWX0VsZW1zX21hc3Rlcih4KSAwCiNkZWZpbmUgRlZfRWxlbXNfc2xhdmUoeCkgMAojZGVmaW5lIEZWX0VsZW1zX1N1bSh4KSAwCiNlbmRpZgoKI2RlZmluZSBLSUxMKHgpIFNXUklURSgqLCopIF9fRklMRV9fLF9fTElORV9fLHg7IHN0b3AKCiEgb3ZlcmludGVncmF0aW9uCiNkZWZpbmUgQ1VUT0ZGIDEKI2RlZmluZSBDVVRPRkZDT05TIDIKCiEgUFVSRSBkZWJ1ZyBzd2l0Y2gKI2lmIERFQlVHCiNkZWZpbmUgUFBVUkUKI2Vsc2UKI2RlZmluZSBQUFVSRSBQVVJFCiNlbmRpZgoKITJkIGZ1bmN0aW9uYWxpdHkKI2lmIChQUF9kaW09PTIpCiNkZWZpbmUgWkRJTShhKSAwCiNkZWZpbmUgUFBfTlogICAwCiNkZWZpbmUgRElNViAgICAxOjIKI2Vsc2UKI2RlZmluZSBaRElNKGEpIGEKI2RlZmluZSBQUF9OWiAgIFBQX04KI2RlZmluZSBESU1WICAgIDE6MwojZW5kaWYKAAAAAAAAAAANFAAAAAAAAAAAAAAAAAAAAAAAAA0UAAAAAAAAAAAAAAAAAAAAAAAADRQAAAAAAAAAAAAAAAAAAAAAAAANFAAAAAAAAAAAAAAAAAAAAAAAAA0UAAAAAAAAAAAAAAAAAAAAAAAADRQAAAAAAAAAAAAAAAAAAAAAAAANFAAAAAAAAAAAAAAAAAAAAAAAAA0UAAAAAAAAAAAAAAAAAAAAAAAADRQAAAAAAAAAAAAAAAAAAAAAAAANFAAAAAAAAAAAAAAAAAAAAAAAAA0UAAAAAAAAAAAAAA",
					"LwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABsDAAAAAAAAGwMAAAAAAAAAAAAAAAA8L8"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "\n#define"
					},
					"CAAAAC8RAAAAAAAAMBEAAAAAAAAAAAAAMBEAAAAAAAAxEQAAAAAAAAAAAAAxEQAAAAAAADIRAAAAAAAAAAAAADIRAAAAAAAAMxEAAAAAAAAAAAAAMxEAAAAAAAA0EQAAAAAAAAAAAAA0EQAAAAAAADURAAAAAAAAAAAAADURAAAAAAAANhEAAAAAAAAAAAAANhEAAAAAAAA3EQAAAAAAAAAAAAA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALxEAAAAAAAAvEQAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": " INTERFACE_L"
					},
					"DAAAADcRAAAAAAAAOBEAAAAAAAAAAAAAOBEAAAAAAAA5EQAAAAAAAAAAAAA5EQAAAAAAADoRAAAAAAAAAAAAADoRAAAAAAAAOxEAAAAAAAAAAAAAOxEAAAAAAAA8EQAAAAAAAAAAAAA8EQAAAAAAAD0RAAAAAAAAAAAAAD0RAAAAAAAAPhEAAAAAAAAAAAAAPhEAAAAAAAA/EQAAAAAAAAAAAAA/EQAAAAAAAEARAAAAAAAAAAAAAEARAAAAAAAAQREAAAAAAAAAAAAAQREAAAAAAABCEQAAAAAAAAAAAABCEQAAAAAAAEMRAAAAAAAAAAAAAA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANxEAAAAAAAA3EQAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert_completion",
					{
						"completion": "INTERFACE_ELEMRECV",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "INTERFACE_ELEMRECV"
					},
					"AgAAADgRAAAAAAAAOBEAAAAAAAALAAAASU5URVJGQUNFX0w4EQAAAAAAAEoRAAAAAAAAAAAAAA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQxEAAAAAAABDEQAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					8,
					"left_delete",
					null,
					"CAAAAEkRAAAAAAAASREAAAAAAAABAAAAVkgRAAAAAAAASBEAAAAAAAABAAAAQ0cRAAAAAAAARxEAAAAAAAABAAAARUYRAAAAAAAARhEAAAAAAAABAAAAUkURAAAAAAAARREAAAAAAAABAAAATUQRAAAAAAAARBEAAAAAAAABAAAARUMRAAAAAAAAQxEAAAAAAAABAAAATEIRAAAAAAAAQhEAAAAAAAABAAAARQ",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAShEAAAAAAABKEQAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "L"
					},
					"AQAAAEIRAAAAAAAAQxEAAAAAAAAAAAAA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQhEAAAAAAABCEQAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEMRAAAAAAAARBEAAAAAAAAAAAAA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQxEAAAAAAABDEQAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert_completion",
					{
						"completion": "b",
						"format": "text",
						"keep_prefix": false,
						"must_insert": true,
						"trigger": "b"
					},
					"AQAAAEQRAAAAAAAARREAAAAAAAAAAAAA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARBEAAAAAAABEEQAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"left_delete",
					null,
					"AQAAAEQRAAAAAAAARBEAAAAAAAABAAAAYg",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARREAAAAAAABFEQAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert_completion",
					{
						"completion": "connection",
						"format": "text",
						"keep_prefix": false,
						"must_insert": true,
						"trigger": "connection"
					},
					"AQAAAEQRAAAAAAAAThEAAAAAAAAAAAAA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARBEAAAAAAABEEQAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"left_delete",
					null,
					"AQAAAE0RAAAAAAAATREAAAAAAAABAAAAbg",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAThEAAAAAAABOEQAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"left_delete",
					null,
					"AQAAAEQRAAAAAAAARBEAAAAAAAAJAAAAY29ubmVjdGlv",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATREAAAAAAABEEQAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": " \t\t"
					},
					"AwAAAEQRAAAAAAAARREAAAAAAAAAAAAARREAAAAAAABIEQAAAAAAAAAAAABIEQAAAAAAAEwRAAAAAAAAAAAAAA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARBEAAAAAAABEEQAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"left_delete",
					null,
					"AQAAAEsRAAAAAAAASxEAAAAAAAABAAAAIA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATBEAAAAAAABMEQAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": "15"
					},
					"AgAAAEsRAAAAAAAATBEAAAAAAAAAAAAATBEAAAAAAABNEQAAAAAAAAAAAAA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASxEAAAAAAABLEQAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"left_delete",
					null,
					"AQAAAGoRAAAAAAAAahEAAAAAAAABAAAANA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAaxEAAAAAAABrEQAAAAAAAAAAAAAAAG1A"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AQAAAGoRAAAAAAAAaxEAAAAAAAAAAAAA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAahEAAAAAAABqEQAAAAAAAAAAAAAAAPC/"
				],
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAArFAAAIT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQohIENvcHlyaWdodCAoYykgMjAxMC0yMDE2ICBQcm9mLiBDbGF1cy1EaWV0ZXIgTXVueiAKISBUaGlzIGZpbGUgaXMgcGFydCBvZiBGTEVYSSwgYSBoaWdoLW9yZGVyIGFjY3VyYXRlIGZyYW1ld29yayBmb3IgbnVtZXJpY2FsbHkgc29sdmluZyBQREVzIHdpdGggZGlzY29udGludW91cyBHYWxlcmtpbiBtZXRob2RzLgohIEZvciBtb3JlIGluZm9ybWF0aW9uIHNlZSBodHRwczovL3d3dy5mbGV4aS1wcm9qZWN0Lm9yZyBhbmQgaHR0cHM6Ly9ucmcuaWFnLnVuaS1zdHV0dGdhcnQuZGUvCiEKISBGTEVYSSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5IGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgCiEgYXMgcHVibGlzaGVkIGJ5IHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uCiEKISBGTEVYSSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLCBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eQohIG9mIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gU2VlIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSB2My4wIGZvciBtb3JlIGRldGFpbHMuCiEKISBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhbG9uZyB3aXRoIEZMRVhJLiBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uCiE9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KIT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiEgSGVyZSwgcHJlcHJvY2Vzc29yIHZhcmlhYmxlcyBmb3IgZGlmZmVyZW50IGVxdWF0aW9uIHN5c3RlbXMgYW5kIGFiYnJldmlhdGlvbnMgZm9yIHNwZWNpZmljIGV4cHJlc3Npb25zIGFyZSBkZWZpbmVkCiE9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQoKISBBYmJyZXZhdGlvbnMKI2lmZGVmIFNVTgojICBkZWZpbmUgX19EQVRFX18gJ19fVElNRV9fIGFuZCBfX0RBVEVfXyBub3QnCiMgIGRlZmluZSBfX1RJTUVfXyAnYXZhaWxhYmxlIGZvciBTVU4gQ09NUElMRVInCiMgIGRlZmluZSBJRUVFX0lTTkFOCiNlbGlmIFNYCiMgIGRlZmluZSBfX0RBVEVfXyAnX19USU1FX18gYW5kIF9fREFURV9fIG5vdCcKIyAgZGVmaW5lIF9fVElNRV9fICdhdmFpbGFibGUgZm9yIFNYIENPTVBJTEVSJwojZWxpZiBQR0kKIyAgZGVmaW5lIE5PX0lTTkFOCiNlbmRpZgojaWZuZGVmIF9fRklMRU5BTUVfXyAKI2RlZmluZSBfX0ZJTEVOQU1FX18gX19GSUxFX18KI2VuZGlmCiNkZWZpbmUgX19TVEFNUF9fIF9fRklMRU5BTUVfXyxfX0xJTkVfXyxfX0RBVEVfXyxfX1RJTUVfXwoKI2lmZGVmIEdOVQojICBkZWZpbmUgSUVFRV9JU19OQU4gSVNOQU4KI2VuZGlmCgojZGVmaW5lIFNJWkVPRl9GKHgpIChTVE9SQUdFX1NJWkUoeCkvOCkKCiNpZmRlZiBHTlUKI2RlZmluZSBDSEVDS1NBRkVJTlQoeCxrKSAgSUYoeD5IVUdFKDFfICBrKS5PUi54PC1IVUdFKDFfICBrKSkgICAgICAgQ0FMTCBBQk9SVChfX1NUQU1QX18sJ0ludGVnZXIgY29udmVyc2lvbiBmYWlsZWQ6IG91dCBvZiByYW5nZSEnKQojZGVmaW5lIENIRUNLU0FGRVJFQUwoeCxrKSBJRih4PkhVR0UoMS5fIGspLk9SLng8LUhVR0UoMS5fIGspKSAgICAgICBDQUxMIEFCT1JUKF9fU1RBTVBfXywnUmVhbCBjb252ZXJzaW9uIGZhaWxlZDogb3V0IG9mIHJhbmdlIScpCiNlbGlmIENSQVkKI2RlZmluZSBDSEVDS1NBRkVJTlQoeCxrKSAgCiNkZWZpbmUgQ0hFQ0tTQUZFUkVBTCh4LGspIAojZWxzZQojZGVmaW5lIENIRUNLU0FGRUlOVCh4LGspICBJRih4PkhVR0UoMV8gICMjIGspLk9SLng8LUhVR0UoMV8gICMjIGspKSBDQUxMIEFCT1JUKF9fU1RBTVBfXywnSW50ZWdlciBjb252ZXJzaW9uIGZhaWxlZDogb3V0IG9mIHJhbmdlIScpCiNkZWZpbmUgQ0hFQ0tTQUZFUkVBTCh4LGspIElGKHg+SFVHRSgxLl8gIyMgaykuT1IueDwtSFVHRSgxLl8gIyMgaykpIENBTEwgQUJPUlQoX19TVEFNUF9fLCdSZWFsIGNvbnZlcnNpb24gZmFpbGVkOiBvdXQgb2YgcmFuZ2UhJykKI2VuZGlmCgoKISBUZXN0IGZvciBlcXVhbGl0eTogcmVhZCBkZXNjcmlwdGlvbiBpbiBtYXRodG9vbHMuZjkwIGZvciBmdXJ0aGVyIGluZm9zCiNkZWZpbmUgQUxNT1NURVFVQUxBQlNPTFVURSh4LHksdG9sKSAgKEFCUygoeCktKHkpKS5MRS4odG9sKSkKI2RlZmluZSBBTE1PU1RFUVVBTFJFTEFUSVZFKHgseSx0b2wpICAoQUJTKCh4KS0oeSkpLkxFLk1BWChBQlMoeCksQUJTKHkpKSoodG9sKSkKI2RlZmluZSBBTE1PU1RFUVVBTEFCU09SUkVMKHgseSx0b2wpICAoQUxNT1NURVFVQUxBQlNPTFVURSh4LHksdG9sKSAuT1IuICBBTE1PU1RFUVVBTFJFTEFUSVZFKHgseSx0b2wpKQojZGVmaW5lIEFMTU9TVEVRVUFMQUJTQU5EUkVMKHgseSx0b2wpIChBTE1PU1RFUVVBTEFCU09MVVRFKHgseSx0b2wpIC5BTkQuIEFMTU9TVEVRVUFMUkVMQVRJVkUoeCx5LHRvbCkpCgohIERlZmluZSBNUEkgc3BlY2lmaWMgd3JpdGUgc2hvcnRjdXRzCiNpZiBVU0VfTVBJCiMgIGRlZmluZSBTV1JJVEUgSUYoTVBJUm9vdCkgV1JJVEUKIyAgZGVmaW5lIElQV1JJVEUoYSxiKSBXUklURShhLGIpbXlSYW5rLAojICBkZWZpbmUgR0VUVElNRShhKSBhPU1QSV9XVElNRSgpCiNlbHNlCiMgIGRlZmluZSBTV1JJVEUgV1JJVEUKIyAgZGVmaW5lIElQV1JJVEUgV1JJVEUKIyAgZGVmaW5lIEdFVFRJTUUoYSkgQ0FMTCBDUFVfVElNRShhKQojZW5kaWYKI2RlZmluZSBFUlJXUklURShhLGIpIENBTEwgQ3JlYXRlRXJyRmlsZSgpOyBJRihFcnJvckZpbGVzKSBXUklURShVTklUX2Vyck91dCxiKSAKI2RlZmluZSBMT0dXUklURShhLGIpIElGKExvZ2dpbmcpIFdSSVRFKFVOSVRfbG9nT3V0LGIpCiNkZWZpbmUgU0RFQUxMT0NBVEUoQSkgSUYoQUxMT0NBVEVEKEEpKSAgREVBTExPQ0FURShBKQojZGVmaW5lIEFERUFMTE9DQVRFKEEpIElGKEFTU09DSUFURUQoQSkpIERFQUxMT0NBVEUoQSkKCiEgTG9vcCB2YXJpYWJsZXMKI2RlZmluZSBQUF9JSksgICAgIGksaixrCiNkZWZpbmUgUFBfaWogICAgICBpLGoKCiEgUHJlZGVmaW5lZCAiUEFSQU1FVEVSLWxpa2UiIHZhcmlhYmxlcwojZGVmaW5lIFhJX01JTlVTICAgNQojZGVmaW5lIFhJX1BMVVMgICAgMwojZGVmaW5lIEVUQV9NSU5VUyAgMgojZGVmaW5lIEVUQV9QTFVTICAgNAojZGVmaW5lIFpFVEFfTUlOVVMgMQojZGVmaW5lIFpFVEFfUExVUyAgNgoKISBFbnRyeSBwb3NpdGlvbiBpbiBTaWRlVG9FbGVtCiNkZWZpbmUgUzJFX0VMRU1fSUQgICAgICAgIDEKI2RlZmluZSBTMkVfTkJfRUxFTV9JRCAgICAgMgojZGVmaW5lIFMyRV9MT0NfU0lERV9JRCAgICAzCiNkZWZpbmUgUzJFX05CX0xPQ19TSURFX0lEIDQKI2RlZmluZSBTMkVfRkxJUCAgICAgICAgICAgNQoKISBFbnRyeSBwb3NpdGlvbiBpbiBFbGVtVG9TaWRlCiNkZWZpbmUgRTJTX1NJREVfSUQgMQojZGVmaW5lIEUyU19GTElQICAgIDIKCiEgRGVmaW5pdGlvbnMgZm9yIHRoZSB+aW50ZXJmYWNlfiBjb25uZWN0aW9uCiNkZWZpbmUgSU5URVJGQUNFX0VMRU1TRU5EIDEKI2RlZmluZSBJTlRFUkZBQ0VfRUxFTVJFQ1YgMgojZGVmaW5lIElOVEVSRkFDRV9YSSAgICAgICAzCiNkZWZpbmUgSU5URVJGQUNFX0VUQSAgICAgIDQKI2RlZmluZSBJTlRFUkZBQ0VfWkVUQSAgICAgNQojZGVmaW5lIElOVEVSRkFDRV9UQU5HVkVDMSA2OjgKI2RlZmluZSBJTlRFUkZBQ0VfVEFOR1ZFQzIgOToxMQojZGVmaW5lIElOVEVSRkFDRV9ESVIgICAgICAxMgojZGVmaW5lIElOVEVSRkFDRV9QICAgICAgICAxMwojZGVmaW5lIElOVEVSRkFDRV9RICAgICAgICAxNAojZGVmaW5lIElOVEVSRkFDRV9MICAgICAgICAxNQojZGVmaW5lIE5fSU5URVJGQUNFX1BBUkFNUyAxNQoKCiEgRW50cnkgcG9zaXRpb24gaW4gQkMKI2RlZmluZSBNSV9TSURFSUQgMQojZGVmaW5lIE1JX0ZMSVAgICAyCgohIEVudHJ5IHBvc2l0aW9uIGluIEJDCiNkZWZpbmUgQkNfVFlQRSAgMQojZGVmaW5lIEJDX1NUQVRFIDIKI2RlZmluZSBCQ19BTFBIQSAzCgohIEVudHJ5IHBvc2l0aW9uIGluIEJDCiNkZWZpbmUgU0VORCAxCiNkZWZpbmUgUkVDViAyCgohI2RlZmluZSBERUJVR01FU0gKCiNpZiAhKEZWX0VOQUJMRUQpCiNkZWZpbmUgRlZfRWxlbXMoeCkgMAojZGVmaW5lIEZWX0VsZW1zX21hc3Rlcih4KSAwCiNkZWZpbmUgRlZfRWxlbXNfc2xhdmUoeCkgMAojZGVmaW5lIEZWX0VsZW1zX1N1bSh4KSAwCiNlbmRpZgoKI2RlZmluZSBLSUxMKHgpIFNXUklURSgqLCopIF9fRklMRV9fLF9fTElORV9fLHg7IHN0b3AKCiEgb3ZlcmludGVncmF0aW9uCiNkZWZpbmUgQ1VUT0ZGIDEKI2RlZmluZSBDVVRPRkZDT05TIDIKCiEgUFVSRSBkZWJ1ZyBzd2l0Y2gKI2lmIERFQlVHCiNkZWZpbmUgUFBVUkUKI2Vsc2UKI2RlZmluZSBQUFVSRSBQVVJFCiNlbmRpZgoKITJkIGZ1bmN0aW9uYWxpdHkKI2lmIChQUF9kaW09PTIpCiNkZWZpbmUgWkRJTShhKSAwCiNkZWZpbmUgUFBfTlogICAwCiNkZWZpbmUgRElNViAgICAxOjIKI2Vsc2UKI2RlZmluZSBaRElNKGEpIGEKI2RlZmluZSBQUF9OWiAgIFBQX04KI2RlZmluZSBESU1WICAgIDE6MwojZW5kaWYKAAAAAAAAAACWEgAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALAOAAAAAAAAsA4AAAAAAAAAAAAAAADwvw"
				],
				[
					2,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACWEgAAIT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQohIENvcHlyaWdodCAoYykgMjAxMC0yMDE2ICBQcm9mLiBDbGF1cy1EaWV0ZXIgTXVueiAKISBUaGlzIGZpbGUgaXMgcGFydCBvZiBGTEVYSSwgYSBoaWdoLW9yZGVyIGFjY3VyYXRlIGZyYW1ld29yayBmb3IgbnVtZXJpY2FsbHkgc29sdmluZyBQREVzIHdpdGggZGlzY29udGludW91cyBHYWxlcmtpbiBtZXRob2RzLgohIEZvciBtb3JlIGluZm9ybWF0aW9uIHNlZSBodHRwczovL3d3dy5mbGV4aS1wcm9qZWN0Lm9yZyBhbmQgaHR0cHM6Ly9ucmcuaWFnLnVuaS1zdHV0dGdhcnQuZGUvCiEKISBGTEVYSSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5IGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgCiEgYXMgcHVibGlzaGVkIGJ5IHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uCiEKISBGTEVYSSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLCBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eQohIG9mIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gU2VlIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSB2My4wIGZvciBtb3JlIGRldGFpbHMuCiEKISBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhbG9uZyB3aXRoIEZMRVhJLiBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uCiE9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KIT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiEgSGVyZSwgcHJlcHJvY2Vzc29yIHZhcmlhYmxlcyBmb3IgZGlmZmVyZW50IGVxdWF0aW9uIHN5c3RlbXMgYW5kIGFiYnJldmlhdGlvbnMgZm9yIHNwZWNpZmljIGV4cHJlc3Npb25zIGFyZSBkZWZpbmVkCiE9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQoKISBBYmJyZXZhdGlvbnMKI2lmZGVmIFNVTgojICBkZWZpbmUgX19EQVRFX18gJ19fVElNRV9fIGFuZCBfX0RBVEVfXyBub3QnCiMgIGRlZmluZSBfX1RJTUVfXyAnYXZhaWxhYmxlIGZvciBTVU4gQ09NUElMRVInCiMgIGRlZmluZSBJRUVFX0lTTkFOCiNlbGlmIFNYCiMgIGRlZmluZSBfX0RBVEVfXyAnX19USU1FX18gYW5kIF9fREFURV9fIG5vdCcKIyAgZGVmaW5lIF9fVElNRV9fICdhdmFpbGFibGUgZm9yIFNYIENPTVBJTEVSJwojZWxpZiBQR0kKIyAgZGVmaW5lIE5PX0lTTkFOCiNlbmRpZgojaWZuZGVmIF9fRklMRU5BTUVfXyAKI2RlZmluZSBfX0ZJTEVOQU1FX18gX19GSUxFX18KI2VuZGlmCiNkZWZpbmUgX19TVEFNUF9fIF9fRklMRU5BTUVfXyxfX0xJTkVfXyxfX0RBVEVfXyxfX1RJTUVfXwoKI2lmZGVmIEdOVQojICBkZWZpbmUgSUVFRV9JU19OQU4gSVNOQU4KI2VuZGlmCgojZGVmaW5lIFNJWkVPRl9GKHgpIChTVE9SQUdFX1NJWkUoeCkvOCkKCiNpZmRlZiBHTlUKI2RlZmluZSBDSEVDS1NBRkVJTlQoeCxrKSAgSUYoeD5IVUdFKDFfICBrKS5PUi54PC1IVUdFKDFfICBrKSkgICAgICAgQ0FMTCBBQk9SVChfX1NUQU1QX18sJ0ludGVnZXIgY29udmVyc2lvbiBmYWlsZWQ6IG91dCBvZiByYW5nZSEnKQojZGVmaW5lIENIRUNLU0FGRVJFQUwoeCxrKSBJRih4PkhVR0UoMS5fIGspLk9SLng8LUhVR0UoMS5fIGspKSAgICAgICBDQUxMIEFCT1JUKF9fU1RBTVBfXywnUmVhbCBjb252ZXJzaW9uIGZhaWxlZDogb3V0IG9mIHJhbmdlIScpCiNlbGlmIENSQVkKI2RlZmluZSBDSEVDS1NBRkVJTlQoeCxrKSAgCiNkZWZpbmUgQ0hFQ0tTQUZFUkVBTCh4LGspIAojZWxzZQojZGVmaW5lIENIRUNLU0FGRUlOVCh4LGspICBJRih4PkhVR0UoMV8gICMjIGspLk9SLng8LUhVR0UoMV8gICMjIGspKSBDQUxMIEFCT1JUKF9fU1RBTVBfXywnSW50ZWdlciBjb252ZXJzaW9uIGZhaWxlZDogb3V0IG9mIHJhbmdlIScpCiNkZWZpbmUgQ0hFQ0tTQUZFUkVBTCh4LGspIElGKHg+SFVHRSgxLl8gIyMgaykuT1IueDwtSFVHRSgxLl8gIyMgaykpIENBTEwgQUJPUlQoX19TVEFNUF9fLCdSZWFsIGNvbnZlcnNpb24gZmFpbGVkOiBvdXQgb2YgcmFuZ2UhJykKI2VuZGlmCgoKISBUZXN0IGZvciBlcXVhbGl0eTogcmVhZCBkZXNjcmlwdGlvbiBpbiBtYXRodG9vbHMuZjkwIGZvciBmdXJ0aGVyIGluZm9zCiNkZWZpbmUgQUxNT1NURVFVQUxBQlNPTFVURSh4LHksdG9sKSAgKEFCUygoeCktKHkpKS5MRS4odG9sKSkKI2RlZmluZSBBTE1PU1RFUVVBTFJFTEFUSVZFKHgseSx0b2wpICAoQUJTKCh4KS0oeSkpLkxFLk1BWChBQlMoeCksQUJTKHkpKSoodG9sKSkKI2RlZmluZSBBTE1PU1RFUVVBTEFCU09SUkVMKHgseSx0b2wpICAoQUxNT1NURVFVQUxBQlNPTFVURSh4LHksdG9sKSAuT1IuICBBTE1PU1RFUVVBTFJFTEFUSVZFKHgseSx0b2wpKQojZGVmaW5lIEFMTU9TVEVRVUFMQUJTQU5EUkVMKHgseSx0b2wpIChBTE1PU1RFUVVBTEFCU09MVVRFKHgseSx0b2wpIC5BTkQuIEFMTU9TVEVRVUFMUkVMQVRJVkUoeCx5LHRvbCkpCgohIERlZmluZSBNUEkgc3BlY2lmaWMgd3JpdGUgc2hvcnRjdXRzCiNpZiBVU0VfTVBJCiMgIGRlZmluZSBTV1JJVEUgSUYoTVBJUm9vdCkgV1JJVEUKIyAgZGVmaW5lIElQV1JJVEUoYSxiKSBXUklURShhLGIpbXlSYW5rLAojICBkZWZpbmUgR0VUVElNRShhKSBhPU1QSV9XVElNRSgpCiNlbHNlCiMgIGRlZmluZSBTV1JJVEUgV1JJVEUKIyAgZGVmaW5lIElQV1JJVEUgV1JJVEUKIyAgZGVmaW5lIEdFVFRJTUUoYSkgQ0FMTCBDUFVfVElNRShhKQojZW5kaWYKI2RlZmluZSBFUlJXUklURShhLGIpIENBTEwgQ3JlYXRlRXJyRmlsZSgpOyBJRihFcnJvckZpbGVzKSBXUklURShVTklUX2Vyck91dCxiKSAKI2RlZmluZSBMT0dXUklURShhLGIpIElGKExvZ2dpbmcpIFdSSVRFKFVOSVRfbG9nT3V0LGIpCiNkZWZpbmUgU0RFQUxMT0NBVEUoQSkgSUYoQUxMT0NBVEVEKEEpKSAgREVBTExPQ0FURShBKQojZGVmaW5lIEFERUFMTE9DQVRFKEEpIElGKEFTU09DSUFURUQoQSkpIERFQUxMT0NBVEUoQSkKCiEgTG9vcCB2YXJpYWJsZXMKI2RlZmluZSBQUF9JSksgICAgIGksaixrCiNkZWZpbmUgUFBfaWogICAgICBpLGoKCiEgUHJlZGVmaW5lZCAiUEFSQU1FVEVSLWxpa2UiIHZhcmlhYmxlcwojZGVmaW5lIFhJX01JTlVTICAgNQojZGVmaW5lIFhJX1BMVVMgICAgMwojZGVmaW5lIEVUQV9NSU5VUyAgMgojZGVmaW5lIEVUQV9QTFVTICAgNAojZGVmaW5lIFpFVEFfTUlOVVMgMQojZGVmaW5lIFpFVEFfUExVUyAgNgoKISBFbnRyeSBwb3NpdGlvbiBpbiBTaWRlVG9FbGVtCiNkZWZpbmUgUzJFX0VMRU1fSUQgICAgICAgIDEKI2RlZmluZSBTMkVfTkJfRUxFTV9JRCAgICAgMgojZGVmaW5lIFMyRV9MT0NfU0lERV9JRCAgICAzCiNkZWZpbmUgUzJFX05CX0xPQ19TSURFX0lEIDQKI2RlZmluZSBTMkVfRkxJUCAgICAgICAgICAgNQoKISBFbnRyeSBwb3NpdGlvbiBpbiBFbGVtVG9TaWRlCiNkZWZpbmUgRTJTX1NJREVfSUQgMQojZGVmaW5lIEUyU19GTElQICAgIDIKCiEgRW50cnkgcG9zaXRpb24gaW4gQkMKI2RlZmluZSBNSV9TSURFSUQgMQojZGVmaW5lIE1JX0ZMSVAgICAyCgohIEVudHJ5IHBvc2l0aW9uIGluIEJDCiNkZWZpbmUgQkNfVFlQRSAgMQojZGVmaW5lIEJDX1NUQVRFIDIKI2RlZmluZSBCQ19BTFBIQSAzCgohIEVudHJ5IHBvc2l0aW9uIGluIEJDCiNkZWZpbmUgU0VORCAxCiNkZWZpbmUgUkVDViAyCgohI2RlZmluZSBERUJVR01FU0gKCiNpZiAhKEZWX0VOQUJMRUQpCiNkZWZpbmUgRlZfRWxlbXMoeCkgMAojZGVmaW5lIEZWX0VsZW1zX21hc3Rlcih4KSAwCiNkZWZpbmUgRlZfRWxlbXNfc2xhdmUoeCkgMAojZGVmaW5lIEZWX0VsZW1zX1N1bSh4KSAwCiNlbmRpZgoKI2RlZmluZSBLSUxMKHgpIFNXUklURSgqLCopIF9fRklMRV9fLF9fTElORV9fLHg7IHN0b3AKCiEgb3ZlcmludGVncmF0aW9uCiNkZWZpbmUgQ1VUT0ZGIDEKI2RlZmluZSBDVVRPRkZDT05TIDIKCiEgUFVSRSBkZWJ1ZyBzd2l0Y2gKI2lmIERFQlVHCiNkZWZpbmUgUFBVUkUKI2Vsc2UKI2RlZmluZSBQUFVSRSBQVVJFCiNlbmRpZgoKITJkIGZ1bmN0aW9uYWxpdHkKI2lmIChQUF9kaW09PTIpCiNkZWZpbmUgWkRJTShhKSAwCiNkZWZpbmUgUFBfTlogICAwCiNkZWZpbmUgRElNViAgICAxOjIKI2Vsc2UKI2RlZmluZSBaRElNKGEpIGEKI2RlZmluZSBQUF9OWiAgIFBQX04KI2RlZmluZSBESU1WICAgIDE6MwojZW5kaWYKAAAAAAAAAAArFAAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALAOAAAAAAAAsA4AAAAAAAAAAAAAAADwvw"
				],
				[
					3,
					1,
					"revert",
					null,
					"CAAAAAAAAAAAAAAAAAAAAAAAAAArFAAAIT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQohIENvcHlyaWdodCAoYykgMjAxMC0yMDE2ICBQcm9mLiBDbGF1cy1EaWV0ZXIgTXVueiAKISBUaGlzIGZpbGUgaXMgcGFydCBvZiBGTEVYSSwgYSBoaWdoLW9yZGVyIGFjY3VyYXRlIGZyYW1ld29yayBmb3IgbnVtZXJpY2FsbHkgc29sdmluZyBQREVzIHdpdGggZGlzY29udGludW91cyBHYWxlcmtpbiBtZXRob2RzLgohIEZvciBtb3JlIGluZm9ybWF0aW9uIHNlZSBodHRwczovL3d3dy5mbGV4aS1wcm9qZWN0Lm9yZyBhbmQgaHR0cHM6Ly9ucmcuaWFnLnVuaS1zdHV0dGdhcnQuZGUvCiEKISBGTEVYSSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5IGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgCiEgYXMgcHVibGlzaGVkIGJ5IHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uCiEKISBGTEVYSSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLCBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eQohIG9mIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gU2VlIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSB2My4wIGZvciBtb3JlIGRldGFpbHMuCiEKISBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhbG9uZyB3aXRoIEZMRVhJLiBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uCiE9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KIT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiEgSGVyZSwgcHJlcHJvY2Vzc29yIHZhcmlhYmxlcyBmb3IgZGlmZmVyZW50IGVxdWF0aW9uIHN5c3RlbXMgYW5kIGFiYnJldmlhdGlvbnMgZm9yIHNwZWNpZmljIGV4cHJlc3Npb25zIGFyZSBkZWZpbmVkCiE9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQoKISBBYmJyZXZhdGlvbnMKI2lmZGVmIFNVTgojICBkZWZpbmUgX19EQVRFX18gJ19fVElNRV9fIGFuZCBfX0RBVEVfXyBub3QnCiMgIGRlZmluZSBfX1RJTUVfXyAnYXZhaWxhYmxlIGZvciBTVU4gQ09NUElMRVInCiMgIGRlZmluZSBJRUVFX0lTTkFOCiNlbGlmIFNYCiMgIGRlZmluZSBfX0RBVEVfXyAnX19USU1FX18gYW5kIF9fREFURV9fIG5vdCcKIyAgZGVmaW5lIF9fVElNRV9fICdhdmFpbGFibGUgZm9yIFNYIENPTVBJTEVSJwojZWxpZiBQR0kKIyAgZGVmaW5lIE5PX0lTTkFOCiNlbmRpZgojaWZuZGVmIF9fRklMRU5BTUVfXyAKI2RlZmluZSBfX0ZJTEVOQU1FX18gX19GSUxFX18KI2VuZGlmCiNkZWZpbmUgX19TVEFNUF9fIF9fRklMRU5BTUVfXyxfX0xJTkVfXyxfX0RBVEVfXyxfX1RJTUVfXwoKI2lmZGVmIEdOVQojICBkZWZpbmUgSUVFRV9JU19OQU4gSVNOQU4KI2VuZGlmCgojZGVmaW5lIFNJWkVPRl9GKHgpIChTVE9SQUdFX1NJWkUoeCkvOCkKCiNpZmRlZiBHTlUKI2RlZmluZSBDSEVDS1NBRkVJTlQoeCxrKSAgSUYoeD5IVUdFKDFfICBrKS5PUi54PC1IVUdFKDFfICBrKSkgICAgICAgQ0FMTCBBQk9SVChfX1NUQU1QX18sJ0ludGVnZXIgY29udmVyc2lvbiBmYWlsZWQ6IG91dCBvZiByYW5nZSEnKQojZGVmaW5lIENIRUNLU0FGRVJFQUwoeCxrKSBJRih4PkhVR0UoMS5fIGspLk9SLng8LUhVR0UoMS5fIGspKSAgICAgICBDQUxMIEFCT1JUKF9fU1RBTVBfXywnUmVhbCBjb252ZXJzaW9uIGZhaWxlZDogb3V0IG9mIHJhbmdlIScpCiNlbGlmIENSQVkKI2RlZmluZSBDSEVDS1NBRkVJTlQoeCxrKSAgCiNkZWZpbmUgQ0hFQ0tTQUZFUkVBTCh4LGspIAojZWxzZQojZGVmaW5lIENIRUNLU0FGRUlOVCh4LGspICBJRih4PkhVR0UoMV8gICMjIGspLk9SLng8LUhVR0UoMV8gICMjIGspKSBDQUxMIEFCT1JUKF9fU1RBTVBfXywnSW50ZWdlciBjb252ZXJzaW9uIGZhaWxlZDogb3V0IG9mIHJhbmdlIScpCiNkZWZpbmUgQ0hFQ0tTQUZFUkVBTCh4LGspIElGKHg+SFVHRSgxLl8gIyMgaykuT1IueDwtSFVHRSgxLl8gIyMgaykpIENBTEwgQUJPUlQoX19TVEFNUF9fLCdSZWFsIGNvbnZlcnNpb24gZmFpbGVkOiBvdXQgb2YgcmFuZ2UhJykKI2VuZGlmCgoKISBUZXN0IGZvciBlcXVhbGl0eTogcmVhZCBkZXNjcmlwdGlvbiBpbiBtYXRodG9vbHMuZjkwIGZvciBmdXJ0aGVyIGluZm9zCiNkZWZpbmUgQUxNT1NURVFVQUxBQlNPTFVURSh4LHksdG9sKSAgKEFCUygoeCktKHkpKS5MRS4odG9sKSkKI2RlZmluZSBBTE1PU1RFUVVBTFJFTEFUSVZFKHgseSx0b2wpICAoQUJTKCh4KS0oeSkpLkxFLk1BWChBQlMoeCksQUJTKHkpKSoodG9sKSkKI2RlZmluZSBBTE1PU1RFUVVBTEFCU09SUkVMKHgseSx0b2wpICAoQUxNT1NURVFVQUxBQlNPTFVURSh4LHksdG9sKSAuT1IuICBBTE1PU1RFUVVBTFJFTEFUSVZFKHgseSx0b2wpKQojZGVmaW5lIEFMTU9TVEVRVUFMQUJTQU5EUkVMKHgseSx0b2wpIChBTE1PU1RFUVVBTEFCU09MVVRFKHgseSx0b2wpIC5BTkQuIEFMTU9TVEVRVUFMUkVMQVRJVkUoeCx5LHRvbCkpCgohIERlZmluZSBNUEkgc3BlY2lmaWMgd3JpdGUgc2hvcnRjdXRzCiNpZiBVU0VfTVBJCiMgIGRlZmluZSBTV1JJVEUgSUYoTVBJUm9vdCkgV1JJVEUKIyAgZGVmaW5lIElQV1JJVEUoYSxiKSBXUklURShhLGIpbXlSYW5rLAojICBkZWZpbmUgR0VUVElNRShhKSBhPU1QSV9XVElNRSgpCiNlbHNlCiMgIGRlZmluZSBTV1JJVEUgV1JJVEUKIyAgZGVmaW5lIElQV1JJVEUgV1JJVEUKIyAgZGVmaW5lIEdFVFRJTUUoYSkgQ0FMTCBDUFVfVElNRShhKQojZW5kaWYKI2RlZmluZSBFUlJXUklURShhLGIpIENBTEwgQ3JlYXRlRXJyRmlsZSgpOyBJRihFcnJvckZpbGVzKSBXUklURShVTklUX2Vyck91dCxiKSAKI2RlZmluZSBMT0dXUklURShhLGIpIElGKExvZ2dpbmcpIFdSSVRFKFVOSVRfbG9nT3V0LGIpCiNkZWZpbmUgU0RFQUxMT0NBVEUoQSkgSUYoQUxMT0NBVEVEKEEpKSAgREVBTExPQ0FURShBKQojZGVmaW5lIEFERUFMTE9DQVRFKEEpIElGKEFTU09DSUFURUQoQSkpIERFQUxMT0NBVEUoQSkKCiEgTG9vcCB2YXJpYWJsZXMKI2RlZmluZSBQUF9JSksgICAgIGksaixrCiNkZWZpbmUgUFBfaWogICAgICBpLGoKCiEgUHJlZGVmaW5lZCAiUEFSQU1FVEVSLWxpa2UiIHZhcmlhYmxlcwojZGVmaW5lIFhJX01JTlVTICAgNQojZGVmaW5lIFhJX1BMVVMgICAgMwojZGVmaW5lIEVUQV9NSU5VUyAgMgojZGVmaW5lIEVUQV9QTFVTICAgNAojZGVmaW5lIFpFVEFfTUlOVVMgMQojZGVmaW5lIFpFVEFfUExVUyAgNgoKISBFbnRyeSBwb3NpdGlvbiBpbiBTaWRlVG9FbGVtCiNkZWZpbmUgUzJFX0VMRU1fSUQgICAgICAgIDEKI2RlZmluZSBTMkVfTkJfRUxFTV9JRCAgICAgMgojZGVmaW5lIFMyRV9MT0NfU0lERV9JRCAgICAzCiNkZWZpbmUgUzJFX05CX0xPQ19TSURFX0lEIDQKI2RlZmluZSBTMkVfRkxJUCAgICAgICAgICAgNQoKISBFbnRyeSBwb3NpdGlvbiBpbiBFbGVtVG9TaWRlCiNkZWZpbmUgRTJTX1NJREVfSUQgMQojZGVmaW5lIEUyU19GTElQICAgIDIKCiEgRGVmaW5pdGlvbnMgZm9yIHRoZSB+aW50ZXJmYWNlfiBjb25uZWN0aW9uCiNkZWZpbmUgSU5URVJGQUNFX0VMRU1TRU5EIDEKI2RlZmluZSBJTlRFUkZBQ0VfRUxFTVJFQ1YgMgojZGVmaW5lIElOVEVSRkFDRV9YSSAgICAgICAzCiNkZWZpbmUgSU5URVJGQUNFX0VUQSAgICAgIDQKI2RlZmluZSBJTlRFUkZBQ0VfWkVUQSAgICAgNQojZGVmaW5lIElOVEVSRkFDRV9UQU5HVkVDMSA2OjgKI2RlZmluZSBJTlRFUkZBQ0VfVEFOR1ZFQzIgOToxMQojZGVmaW5lIElOVEVSRkFDRV9ESVIgICAgICAxMgojZGVmaW5lIElOVEVSRkFDRV9QICAgICAgICAxMwojZGVmaW5lIElOVEVSRkFDRV9RICAgICAgICAxNAojZGVmaW5lIElOVEVSRkFDRV9MICAgICAgICAxNQojZGVmaW5lIE5fSU5URVJGQUNFX1BBUkFNUyAxNQoKCiEgRW50cnkgcG9zaXRpb24gaW4gQkMKI2RlZmluZSBNSV9TSURFSUQgMQojZGVmaW5lIE1JX0ZMSVAgICAyCgohIEVudHJ5IHBvc2l0aW9uIGluIEJDCiNkZWZpbmUgQkNfVFlQRSAgMQojZGVmaW5lIEJDX1NUQVRFIDIKI2RlZmluZSBCQ19BTFBIQSAzCgohIEVudHJ5IHBvc2l0aW9uIGluIEJDCiNkZWZpbmUgU0VORCAxCiNkZWZpbmUgUkVDViAyCgohI2RlZmluZSBERUJVR01FU0gKCiNpZiAhKEZWX0VOQUJMRUQpCiNkZWZpbmUgRlZfRWxlbXMoeCkgMAojZGVmaW5lIEZWX0VsZW1zX21hc3Rlcih4KSAwCiNkZWZpbmUgRlZfRWxlbXNfc2xhdmUoeCkgMAojZGVmaW5lIEZWX0VsZW1zX1N1bSh4KSAwCiNlbmRpZgoKI2RlZmluZSBLSUxMKHgpIFNXUklURSgqLCopIF9fRklMRV9fLF9fTElORV9fLHg7IHN0b3AKCiEgb3ZlcmludGVncmF0aW9uCiNkZWZpbmUgQ1VUT0ZGIDEKI2RlZmluZSBDVVRPRkZDT05TIDIKCiEgUFVSRSBkZWJ1ZyBzd2l0Y2gKI2lmIERFQlVHCiNkZWZpbmUgUFBVUkUKI2Vsc2UKI2RlZmluZSBQUFVSRSBQVVJFCiNlbmRpZgoKITJkIGZ1bmN0aW9uYWxpdHkKI2lmIChQUF9kaW09PTIpCiNkZWZpbmUgWkRJTShhKSAwCiNkZWZpbmUgUFBfTlogICAwCiNkZWZpbmUgRElNViAgICAxOjIKI2Vsc2UKI2RlZmluZSBaRElNKGEpIGEKI2RlZmluZSBQUF9OWiAgIFBQX04KI2RlZmluZSBESU1WICAgIDE6MwojZW5kaWYKAAAAAAAAAACWEgAAAAAAAAAAAAAAAAAAAAAAAJYSAAAAAAAAAAAAAAAAAAAAAAAAlhIAAAAAAAAAAAAAAAAAAAAAAACWEgAAAAAAAAAAAAAAAAAAAAAAAJYSAAAAAAAAAAAAAAAAAAAAAAAAKxQAAAAAAAAAAAAAAAAAAAAAAAArFAAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALAOAAAAAAAAsA4AAAAAAAAAAAAAAADwvw"
				],
				[
					1,
					1,
					"revert",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAAArFAAAIT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQohIENvcHlyaWdodCAoYykgMjAxMC0yMDE2ICBQcm9mLiBDbGF1cy1EaWV0ZXIgTXVueiAKISBUaGlzIGZpbGUgaXMgcGFydCBvZiBGTEVYSSwgYSBoaWdoLW9yZGVyIGFjY3VyYXRlIGZyYW1ld29yayBmb3IgbnVtZXJpY2FsbHkgc29sdmluZyBQREVzIHdpdGggZGlzY29udGludW91cyBHYWxlcmtpbiBtZXRob2RzLgohIEZvciBtb3JlIGluZm9ybWF0aW9uIHNlZSBodHRwczovL3d3dy5mbGV4aS1wcm9qZWN0Lm9yZyBhbmQgaHR0cHM6Ly9ucmcuaWFnLnVuaS1zdHV0dGdhcnQuZGUvCiEKISBGTEVYSSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5IGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgCiEgYXMgcHVibGlzaGVkIGJ5IHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uCiEKISBGTEVYSSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLCBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eQohIG9mIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gU2VlIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSB2My4wIGZvciBtb3JlIGRldGFpbHMuCiEKISBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhbG9uZyB3aXRoIEZMRVhJLiBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uCiE9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KIT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiEgSGVyZSwgcHJlcHJvY2Vzc29yIHZhcmlhYmxlcyBmb3IgZGlmZmVyZW50IGVxdWF0aW9uIHN5c3RlbXMgYW5kIGFiYnJldmlhdGlvbnMgZm9yIHNwZWNpZmljIGV4cHJlc3Npb25zIGFyZSBkZWZpbmVkCiE9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQoKISBBYmJyZXZhdGlvbnMKI2lmZGVmIFNVTgojICBkZWZpbmUgX19EQVRFX18gJ19fVElNRV9fIGFuZCBfX0RBVEVfXyBub3QnCiMgIGRlZmluZSBfX1RJTUVfXyAnYXZhaWxhYmxlIGZvciBTVU4gQ09NUElMRVInCiMgIGRlZmluZSBJRUVFX0lTTkFOCiNlbGlmIFNYCiMgIGRlZmluZSBfX0RBVEVfXyAnX19USU1FX18gYW5kIF9fREFURV9fIG5vdCcKIyAgZGVmaW5lIF9fVElNRV9fICdhdmFpbGFibGUgZm9yIFNYIENPTVBJTEVSJwojZWxpZiBQR0kKIyAgZGVmaW5lIE5PX0lTTkFOCiNlbmRpZgojaWZuZGVmIF9fRklMRU5BTUVfXyAKI2RlZmluZSBfX0ZJTEVOQU1FX18gX19GSUxFX18KI2VuZGlmCiNkZWZpbmUgX19TVEFNUF9fIF9fRklMRU5BTUVfXyxfX0xJTkVfXyxfX0RBVEVfXyxfX1RJTUVfXwoKI2lmZGVmIEdOVQojICBkZWZpbmUgSUVFRV9JU19OQU4gSVNOQU4KI2VuZGlmCgojZGVmaW5lIFNJWkVPRl9GKHgpIChTVE9SQUdFX1NJWkUoeCkvOCkKCiNpZmRlZiBHTlUKI2RlZmluZSBDSEVDS1NBRkVJTlQoeCxrKSAgSUYoeD5IVUdFKDFfICBrKS5PUi54PC1IVUdFKDFfICBrKSkgICAgICAgQ0FMTCBBQk9SVChfX1NUQU1QX18sJ0ludGVnZXIgY29udmVyc2lvbiBmYWlsZWQ6IG91dCBvZiByYW5nZSEnKQojZGVmaW5lIENIRUNLU0FGRVJFQUwoeCxrKSBJRih4PkhVR0UoMS5fIGspLk9SLng8LUhVR0UoMS5fIGspKSAgICAgICBDQUxMIEFCT1JUKF9fU1RBTVBfXywnUmVhbCBjb252ZXJzaW9uIGZhaWxlZDogb3V0IG9mIHJhbmdlIScpCiNlbGlmIENSQVkKI2RlZmluZSBDSEVDS1NBRkVJTlQoeCxrKSAgCiNkZWZpbmUgQ0hFQ0tTQUZFUkVBTCh4LGspIAojZWxzZQojZGVmaW5lIENIRUNLU0FGRUlOVCh4LGspICBJRih4PkhVR0UoMV8gICMjIGspLk9SLng8LUhVR0UoMV8gICMjIGspKSBDQUxMIEFCT1JUKF9fU1RBTVBfXywnSW50ZWdlciBjb252ZXJzaW9uIGZhaWxlZDogb3V0IG9mIHJhbmdlIScpCiNkZWZpbmUgQ0hFQ0tTQUZFUkVBTCh4LGspIElGKHg+SFVHRSgxLl8gIyMgaykuT1IueDwtSFVHRSgxLl8gIyMgaykpIENBTEwgQUJPUlQoX19TVEFNUF9fLCdSZWFsIGNvbnZlcnNpb24gZmFpbGVkOiBvdXQgb2YgcmFuZ2UhJykKI2VuZGlmCgoKISBUZXN0IGZvciBlcXVhbGl0eTogcmVhZCBkZXNjcmlwdGlvbiBpbiBtYXRodG9vbHMuZjkwIGZvciBmdXJ0aGVyIGluZm9zCiNkZWZpbmUgQUxNT1NURVFVQUxBQlNPTFVURSh4LHksdG9sKSAgKEFCUygoeCktKHkpKS5MRS4odG9sKSkKI2RlZmluZSBBTE1PU1RFUVVBTFJFTEFUSVZFKHgseSx0b2wpICAoQUJTKCh4KS0oeSkpLkxFLk1BWChBQlMoeCksQUJTKHkpKSoodG9sKSkKI2RlZmluZSBBTE1PU1RFUVVBTEFCU09SUkVMKHgseSx0b2wpICAoQUxNT1NURVFVQUxBQlNPTFVURSh4LHksdG9sKSAuT1IuICBBTE1PU1RFUVVBTFJFTEFUSVZFKHgseSx0b2wpKQojZGVmaW5lIEFMTU9TVEVRVUFMQUJTQU5EUkVMKHgseSx0b2wpIChBTE1PU1RFUVVBTEFCU09MVVRFKHgseSx0b2wpIC5BTkQuIEFMTU9TVEVRVUFMUkVMQVRJVkUoeCx5LHRvbCkpCgohIERlZmluZSBNUEkgc3BlY2lmaWMgd3JpdGUgc2hvcnRjdXRzCiNpZiBVU0VfTVBJCiMgIGRlZmluZSBTV1JJVEUgSUYoTVBJUm9vdCkgV1JJVEUKIyAgZGVmaW5lIElQV1JJVEUoYSxiKSBXUklURShhLGIpbXlSYW5rLAojICBkZWZpbmUgR0VUVElNRShhKSBhPU1QSV9XVElNRSgpCiNlbHNlCiMgIGRlZmluZSBTV1JJVEUgV1JJVEUKIyAgZGVmaW5lIElQV1JJVEUgV1JJVEUKIyAgZGVmaW5lIEdFVFRJTUUoYSkgQ0FMTCBDUFVfVElNRShhKQojZW5kaWYKI2RlZmluZSBFUlJXUklURShhLGIpIENBTEwgQ3JlYXRlRXJyRmlsZSgpOyBJRihFcnJvckZpbGVzKSBXUklURShVTklUX2Vyck91dCxiKSAKI2RlZmluZSBMT0dXUklURShhLGIpIElGKExvZ2dpbmcpIFdSSVRFKFVOSVRfbG9nT3V0LGIpCiNkZWZpbmUgU0RFQUxMT0NBVEUoQSkgSUYoQUxMT0NBVEVEKEEpKSAgREVBTExPQ0FURShBKQojZGVmaW5lIEFERUFMTE9DQVRFKEEpIElGKEFTU09DSUFURUQoQSkpIERFQUxMT0NBVEUoQSkKCiEgTG9vcCB2YXJpYWJsZXMKI2RlZmluZSBQUF9JSksgICAgIGksaixrCiNkZWZpbmUgUFBfaWogICAgICBpLGoKCiEgUHJlZGVmaW5lZCAiUEFSQU1FVEVSLWxpa2UiIHZhcmlhYmxlcwojZGVmaW5lIFhJX01JTlVTICAgNQojZGVmaW5lIFhJX1BMVVMgICAgMwojZGVmaW5lIEVUQV9NSU5VUyAgMgojZGVmaW5lIEVUQV9QTFVTICAgNAojZGVmaW5lIFpFVEFfTUlOVVMgMQojZGVmaW5lIFpFVEFfUExVUyAgNgoKISBFbnRyeSBwb3NpdGlvbiBpbiBTaWRlVG9FbGVtCiNkZWZpbmUgUzJFX0VMRU1fSUQgICAgICAgIDEKI2RlZmluZSBTMkVfTkJfRUxFTV9JRCAgICAgMgojZGVmaW5lIFMyRV9MT0NfU0lERV9JRCAgICAzCiNkZWZpbmUgUzJFX05CX0xPQ19TSURFX0lEIDQKI2RlZmluZSBTMkVfRkxJUCAgICAgICAgICAgNQoKISBFbnRyeSBwb3NpdGlvbiBpbiBFbGVtVG9TaWRlCiNkZWZpbmUgRTJTX1NJREVfSUQgMQojZGVmaW5lIEUyU19GTElQICAgIDIKCiEgRGVmaW5pdGlvbnMgZm9yIHRoZSB+aW50ZXJmYWNlfiBjb25uZWN0aW9uCiNkZWZpbmUgSU5URVJGQUNFX0VMRU1TRU5EIDEKI2RlZmluZSBJTlRFUkZBQ0VfRUxFTVJFQ1YgMgojZGVmaW5lIElOVEVSRkFDRV9YSSAgICAgICAzCiNkZWZpbmUgSU5URVJGQUNFX0VUQSAgICAgIDQKI2RlZmluZSBJTlRFUkZBQ0VfWkVUQSAgICAgNQojZGVmaW5lIElOVEVSRkFDRV9UQU5HVkVDMSA2OjgKI2RlZmluZSBJTlRFUkZBQ0VfVEFOR1ZFQzIgOToxMQojZGVmaW5lIElOVEVSRkFDRV9ESVIgICAgICAxMgojZGVmaW5lIElOVEVSRkFDRV9QICAgICAgICAxMwojZGVmaW5lIElOVEVSRkFDRV9RICAgICAgICAxNAojZGVmaW5lIElOVEVSRkFDRV9MICAgICAgICAxNQojZGVmaW5lIE5fSU5URVJGQUNFX1BBUkFNUyAxNQoKCiEgRW50cnkgcG9zaXRpb24gaW4gQkMKI2RlZmluZSBNSV9TSURFSUQgMQojZGVmaW5lIE1JX0ZMSVAgICAyCgohIEVudHJ5IHBvc2l0aW9uIGluIEJDCiNkZWZpbmUgQkNfVFlQRSAgMQojZGVmaW5lIEJDX1NUQVRFIDIKI2RlZmluZSBCQ19BTFBIQSAzCgohIEVudHJ5IHBvc2l0aW9uIGluIEJDCiNkZWZpbmUgU0VORCAxCiNkZWZpbmUgUkVDViAyCgohI2RlZmluZSBERUJVR01FU0gKCiNpZiAhKEZWX0VOQUJMRUQpCiNkZWZpbmUgRlZfRWxlbXMoeCkgMAojZGVmaW5lIEZWX0VsZW1zX21hc3Rlcih4KSAwCiNkZWZpbmUgRlZfRWxlbXNfc2xhdmUoeCkgMAojZGVmaW5lIEZWX0VsZW1zX1N1bSh4KSAwCiNlbmRpZgoKI2RlZmluZSBLSUxMKHgpIFNXUklURSgqLCopIF9fRklMRV9fLF9fTElORV9fLHg7IHN0b3AKCiEgb3ZlcmludGVncmF0aW9uCiNkZWZpbmUgQ1VUT0ZGIDEKI2RlZmluZSBDVVRPRkZDT05TIDIKCiEgUFVSRSBkZWJ1ZyBzd2l0Y2gKI2lmIERFQlVHCiNkZWZpbmUgUFBVUkUKI2Vsc2UKI2RlZmluZSBQUFVSRSBQVVJFCiNlbmRpZgoKITJkIGZ1bmN0aW9uYWxpdHkKI2lmIChQUF9kaW09PTIpCiNkZWZpbmUgWkRJTShhKSAwCiNkZWZpbmUgUFBfTlogICAwCiNkZWZpbmUgRElNViAgICAxOjIKI2Vsc2UKI2RlZmluZSBaRElNKGEpIGEKI2RlZmluZSBQUF9OWiAgIFBQX04KI2RlZmluZSBESU1WICAgIDE6MwojZW5kaWYKAAAAAAAAAACWEgAAAAAAAAAAAAAAAAAAAAAAAJYSAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					1,
					1,
					"revert",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAACWEgAAIT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQohIENvcHlyaWdodCAoYykgMjAxMC0yMDE2ICBQcm9mLiBDbGF1cy1EaWV0ZXIgTXVueiAKISBUaGlzIGZpbGUgaXMgcGFydCBvZiBGTEVYSSwgYSBoaWdoLW9yZGVyIGFjY3VyYXRlIGZyYW1ld29yayBmb3IgbnVtZXJpY2FsbHkgc29sdmluZyBQREVzIHdpdGggZGlzY29udGludW91cyBHYWxlcmtpbiBtZXRob2RzLgohIEZvciBtb3JlIGluZm9ybWF0aW9uIHNlZSBodHRwczovL3d3dy5mbGV4aS1wcm9qZWN0Lm9yZyBhbmQgaHR0cHM6Ly9ucmcuaWFnLnVuaS1zdHV0dGdhcnQuZGUvCiEKISBGTEVYSSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5IGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgCiEgYXMgcHVibGlzaGVkIGJ5IHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uCiEKISBGTEVYSSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLCBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eQohIG9mIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gU2VlIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSB2My4wIGZvciBtb3JlIGRldGFpbHMuCiEKISBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhbG9uZyB3aXRoIEZMRVhJLiBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uCiE9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KIT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiEgSGVyZSwgcHJlcHJvY2Vzc29yIHZhcmlhYmxlcyBmb3IgZGlmZmVyZW50IGVxdWF0aW9uIHN5c3RlbXMgYW5kIGFiYnJldmlhdGlvbnMgZm9yIHNwZWNpZmljIGV4cHJlc3Npb25zIGFyZSBkZWZpbmVkCiE9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQoKISBBYmJyZXZhdGlvbnMKI2lmZGVmIFNVTgojICBkZWZpbmUgX19EQVRFX18gJ19fVElNRV9fIGFuZCBfX0RBVEVfXyBub3QnCiMgIGRlZmluZSBfX1RJTUVfXyAnYXZhaWxhYmxlIGZvciBTVU4gQ09NUElMRVInCiMgIGRlZmluZSBJRUVFX0lTTkFOCiNlbGlmIFNYCiMgIGRlZmluZSBfX0RBVEVfXyAnX19USU1FX18gYW5kIF9fREFURV9fIG5vdCcKIyAgZGVmaW5lIF9fVElNRV9fICdhdmFpbGFibGUgZm9yIFNYIENPTVBJTEVSJwojZWxpZiBQR0kKIyAgZGVmaW5lIE5PX0lTTkFOCiNlbmRpZgojaWZuZGVmIF9fRklMRU5BTUVfXyAKI2RlZmluZSBfX0ZJTEVOQU1FX18gX19GSUxFX18KI2VuZGlmCiNkZWZpbmUgX19TVEFNUF9fIF9fRklMRU5BTUVfXyxfX0xJTkVfXyxfX0RBVEVfXyxfX1RJTUVfXwoKI2lmZGVmIEdOVQojICBkZWZpbmUgSUVFRV9JU19OQU4gSVNOQU4KI2VuZGlmCgojZGVmaW5lIFNJWkVPRl9GKHgpIChTVE9SQUdFX1NJWkUoeCkvOCkKCiNpZmRlZiBHTlUKI2RlZmluZSBDSEVDS1NBRkVJTlQoeCxrKSAgSUYoeD5IVUdFKDFfICBrKS5PUi54PC1IVUdFKDFfICBrKSkgICAgICAgQ0FMTCBBQk9SVChfX1NUQU1QX18sJ0ludGVnZXIgY29udmVyc2lvbiBmYWlsZWQ6IG91dCBvZiByYW5nZSEnKQojZGVmaW5lIENIRUNLU0FGRVJFQUwoeCxrKSBJRih4PkhVR0UoMS5fIGspLk9SLng8LUhVR0UoMS5fIGspKSAgICAgICBDQUxMIEFCT1JUKF9fU1RBTVBfXywnUmVhbCBjb252ZXJzaW9uIGZhaWxlZDogb3V0IG9mIHJhbmdlIScpCiNlbGlmIENSQVkKI2RlZmluZSBDSEVDS1NBRkVJTlQoeCxrKSAgCiNkZWZpbmUgQ0hFQ0tTQUZFUkVBTCh4LGspIAojZWxzZQojZGVmaW5lIENIRUNLU0FGRUlOVCh4LGspICBJRih4PkhVR0UoMV8gICMjIGspLk9SLng8LUhVR0UoMV8gICMjIGspKSBDQUxMIEFCT1JUKF9fU1RBTVBfXywnSW50ZWdlciBjb252ZXJzaW9uIGZhaWxlZDogb3V0IG9mIHJhbmdlIScpCiNkZWZpbmUgQ0hFQ0tTQUZFUkVBTCh4LGspIElGKHg+SFVHRSgxLl8gIyMgaykuT1IueDwtSFVHRSgxLl8gIyMgaykpIENBTEwgQUJPUlQoX19TVEFNUF9fLCdSZWFsIGNvbnZlcnNpb24gZmFpbGVkOiBvdXQgb2YgcmFuZ2UhJykKI2VuZGlmCgoKISBUZXN0IGZvciBlcXVhbGl0eTogcmVhZCBkZXNjcmlwdGlvbiBpbiBtYXRodG9vbHMuZjkwIGZvciBmdXJ0aGVyIGluZm9zCiNkZWZpbmUgQUxNT1NURVFVQUxBQlNPTFVURSh4LHksdG9sKSAgKEFCUygoeCktKHkpKS5MRS4odG9sKSkKI2RlZmluZSBBTE1PU1RFUVVBTFJFTEFUSVZFKHgseSx0b2wpICAoQUJTKCh4KS0oeSkpLkxFLk1BWChBQlMoeCksQUJTKHkpKSoodG9sKSkKI2RlZmluZSBBTE1PU1RFUVVBTEFCU09SUkVMKHgseSx0b2wpICAoQUxNT1NURVFVQUxBQlNPTFVURSh4LHksdG9sKSAuT1IuICBBTE1PU1RFUVVBTFJFTEFUSVZFKHgseSx0b2wpKQojZGVmaW5lIEFMTU9TVEVRVUFMQUJTQU5EUkVMKHgseSx0b2wpIChBTE1PU1RFUVVBTEFCU09MVVRFKHgseSx0b2wpIC5BTkQuIEFMTU9TVEVRVUFMUkVMQVRJVkUoeCx5LHRvbCkpCgohIERlZmluZSBNUEkgc3BlY2lmaWMgd3JpdGUgc2hvcnRjdXRzCiNpZiBVU0VfTVBJCiMgIGRlZmluZSBTV1JJVEUgSUYoTVBJUm9vdCkgV1JJVEUKIyAgZGVmaW5lIElQV1JJVEUoYSxiKSBXUklURShhLGIpbXlSYW5rLAojICBkZWZpbmUgR0VUVElNRShhKSBhPU1QSV9XVElNRSgpCiNlbHNlCiMgIGRlZmluZSBTV1JJVEUgV1JJVEUKIyAgZGVmaW5lIElQV1JJVEUgV1JJVEUKIyAgZGVmaW5lIEdFVFRJTUUoYSkgQ0FMTCBDUFVfVElNRShhKQojZW5kaWYKI2RlZmluZSBFUlJXUklURShhLGIpIENBTEwgQ3JlYXRlRXJyRmlsZSgpOyBJRihFcnJvckZpbGVzKSBXUklURShVTklUX2Vyck91dCxiKSAKI2RlZmluZSBMT0dXUklURShhLGIpIElGKExvZ2dpbmcpIFdSSVRFKFVOSVRfbG9nT3V0LGIpCiNkZWZpbmUgU0RFQUxMT0NBVEUoQSkgSUYoQUxMT0NBVEVEKEEpKSAgREVBTExPQ0FURShBKQojZGVmaW5lIEFERUFMTE9DQVRFKEEpIElGKEFTU09DSUFURUQoQSkpIERFQUxMT0NBVEUoQSkKCiEgTG9vcCB2YXJpYWJsZXMKI2RlZmluZSBQUF9JSksgICAgIGksaixrCiNkZWZpbmUgUFBfaWogICAgICBpLGoKCiEgUHJlZGVmaW5lZCAiUEFSQU1FVEVSLWxpa2UiIHZhcmlhYmxlcwojZGVmaW5lIFhJX01JTlVTICAgNQojZGVmaW5lIFhJX1BMVVMgICAgMwojZGVmaW5lIEVUQV9NSU5VUyAgMgojZGVmaW5lIEVUQV9QTFVTICAgNAojZGVmaW5lIFpFVEFfTUlOVVMgMQojZGVmaW5lIFpFVEFfUExVUyAgNgoKISBFbnRyeSBwb3NpdGlvbiBpbiBTaWRlVG9FbGVtCiNkZWZpbmUgUzJFX0VMRU1fSUQgICAgICAgIDEKI2RlZmluZSBTMkVfTkJfRUxFTV9JRCAgICAgMgojZGVmaW5lIFMyRV9MT0NfU0lERV9JRCAgICAzCiNkZWZpbmUgUzJFX05CX0xPQ19TSURFX0lEIDQKI2RlZmluZSBTMkVfRkxJUCAgICAgICAgICAgNQoKISBFbnRyeSBwb3NpdGlvbiBpbiBFbGVtVG9TaWRlCiNkZWZpbmUgRTJTX1NJREVfSUQgMQojZGVmaW5lIEUyU19GTElQICAgIDIKCiEgRW50cnkgcG9zaXRpb24gaW4gQkMKI2RlZmluZSBNSV9TSURFSUQgMQojZGVmaW5lIE1JX0ZMSVAgICAyCgohIEVudHJ5IHBvc2l0aW9uIGluIEJDCiNkZWZpbmUgQkNfVFlQRSAgMQojZGVmaW5lIEJDX1NUQVRFIDIKI2RlZmluZSBCQ19BTFBIQSAzCgohIEVudHJ5IHBvc2l0aW9uIGluIEJDCiNkZWZpbmUgU0VORCAxCiNkZWZpbmUgUkVDViAyCgohI2RlZmluZSBERUJVR01FU0gKCiNpZiAhKEZWX0VOQUJMRUQpCiNkZWZpbmUgRlZfRWxlbXMoeCkgMAojZGVmaW5lIEZWX0VsZW1zX21hc3Rlcih4KSAwCiNkZWZpbmUgRlZfRWxlbXNfc2xhdmUoeCkgMAojZGVmaW5lIEZWX0VsZW1zX1N1bSh4KSAwCiNlbmRpZgoKI2RlZmluZSBLSUxMKHgpIFNXUklURSgqLCopIF9fRklMRV9fLF9fTElORV9fLHg7IHN0b3AKCiEgb3ZlcmludGVncmF0aW9uCiNkZWZpbmUgQ1VUT0ZGIDEKI2RlZmluZSBDVVRPRkZDT05TIDIKCiEgUFVSRSBkZWJ1ZyBzd2l0Y2gKI2lmIERFQlVHCiNkZWZpbmUgUFBVUkUKI2Vsc2UKI2RlZmluZSBQUFVSRSBQVVJFCiNlbmRpZgoKITJkIGZ1bmN0aW9uYWxpdHkKI2lmIChQUF9kaW09PTIpCiNkZWZpbmUgWkRJTShhKSAwCiNkZWZpbmUgUFBfTlogICAwCiNkZWZpbmUgRElNViAgICAxOjIKI2Vsc2UKI2RlZmluZSBaRElNKGEpIGEKI2RlZmluZSBQUF9OWiAgIFBQX04KI2RlZmluZSBESU1WICAgIDE6MwojZW5kaWYKAAAAAAAAAAArFAAAAAAAAAAAAAAAAAAAAAAAACsUAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "globals/globals.f90",
			"settings":
			{
				"buffer_size": 26688,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/eron/Workspace/CFD/Flexi/flexi-zles_dev/posti/preparewmmesh/preparewmmesh.f90",
			"settings":
			{
				"buffer_size": 6842,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/eron/Workspace/CFD/Flexi/flexi-zles_dev/posti/preparewmmesh/preparewmmesh_vars.f90",
			"settings":
			{
				"buffer_size": 6048,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/eron/Workspace/CFD/Flexi/flexi-zles_dev/posti/preparewmmesh/connect.f90",
			"settings":
			{
				"buffer_size": 36542,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/eron/Workspace/CFD/Flexi/flexi-zles_dev/posti/preparewmmesh/connect_output.f90",
			"settings":
			{
				"buffer_size": 10479,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/eron/Workspace/CFD/Flexi/flexi-zles_dev/src/interface/interface.f90",
			"redo_stack":
			[
				[
					1066,
					1,
					"",
					null,
					"AgAAAHUlAAAAAAAAeyUAAAAAAAAAAAAA3iYAAAAAAADeJgAAAAAAAAYAAAAjZWxzZQo",
					"MQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2CYAAAAAAADeJgAAAAAAAAAAAAAAAPC/"
				]
			],
			"settings":
			{
				"buffer_size": 37860,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/eron/Workspace/CFD/Flexi/flexi-zles_dev/src/interface/interface_vars.f90",
			"settings":
			{
				"buffer_size": 9345,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/eron/Workspace/CFD/Flexi/flexi-zles_dev/src/interface/interface_interpolation.f90",
			"settings":
			{
				"buffer_size": 11945,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/eron/Workspace/CFD/Flexi/flexi-zles_dev/src/interface/wm/wm.f90",
			"settings":
			{
				"buffer_size": 32183,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/eron/Workspace/CFD/Flexi/flexi-zles_dev/src/interface/wm/wm_vars.f90",
			"settings":
			{
				"buffer_size": 3681,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/eron/Workspace/CFD/Flexi/flexi-zles_dev/src/timedisc/timedisc.f90",
			"settings":
			{
				"buffer_size": 28913,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/eron/Workspace/CFD/Flexi/flexi-zles_dev/src/dg/dg.f90",
			"settings":
			{
				"buffer_size": 32356,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/eron/Workspace/CFD/Flexi/flexi-zles_dev/src/dg/lifting/lifting.f90",
			"settings":
			{
				"buffer_size": 10239,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/eron/Workspace/CFD/Flexi/flexi-zles_dev/src/dg/lifting/lifting_br2.t90",
			"settings":
			{
				"buffer_size": 16258,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/eron/Workspace/CFD/Flexi/flexi-zles_dev/src/dg/lifting/lifting_fillflux.t90",
			"settings":
			{
				"buffer_size": 12894,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/eron/Workspace/CFD/Flexi/flexi-zles_dev/src/equations/navierstokes/idealgas/getboundaryflux.f90",
			"settings":
			{
				"buffer_size": 70005,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/eron/Workspace/CFD/Flexi/flexi-zles_dev/src/interface/wm/sensor.f90",
			"settings":
			{
				"buffer_size": 24761,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/eron/Workspace/CFD/Flexi/flexi-zles_dev/src/dg/lifting/lifting_br1.t90",
			"settings":
			{
				"buffer_size": 17667,
				"line_ending": "Unix"
			}
		},
		{
			"file": "equations/navierstokes/wmles/wmles.f90",
			"settings":
			{
				"buffer_size": 57828,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					17,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB6ogAAIT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQohIFRoaXMgZmlsZSBpcyBOT1QgcGFydCBvZiB0aGUgb3JpZ2luYWwgRkxFWEkgcHJvamVjdC4gSW5zdGVhZCwgaXQgaXMgYW4gYWRkaXRpb24gbWFkZSBieSB0aGUgTEVTIGdyb3VwIGF0CiEgSW5zdGl0dXRvIFRlY25vbMOzZ2ljbyBkZSBBZXJvbsOhdXRpY2EsIERDVEEvSUFFLCBCcmF6aWwsIGluIG9yZGVyIHRvIGltcGxlbWVudCB3YWxsIG1vZGVsaW5nIGZvciBMRVMgY29tcHV0YXRpb25zLgohCiEgRm9yIG1vcmUgaW5mb3JtYXRpb24gb24gdGhlIG9yaWdpbmFsIHByb2plY3QsIHNlZSBodHRwczovL3d3dy5mbGV4aS1wcm9qZWN0Lm9yZyBhbmQgaHR0cHM6Ly9ucmcuaWFnLnVuaS1zdHV0dGdhcnQuZGUvCiEKISBPUklHSU5BTCBESVNDTEFJTUVSOgohIEZMRVhJIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnkgaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZQohIGFzIHB1Ymxpc2hlZCBieSB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvciAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLgohCiEgRkxFWEkgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCwgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkKISBvZiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuIFNlZSB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgdjMuMCBmb3IgbW9yZSBkZXRhaWxzLgohCiEgWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYWxvbmcgd2l0aCBGTEVYSS4gSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LgohPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CgojaW5jbHVkZSAiZmxleGkuaCIKCiE9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiE+IE1vZHVsZSB0byBpbXBsZW1lbnQgd2FsbCBtb2RlbGluZyBmb3IgTEVTIGNvbXB1dGF0aW9ucywgaGVuY2UgZGVhbGluZyB3aXRoIGJvdW5kYXJ5IGNvbmRpdGlvbiBvcGVyYXRpb25zCiE9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ck1PRFVMRSBNT0RfV01MRVMKIS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KISBNT0RVTEVTCiNpZiBVU0VfTVBJClVTRSBNUEkgCiNlbmRpZgoKSU1QTElDSVQgTk9ORQpQUklWQVRFCgpQVUJMSUMgOjogRGVmaW5lUGFyYW1ldGVyc1dNTEVTLCBJbml0V01MRVMsIEZpbmFsaXplV01MRVMKUFVCTElDIDo6IENvbXB1dGVXYWxsU3RyZXNzLCBFdmFsRGlmZkZsdXgzRF9XTUxFUwohPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQoKQ09OVEFJTlMKCiE9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiE+IERlZmluZSBwYXJhbWV0ZXJzCiE9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ClNVQlJPVVRJTkUgRGVmaW5lUGFyYW1ldGVyc1dNTEVTKCkKISBNT0RVTEVTClVTRSBNT0RfR2xvYmFscwpVU0UgTU9EX1dNTEVTX1ZhcnMKVVNFIE1PRF9SZWFkSW5Ub29scyAgICAgICAgICAgICAsT05MWTogcHJtcywgYWRkU3RyTGlzdEVudHJ5CklNUExJQ0lUIE5PTkUKIT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KQ0FMTCBwcm1zJVNldFNlY3Rpb24oIldhbGwtTW9kZWxlZCBMRVMiKQpDQUxMIHBybXMlQ3JlYXRlSW50RnJvbVN0cmluZ09wdGlvbignV2FsbE1vZGVsJywgIldhbGwgbW9kZWwgdG8gYmUgdXNlZCBvbiB3YWxscyBkZWZpbmVkIHdpdGggYXBwcm94aW1hdGUgYm91bmRhcnkgY29uZGl0aW9ucyIsICdMb2dMYXcnKQpDQUxMIGFkZFN0ckxpc3RFbnRyeSgnV2FsbE1vZGVsJywgJ1NjaHVtYW5uJywgV01MRVNfU0NIVU1BTk4pCkNBTEwgYWRkU3RyTGlzdEVudHJ5KCdXYWxsTW9kZWwnLCAnTG9nTGF3JywgV01MRVNfTE9HTEFXKQpDQUxMIGFkZFN0ckxpc3RFbnRyeSgnV2FsbE1vZGVsJywgJ1dlcm5lcldhbmdsZScsIFdNTEVTX1dFUk5FUldBTkdMRSkKQ0FMTCBhZGRTdHJMaXN0RW50cnkoJ1dhbGxNb2RlbCcsICdSZWljaGFyZHQnLCBXTUxFU19SRUlDSEFSRFQpCkNBTEwgYWRkU3RyTGlzdEVudHJ5KCdXYWxsTW9kZWwnLCAnU3BhbGRpbmcnLCBXTUxFU19TUEFMRElORykKQ0FMTCBhZGRTdHJMaXN0RW50cnkoJ1dhbGxNb2RlbCcsICdFcXVpbGlicml1bVRCTEUnLCBXTUxFU19FUVRCTEUpCkNBTEwgYWRkU3RyTGlzdEVudHJ5KCdXYWxsTW9kZWwnLCAnQ291ZXR0ZScsIFdNTEVTX0NPVUVUVEUpCgpDQUxMIHBybXMlQ3JlYXRlUmVhbE9wdGlvbigndkthcm1hbicsICJ2b24gS2FybWFuIGNvbnN0YW50IiwgIjAuNDEiKQpDQUxMIHBybXMlQ3JlYXRlUmVhbE9wdGlvbignQicsICJMb2ctbGF3IGludGVyY2VwdCBjb2VmZmljaWVudCIsICI1LjIiKQpDQUxMIHBybXMlQ3JlYXRlTG9naWNhbE9wdGlvbignVXNlU2VtaUxvY2FsJywgJ1NldCB0cnVlIHRvIGNvbXB1dGUgV2FsbCBTdHJlc3MgdXNpbmcgaW5mb3JtYXRpb24gZnJvbSB0aGUgZWxlbWVudCBhYm92ZSBmcm9tIHRoZSB3YWxsLWFkamFjZW50IGVsZW1lbnQnLCAnLlRSVUUuJykKQ0FMTCBwcm1zJUNyZWF0ZUludE9wdGlvbignV01MRVNfTkZpbHRlcicsJ051bWJlciBvZiBoaWdoIG9yZGVyIG1vZGVzIHRvIGN1dC1vZmYvYXR0ZW51YXRlIHdoaWxlIGZpbHRlcmluZyB0aGUgTEVTIHNvbHV0aW9uICg9PCBQUF9OISknLCAnMCcpCkNBTEwgcHJtcyVDcmVhdGVJbnRGcm9tU3RyaW5nT3B0aW9uKCdXTUxFU19GaWx0ZXJUeXBlJywgJ1R5cGUgb2YgZmlsdGVyIHRvIHVzZSB3aGVuIGZpbHRlcmluZyB0aGUgTEVTIHNvbHV0aW9uIGluIHRoZSB3YWxsIG1vZGVsIHByb2NlZHVyZScsICdQcm9qZWN0aW9uJykKQ0FMTCBhZGRTdHJMaXN0RW50cnkoJ1dNTEVTX0ZpbHRlclR5cGUnLCAnUHJvamVjdGlvbicsIFdNTEVTX1BST0pGSUxURVIpCkNBTEwgYWRkU3RyTGlzdEVudHJ5KCdXTUxFU19GaWx0ZXJUeXBlJywgJ1RyYW5zZm9ybScsIFdNTEVTX01PREFMVFJBTlNGSUxURVIpCgpFTkQgU1VCUk9VVElORSBEZWZpbmVQYXJhbWV0ZXJzV01MRVMKCiE9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiE+IFJlYWQgYW5kIGluaXRpYWxpemUgcGFyYW1ldGVycyBvZiBXTUxFUyBjb21wdXRhdGlvbgohPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQpTVUJST1VUSU5FIEluaXRXTUxFUygpCiEgTU9EVUxFUwpVU0UgTU9EX0dsb2JhbHMKVVNFIE1PRF9QcmVQcm9jClVTRSBNT0RfSERGNV9JbnB1dApVU0UgTU9EX1dNTEVTX1ZhcnMKVVNFIE1PRF9NZXNoX1ZhcnMgICAgICAgICAgICAgICEgLE9OTFk6IG5CQ1NpZGVzLCBCQywgQm91bmRhcnlUeXBlLCBNZXNoSW5pdElzRG9uZSwgRWxlbVRvU2lkZSwgU2lkZVRvRWxlbSwgU2lkZVRvR2xvYmFsU2lkZQpVU0UgTU9EX0ludGVycG9sYXRpb24gICAgICAgICAgICxPTkxZOiBHZXRWYW5kZXJtb25kZQpVU0UgTU9EX0ludGVycG9sYXRpb25fVmFycyAgICAgICxPTkxZOiBWZG1fTGVnLHNWZG1fTGVnLE5vZGVUeXBlClVTRSBNT0RfUmVhZEluVG9vbHMgICAgICAgICAgICAgLE9OTFk6IEdFVElOVEZST01TVFIsIEdFVFJFQUwsIEdFVExPR0lDQUwsIEdFVElOVApVU0UgTU9EX1N0cmluZ1Rvb2xzICAgICAgICAgICAgICxPTkxZOiBTVFJJQ01QClVTRSBNT0RfVGVzdGNhc2VfVmFycyAgICAgICAgICAgLE9OTFk6IFRlc3RjYXNlCiNpZiBVU0VfTVBJClVTRSBNT0RfTVBJClVTRSBNT0RfTVBJX1ZhcnMgICAgICAgICAgICAgICAgISxPTkxZOgojZW5kaWYKCklNUExJQ0lUIE5PTkUKCiEtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiEgTE9DQUwgVkFSSUFCTEVTCkNIQVJBQ1RFUihMRU49MTApICAgICAgICAgICAgICAgOjogQ2hhbm5lbD0iY2hhbm5lbCIKQ0hBUkFDVEVSKExFTj0yMCkgICAgICAgICAgICAgICA6OiBOb2RlVHlwZUYgPSAiR0FVU1MtTE9CQVRUTyIKUkVBTCAgICAgICAgICAgICAgICAgICAgICAgICAgICA6OiBod21EaXN0VmVjKDMpLCBEaXN0YW5jZQpJTlRFR0VSICAgICAgICAgICAgICAgICAgICAgICAgIDo6IGksaixwLHEsZmxpcApJTlRFR0VSLCBBTExPQ0FUQUJMRSAgICAgICAgICAgIDo6IFdNTEVTVG9CQ1NpZGVfdG1wKDopLCBXTUxFU0ZsaXBfdG1wKDopCklOVEVHRVIgICAgICAgICAgICAgICAgICAgICAgICAgOjogaVNpZGUsIFdhbGxFbGVtSUQsIE9wcFNpZGVJRCwgT3BwTG9jU2lkZQpJTlRFR0VSLEFMTE9DQVRBQkxFICAgICAgICAgICAgIDo6IE1hc3RlclRvV01MRVNTaWRlX3RtcCg6KSwgU2xhdmVUb1dNTEVTU2lkZV90bXAoOikKSU5URUdFUixBTExPQ0FUQUJMRSAgICAgICAgICAgICA6OiBNYXN0ZXJUb09wcFNpZGVfdG1wKDopLCBTbGF2ZVRvT3BwU2lkZV90bXAoOikKTE9HSUNBTCxBTExPQ0FUQUJMRSAgICAgICAgICAgICA6OiBJc01hc3Rlcig6KSwgSXNTbGF2ZSg6KQpSRUFMLCBBTExPQ0FUQUJMRSAgICAgICAgICAgICAgIDo6IFRlbXBWZG1OX05GKDosOiksIFRlbXBWZG1ORl9OKDosOikKIT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KIUlGKCguTk9ULkludGVycG9sYXRpb25Jbml0SXNEb25lKS5PUi4oLk5PVC5NZXNoSW5pdElzRG9uZSkuT1IuV01MRVNJbml0RG9uZSkgVEhFTgohICBDQUxMIENvbGxlY3RpdmVTdG9wKF9fU1RBTVBfXywmCiEgICAgJ1dhbGwtTW9kZWxlZCBMRVMgbm90IHJlYWR5IHRvIGJlIGNhbGxlZCBvciBhbHJlYWR5IGNhbGxlZC4nKQohRU5EIElGClNXUklURShVTklUX1N0ZE91dCwnKDEzMigiLSIpKScpClNXUklURShVTklUX3N0ZE91dCwnKEEpJykgJyBJTklUIFdhbGwtTW9kZWxlZCBMRVMuLi4nCgpXYWxsTW9kZWwgPSBHRVRJTlRGUk9NU1RSKCdXYWxsTW9kZWwnKQpVc2VTZW1pTG9jYWwgPSBHRVRMT0dJQ0FMKCdVc2VTZW1pTG9jYWwnKQoKISBJZiBTY2h1bWFubidzIG1vZGVsIGlzIHNlbGVjdGVkLCBjaGVjayBpZiB3ZSBhcmUgaW4gYSBjaGFubmVsIGZsb3cKSUYgKChXYWxsTW9kZWwgLkVRLiBXTUxFU19TQ0hVTUFOTikgLkFORC4gKC5OT1QuU1RSSUNNUChUZXN0Y2FzZSwgQ2hhbm5lbCkpKSBUSEVOCiAgICBDQUxMIENvbGxlY3RpdmVTdG9wKF9fU1RBTVBfXywmCiAgICAgICAgIlNjaHVtYW5uJ3Mgd2FsbCBtb2RlbCBjYW4gb25seSBiZSBhcHBsaWVkIHRvIHRoZSBDaGFubmVsIGZsb3cgdGVzdGNhc2UuIikKRU5EIElGCgp2S2FybWFuID0gR0VUUkVBTCgndkthcm1hbicpCkIgPSBHRVRSRUFMKCdCJykKCldNTEVTX0ZpbHRlciA9IEdFVElOVCgnV01MRVNfTkZpbHRlcicsICcwJykKV01MRVNfRmlsdGVyVHlwZSA9IEdFVElOVEZST01TVFIoJ1dNTEVTX0ZpbHRlclR5cGUnKQoKCiEgPS09LT0tPS0tPS0tPS09LT0tPS09LT0tPS09LT0tPS09LT0tPS09LT0tPS09LQohIFdlIG5vdyBzZXQgdXAgdGhlIGhfd20gbG9jYXRpb25zLCBkZXRlcm1pbmUgaW4gd2hpY2ggZWxlbWVudCB0aGV5IGxpZSwKISBhbmQgd2hvIGlzIHRoZSBNUEkgcHJvYy4gcmVzcG9uc2libGUgZm9yIHRoZSBlbGVtZW50LiAKISBUaGlzIGlzIGRvbmUgYnkgcmVhZGluZyB0aGUgaGRmNSBtZXNoIGZpbGUgdG8gYXZvaWQgY29tcGxpY2F0aW9ucyBieSAKISBjb21tdW5pY2F0aW9ucyBBTkQgREVBRExPQ0tTISEgd2hlbiBkZXRlcm1pbmluZyBzdWNoIGluZm9ybWF0aW9uLgohCiEgQWxzbywgd2Ugc2V0IHVwIHRoZSBpbmZvcm1hdGlvbiBmb3IgY29tbXVuaWNhdGlvbiBiZXR3ZWVuIHRoZSBwcm9jLiByZXNwb25zaWJsZQohIGZvciB0aGUgY2FsY3VsYXRpb24gKG93bnMgaF93bSBlbGVtZW50KSBhbmQgdGhlIHByb2MuIHJlc3BvbnNpYmxlIGZvciBCQwohIGltcG9zaXRpb24gKG93bnMgV01MRVNTaWRlKQohCiEgRmluYWxseSwgd2UgY2hlY2sgd2hldGhlciBpbnRlcnBvbGF0aW9uIGlzIG5lZWRlZCBvciBpZiB0aGUgaF93bSBwb2ludCBtYXkgYmUgYXBwcm94aW1hdGVkCiEgYnkgYW4gaW50ZXJpb3IvZmFjZSBwb2ludCBpbiB0aGUgZWxlbWVudC4gSWYgaW50ZXJwb2xhdGlvbiBpcyBuZWVkZWQsIGFsbCB0aGUgaW5mbwohIGZvciB0aGlzIGludGVycG9sYXRpb24gaXMgYWxzbyBzZXQgdXAgKGkuZS4gbWFwcGluZyBtYXRyaWNlcywgYmFzaXMgZnVuY3Rpb25zLCBldGMpCiEgPS09LT0tPS0tPS0tPS09LT0tPS09LT0tPS09LT0tPS09LT0tPS09LT0tPS09LQoKQUxMT0NBVEUoQkNTaWRlVG9XTUxFUyhuQkNTaWRlcykpCkFMTE9DQVRFKFdNTEVTVG9CQ1NpZGVfdG1wKG5CQ1NpZGVzKSkKQUxMT0NBVEUoTWFzdGVyVG9XTUxFU1NpZGVfdG1wKG5CQ1NpZGVzKSxTbGF2ZVRvV01MRVNTaWRlX3RtcChuQkNTaWRlcykpCkFMTE9DQVRFKE1hc3RlclRvT3BwU2lkZV90bXAobkJDU2lkZXMpLFNsYXZlVG9PcHBTaWRlX3RtcChuQkNTaWRlcykpCkFMTE9DQVRFKFdNTEVTRmxpcF90bXAobkJDU2lkZXMpKQoKbldNTEVTU2lkZXMgPSAwCm5NYXN0ZXJXTUxFU1NpZGUgPSAwCm5TbGF2ZVdNTEVTU2lkZSA9IDAKQkNTaWRlVG9XTUxFUyA9IDAKV01MRVNUb0JDU2lkZV90bXAgPSAwCk1hc3RlclRvV01MRVNTaWRlX3RtcCA9IDAKTWFzdGVyVG9PcHBTaWRlX3RtcCA9IDAKU2xhdmVUb1dNTEVTU2lkZV90bXAgPSAwClNsYXZlVG9PcHBTaWRlX3RtcCA9IDAKV01MRVNGbGlwX3RtcCA9IDAKCklGIChVc2VTZW1pTG9jYWwpIFRIRU4KICAgICEgVXNlIExFUyBpbmZvcm1hdGlvbiBmcm9tIHRoZSBlbGVtZW50IGFib3ZlIHRoZSB3YWxsLWFkamFjZW50IGVsZW1lbnQKICAgIERPIGlTaWRlPTEsbkJDU2lkZXMKICAgICAgICBJRiAoQm91bmRhcnlUeXBlKEJDKGlTaWRlKSxCQ19UWVBFKSAuRVEuIDUpIFRIRU4gISBXTUxFUyBzaWRlCgogICAgICAgICAgICBuV01MRVNTaWRlcyA9IG5XTUxFU1NpZGVzICsgMQogICAgICAgICAgICBCQ1NpZGVUb1dNTEVTKGlTaWRlKSA9IG5XTUxFU1NpZGVzCiAgICAgICAgICAgIFdNTEVTVG9CQ1NpZGVfdG1wKG5XTUxFU1NpZGVzKSA9IGlTaWRlCgogICAgICAgICAgICBXYWxsRWxlbUlEID0gU2lkZVRvRWxlbShTMkVfRUxFTV9JRCwgaVNpZGUpCiAgICAgICAgICAgIENBTEwgR2V0T3Bwb3NpdGVTaWRlKGlTaWRlLCBXYWxsRWxlbUlELCBPcHBTaWRlSUQpCgogICAgICAgICAgICBJRiAoU2lkZVRvRWxlbShTMkVfRUxFTV9JRCwgT3BwU2lkZUlEKSAuRVEuIFdhbGxFbGVtSUQpIFRIRU4gCiAgICAgICAgICAgICAgICAhIFdhbGxFbGVtIGlzIG1hc3RlciBvZiBvcHBvc2l0ZSBzaWRlCiAgICAgICAgICAgICAgICAhIFNvIHdlIHVzZSB0aGUgaW5mbyBmcm9tIHNsYXZlLCBpLmUuLCB0aGUgZWxlbWVudCBqdXN0IGFib3ZlIFdhbGxFbGVtCiAgICAgICAgICAgICAgICBuU2xhdmVXTUxFU1NpZGUgPSBuU2xhdmVXTUxFU1NpZGUgKyAxCiAgICAgICAgICAgICAgICBTbGF2ZVRvV01MRVNTaWRlX3RtcChuU2xhdmVXTUxFU1NpZGUpID0gbldNTEVTU2lkZXMKICAgICAgICAgICAgICAgIFNsYXZlVG9PcHBTaWRlX3RtcChuU2xhdmVXTUxFU1NpZGUpID0gT3BwU2lkZUlECiAgICAgICAgICAgIEVMU0UKICAgICAgICAgICAgICAgICEgT3RoZXJ3aXNlLCBpZiBXYWxsRWxlbSBpcyBzbGF2ZSwgd2UgdXNlIHRoZSBtYXN0ZXIgaW5mbywgaS5lLiwKICAgICAgICAgICAgICAgICEgY29taW5nIGZyb20gdGhlIGVsZW1lbnQganVzdCBhYm92ZSBXYWxsRWxlbQogICAgICAgICAgICAgICAgbk1hc3RlcldNTEVTU2lkZSA9IG5NYXN0ZXJXTUxFU1NpZGUgKyAxCiAgICAgICAgICAgICAgICBNYXN0ZXJUb1dNTEVTU2lkZV90bXAobk1hc3RlcldNTEVTU2lkZSkgPSBuV01MRVNTaWRlcwogICAgICAgICAgICAgICAgTWFzdGVyVG9PcHBTaWRlX3RtcChuTWFzdGVyV01MRVNTaWRlKSA9IE9wcFNpZGVJRAogICAgICAgICAgICBFTkQgSUYKICAgICAgICBFTkQgSUYKICAgIEVORCBETwoKRUxTRQogICAgISBJbiB0aGlzIGNhc2UsIHdlIHVzZSBpbmZvcm1hdGlvbiBmcm9tIHRoZSB3YWxsLWFkamFjZW50IGVsZW1lbnQgT05MWQogICAgRE8gaVNpZGU9MSxuQkNTaWRlcwogICAgICAgIElGIChCb3VuZGFyeVR5cGUoQkMoaVNpZGUpLEJDX1RZUEUpIC5FUS4gNSkgVEhFTiAhIFdNTEVTIHNpZGUKCiAgICAgICAgICAgIG5XTUxFU1NpZGVzID0gbldNTEVTU2lkZXMgKyAxCiAgICAgICAgICAgIEJDU2lkZVRvV01MRVMoaVNpZGUpID0gbldNTEVTU2lkZXMKICAgICAgICAgICAgV01MRVNUb0JDU2lkZV90bXAobldNTEVTU2lkZXMpID0gaVNpZGUKCiAgICAgICAgICAgIFdhbGxFbGVtSUQgPSBTaWRlVG9FbGVtKFMyRV9FTEVNX0lELCBpU2lkZSkKICAgICAgICAgICAgQ0FMTCBHZXRPcHBvc2l0ZVNpZGUoaVNpZGUsIFdhbGxFbGVtSUQsIE9wcFNpZGVJRCwgT3BwTG9jU2lkZSkKCiAgICAgICAgICAgIElGIChTaWRlVG9FbGVtKFMyRV9FTEVNX0lELCBPcHBTaWRlSUQpIC5FUS4gV2FsbEVsZW1JRCkgVEhFTiAKICAgICAgICAgICAgICAgICEgV2FsbEVsZW0gaXMgbWFzdGVyIG9mIG9wcG9zaXRlIHNpZGUKICAgICAgICAgICAgICAgICEgU28gd2UgdXNlIHRoZSBpbmZvIGZyb20gbWFzdGVyIHZhcmlhYmxlcwogICAgICAgICAgICAgICAgbk1hc3RlcldNTEVTU2lkZSA9IG5NYXN0ZXJXTUxFU1NpZGUgKyAxCiAgICAgICAgICAgICAgICBNYXN0ZXJUb1dNTEVTU2lkZV90bXAobk1hc3RlcldNTEVTU2lkZSkgPSBuV01MRVNTaWRlcwogICAgICAgICAgICAgICAgTWFzdGVyVG9PcHBTaWRlX3RtcChuTWFzdGVyV01MRVNTaWRlKSA9IE9wcFNpZGVJRAoKICAgICAgICAgICAgICAgICEgQWxzbywgc2luY2Ugd2UgYXJlIHRha2luZyBpbmZvcm1hdGlvbiBmcm9tIHRoZSBlbGVtZW50LWxvY2FsIG9wcG9zaXRlIHNpZGUsIAogICAgICAgICAgICAgICAgISB3ZSBuZWVkIHRvICJmbGlwIiBjb29yZGluYXRlcyBmcm9tIHRoZSBCQyB0byB0aGUgT3BwU2lkZQogICAgICAgICAgICAgICAgU0VMRUNUIENBU0UoT3BwTG9jU2lkZSkKICAgICAgICAgICAgICAgICAgICBDQVNFIChYSV9NSU5VUyxYSV9QTFVTLFpFVEFfTUlOVVMsWkVUQV9QTFVTKQogICAgICAgICAgICAgICAgICAgICAgICBXTUxFU0ZsaXBfdG1wKG5XTUxFU1NpZGVzKSA9IDEKICAgICAgICAgICAgICAgICAgICBDQVNFIChFVEFfTUlOVVMsRVRBX1BMVVMpCiAgICAgICAgICAgICAgICAgICAgICAgIFdNTEVTRmxpcF90bXAobldNTEVTU2lkZXMpID0gMgogICAgICAgICAgICAgICAgRU5EIFNFTEVDVAogICAgICAgICAgICBFTFNFCiAgICAgICAgICAgICAgICAhIE90aGVyd2lzZSwgaWYgV2FsbEVsZW0gaXMgc2xhdmUsIHdlIHVzZSB0aGUgc2xhdmUgaW5mbwogICAgICAgICAgICAgICAgblNsYXZlV01MRVNTaWRlID0gblNsYXZlV01MRVNTaWRlICsgMQogICAgICAgICAgICAgICAgU2xhdmVUb1dNTEVTU2lkZV90bXAoblNsYXZlV01MRVNTaWRlKSA9IG5XTUxFU1NpZGVzCiAgICAgICAgICAgICAgICBTbGF2ZVRvT3BwU2lkZV90bXAoblNsYXZlV01MRVNTaWRlKSA9IE9wcFNpZGVJRAoKICAgICAgICAgICAgICAgICEgV2UgYWxzbyBuZWVkIHRvICJmbGlwIiBjb29yZGluYXRlcyBmb3Igc2xhdmUgc2lkZXMsCiAgICAgICAgICAgICAgICAhIGJ1dCB0aGlzIGluZm8gaXMgZGlyZWN0bHkgYXZhaWxhYmxlIGluIFNpZGVUb0VsZW0gYXJyYXkKICAgICAgICAgICAgICAgIFdNTEVTRmxpcF90bXAobldNTEVTU2lkZXMpID0gU2lkZVRvRWxlbShTMkVfRkxJUCwgT3BwU2lkZUlEKQogICAgICAgICAgICBFTkQgSUYKICAgICAgICBFTkQgSUYKICAgIEVORCBETwoKRU5EIElGICEgVXNlU2VtaUxvY2FsCgohPiBBbGxvY2F0ZSBwZXJtYW5lbnQgc3BhY2UgYW5kIGZyZWUgdGVtcG9yYXJ5IG9uZXMKQUxMT0NBVEUoTWFzdGVyVG9XTUxFU1NpZGUobk1hc3RlcldNTEVTU2lkZSkpCkFMTE9DQVRFKE1hc3RlclRvT3BwU2lkZShuTWFzdGVyV01MRVNTaWRlKSkKQUxMT0NBVEUoU2xhdmVUb1dNTEVTU2lkZShuU2xhdmVXTUxFU1NpZGUpKQpBTExPQ0FURShTbGF2ZVRvT3BwU2lkZShuU2xhdmVXTUxFU1NpZGUpKQpBTExPQ0FURShXTUxFU1RvQkNTaWRlKG5XTUxFU1NpZGVzKSkKQUxMT0NBVEUoV01MRVNGbGlwKG5XTUxFU1NpZGVzKSkKSUYgKExvZ2dpbmcpIFRIRU4KICAgIEFMTE9DQVRFKElzTWFzdGVyKG5XTUxFU1NpZGVzKSxJc1NsYXZlKG5XTUxFU1NpZGVzKSkKICAgIElzTWFzdGVyID0gLkZBTFNFLgogICAgSXNTbGF2ZSA9IC5GQUxTRS4KRU5EIElGCgpETyBpPTEsbk1hc3RlcldNTEVTU2lkZQogICAgTWFzdGVyVG9XTUxFU1NpZGUoaSkgPSBNYXN0ZXJUb1dNTEVTU2lkZV90bXAoaSkKICAgIE1hc3RlclRvT3BwU2lkZShpKSA9IE1hc3RlclRvT3BwU2lkZV90bXAoaSkKICAgIElGIChMb2dnaW5nKSBJc01hc3RlcihNYXN0ZXJUb1dNTEVTU2lkZShpKSkgPSAuVFJVRS4KRU5EIERPCkRPIGk9MSxuU2xhdmVXTUxFU1NpZGUKICAgIFNsYXZlVG9XTUxFU1NpZGUoaSkgPSBTbGF2ZVRvV01MRVNTaWRlX3RtcChpKQogICAgU2xhdmVUb09wcFNpZGUoaSkgPSBTbGF2ZVRvT3BwU2lkZV90bXAoaSkKICAgIElGIChMb2dnaW5nKSBJc1NsYXZlKFNsYXZlVG9XTUxFU1NpZGUoaSkpID0gLlRSVUUuCkVORCBETwpETyBpPTEsbldNTEVTU2lkZXMKICAgIFdNTEVTVG9CQ1NpZGUoaSkgPSBXTUxFU1RvQkNTaWRlX3RtcChpKQogICAgV01MRVNGbGlwKGkpID0gV01MRVNGbGlwX3RtcChpKQpFTkQgRE8KU0RFQUxMT0NBVEUoV01MRVNUb0JDU2lkZV90bXApClNERUFMTE9DQVRFKE1hc3RlclRvV01MRVNTaWRlX3RtcCkKU0RFQUxMT0NBVEUoU2xhdmVUb1dNTEVTU2lkZV90bXApClNERUFMTE9DQVRFKE1hc3RlclRvT3BwU2lkZV90bXApClNERUFMTE9DQVRFKFNsYXZlVG9PcHBTaWRlX3RtcCkKU0RFQUxMT0NBVEUoV01MRVNGbGlwX3RtcCkKCiEgT3Bwb3NpdGUgc2lkZSdzIFNsYXZlIE1QSSBwcm9jIHJlc3BvbnNpYmxlIGZvciBCQyBpbXBvc2l0aW9uIG5lZWRzIEZhY2VfeEdQIGRhdGEgCiEgdG8gY2FsY3VsYXRlIHRoZSB3YWxsIG1vZGVsIGhlaWdodCwgaF93bQpDQUxMIFN0YXJ0U2VuZE1QSURhdGEoRmFjZV94R1AsIDMqKFBQX04rMSkqKFBQX05aKzEpLCAxLCBuU2lkZXMsIE1QSVJlcXVlc3RfVSg6LFNFTkQpLCBTZW5kSUQ9MSkKQ0FMTCBTdGFydFJlY2VpdmVNUElEYXRhKEZhY2VfeEdQLCAzKihQUF9OKzEpKihQUF9OWisxKSwgMSwgblNpZGVzLCBNUElSZXF1ZXN0X1UoOixSRUNWKSwgU2VuZElEPTEpCkNBTEwgRmluaXNoRXhjaGFuZ2VNUElEYXRhKDIqbk5iUHJvY3MsIE1QSVJlcXVlc3RfVSkKCkFMTE9DQVRFKGhfd20oMDpQUF9OLDA6UFBfTlosbldNTEVTU2lkZXMpKQoKSUYgKG5XTUxFU1NpZGVzLkdULjApIFRIRU4KICAgIElGIChVc2VTZW1pTG9jYWwpIFRIRU4KICAgICAgICBETyBpPTEsbk1hc3RlcldNTEVTU2lkZQogICAgICAgICAgICAhIE5vIGZsaXAgbmVlZGVkLCB3ZSdyZSB0YWtpbmcgaW5mbyBmcm9tIHRoZSBlbGVtZW50IGFib3ZlIHRoZSB3YWxsLWFkamFjZW50IGVsZW1lbnQKICAgICAgICAgICAgISB3aGljaCBoYXMgdGhlIHNhbWUgY29vcmRpbmF0ZSBvcmllbnRhdGlvbiB0aGFuIHRoZSBCQyBzaWRlCiAgICAgICAgICAgIERPIHE9MCxQUF9OWjsgRE8gcD0wLFBQX04KICAgICAgICAgICAgICAgIGh3bURpc3RWZWMoMTozKSA9IEZhY2VfeEdQKDE6MyxwLHEsMCxNYXN0ZXJUb09wcFNpZGUoaSkpIC0gRmFjZV94R1AoMTozLHAscSwwLFdNTEVTVG9CQ1NpZGUoTWFzdGVyVG9XTUxFU1NpZGUoaSkpKQogICAgICAgICAgICAgICAgRGlzdGFuY2UgPSAwCiAgICAgICAgICAgICAgICBETyBqPTEsMwogICAgICAgICAgICAgICAgICAgIERpc3RhbmNlID0gRGlzdGFuY2UgKyBod21EaXN0VmVjKGopKioyCiAgICAgICAgICAgICAgICBFTkQgRE8KICAgICAgICAgICAgICAgIGhfd20ocCxxLE1hc3RlclRvV01MRVNTaWRlKGkpKSA9IFNRUlQoRGlzdGFuY2UpCiAgICAgICAgICAgIEVORCBETzsgRU5EIERPICEgcCwgcSAgICAgICAgICAgICAgICAKICAgICAgICBFTkQgRE8KCiAgICAgICAgRE8gaT0xLG5TbGF2ZVdNTEVTU2lkZQogICAgICAgICAgICAhIEhlcmUgd2UgbmVlZCBmbGlwLCBiZWNhdXNlIHNpbmNlIHRoZSBlbGVtZW50IGFib3ZlIGlzIHNsYXZlIG9mIGZhY2UsCiAgICAgICAgICAgICEgaXQgbWVhbnMgd2FsbC1hZGphY2VudCBlbGVtZW50IGlzIG1hc3RlciBvZiBmYWNlLCBhbmQgRmFjZV94R1AgaW5mbwogICAgICAgICAgICAhIGNvbWVzIGZyb20gbWFzdGVyCiAgICAgICAgICAgIE9wcExvY1NpZGUgPSBTaWRlVG9FbGVtKFMyRV9MT0NfU0lERV9JRCwgU2xhdmVUb09wcFNpZGUoaSkpCiAgICAgICAgICAgIElGIChPcHBMb2NTaWRlLkVRLi0xKSBDQUxMIEFib3J0KF9fU1RBTVBfXywgIk9QUFBTUywgLTEiKQogICAgICAgICAgICBTRUxFQ1QgQ0FTRShPcHBMb2NTaWRlKQogICAgICAgICAgICAgICAgQ0FTRSAoWElfTUlOVVMsWElfUExVUyxaRVRBX01JTlVTLFpFVEFfUExVUykKICAgICAgICAgICAgICAgICAgICBmbGlwID0gMQogICAgICAgICAgICAgICAgQ0FTRSAoRVRBX01JTlVTLEVUQV9QTFVTKQogICAgICAgICAgICAgICAgICAgIGZsaXAgPSAyCiAgICAgICAgICAgIEVORCBTRUxFQ1QKICAgICAgICAgICAgRE8gcT0wLFBQX05aOyBETyBwPTAsUFBfTgogICAgICAgICAgICAgICAgaHdtRGlzdFZlYygxOjMpID0gRmFjZV94R1AoMTozLEZTMk0oMSxwLHEsZmxpcCksRlMyTSgyLHAscSxmbGlwKSwwLFNsYXZlVG9PcHBTaWRlKGkpKSAtIEZhY2VfeEdQKDE6MyxwLHEsMCxXTUxFU1RvQkNTaWRlKFNsYXZlVG9XTUxFU1NpZGUoaSkpKQogICAgICAgICAgICAgICAgRGlzdGFuY2UgPSAwCiAgICAgICAgICAgICAgICBETyBqPTEsMwogICAgICAgICAgICAgICAgICAgIERpc3RhbmNlID0gRGlzdGFuY2UgKyBod21EaXN0VmVjKGopKioyCiAgICAgICAgICAgICAgICBFTkQgRE8KICAgICAgICAgICAgICAgIGhfd20ocCxxLFNsYXZlVG9XTUxFU1NpZGUoaSkpID0gU1FSVChEaXN0YW5jZSkKICAgICAgICAgICAgRU5EIERPOyBFTkQgRE8gISBwLCBxICAgICAgICAgICAgCiAgICAgICAgRU5EIERPCgogICAgRUxTRQogICAgICAgIERPIGk9MSxuTWFzdGVyV01MRVNTaWRlCiAgICAgICAgICAgICEgSGVyZSBhIGZsaXAgaXMgbmVlZGVkLCBiZWNhdXNlIG9wcG9zaXRlIHNpZGUgaXMgTWFzdGVyIG9mIGludGVyZmFjZSwgYW5kIEZhY2VfeEdQCiAgICAgICAgICAgICEgaXMgYSBtYXN0ZXIgaW5mb3JtYXRpb24KICAgICAgICAgICAgT3BwTG9jU2lkZSA9IFNpZGVUb0VsZW0oUzJFX0xPQ19TSURFX0lELCBNYXN0ZXJUb09wcFNpZGUoaSkpCiAgICAgICAgICAgIElGIChPcHBMb2NTaWRlLkVRLi0xKSBDQUxMIEFib3J0KF9fU1RBTVBfXywgIk9QUFBTUywgLTEiKQogICAgICAgICAgICBTRUxFQ1QgQ0FTRShPcHBMb2NTaWRlKQogICAgICAgICAgICAgICAgQ0FTRSAoWElfTUlOVVMsWElfUExVUyxaRVRBX01JTlVTLFpFVEFfUExVUykKICAgICAgICAgICAgICAgICAgICBmbGlwID0gMQogICAgICAgICAgICAgICAgQ0FTRSAoRVRBX01JTlVTLEVUQV9QTFVTKQogICAgICAgICAgICAgICAgICAgIGZsaXAgPSAyCiAgICAgICAgICAgIEVORCBTRUxFQ1QKICAgICAgICAgICAgRE8gcT0wLFBQX05aOyBETyBwPTAsUFBfTgogICAgICAgICAgICAgICAgaHdtRGlzdFZlYygxOjMpID0gRmFjZV94R1AoMTozLEZTMk0oMSxwLHEsZmxpcCksRlMyTSgyLHAscSxmbGlwKSwwLE1hc3RlclRvT3BwU2lkZShpKSkgLSBGYWNlX3hHUCgxOjMscCxxLDAsV01MRVNUb0JDU2lkZShNYXN0ZXJUb1dNTEVTU2lkZShpKSkpCiAgICAgICAgICAgICAgICBEaXN0YW5jZSA9IDAKICAgICAgICAgICAgICAgIERPIGo9MSwzCiAgICAgICAgICAgICAgICAgICAgRGlzdGFuY2UgPSBEaXN0YW5jZSArIGh3bURpc3RWZWMoaikqKjIKICAgICAgICAgICAgICAgIEVORCBETwogICAgICAgICAgICAgICAgaF93bShwLHEsTWFzdGVyVG9XTUxFU1NpZGUoaSkpID0gU1FSVChEaXN0YW5jZSkKICAgICAgICAgICAgRU5EIERPOyBFTkQgRE8gISBwLCBxCiAgICAgICAgRU5EIERPCgogICAgICAgIERPIGk9MSxuU2xhdmVXTUxFU1NpZGUKICAgICAgICAgICAgISBObyBmbGlwIGlzIG5lZWRlZCBoZXJlLCBzaW5jZSB3YWxsLWFkamFjZW50IGlzIHNsYXZlIG9mIGZhY2UgYW5kCiAgICAgICAgICAgICEgRmFjZV94R1AgaW5mbyBjb21lcyBmcm9tIHRoZSBtYXN0ZXIgKGVsZW1lbnQgYWJvdmUpLCB3aGljaCBoYXMKICAgICAgICAgICAgISB0aGUgc2FtZSBvcmllbnRhdGlvbiBhbHJlYWR5CiAgICAgICAgICAgIERPIHE9MCxQUF9OWjsgRE8gcD0wLFBQX04KICAgICAgICAgICAgICAgIGh3bURpc3RWZWMoMTozKSA9IEZhY2VfeEdQKDE6MyxwLHEsMCxTbGF2ZVRvT3BwU2lkZShpKSkgLSBGYWNlX3hHUCgxOjMscCxxLDAsV01MRVNUb0JDU2lkZShTbGF2ZVRvV01MRVNTaWRlKGkpKSkKICAgICAgICAgICAgICAgIERpc3RhbmNlID0gMAogICAgICAgICAgICAgICAgRE8gaj0xLDMKICAgICAgICAgICAgICAgICAgICBEaXN0YW5jZSA9IERpc3RhbmNlICsgaHdtRGlzdFZlYyhqKSoqMgogICAgICAgICAgICAgICAgRU5EIERPCiAgICAgICAgICAgICAgICBoX3dtKHAscSxTbGF2ZVRvV01MRVNTaWRlKGkpKSA9IFNRUlQoRGlzdGFuY2UpCiAgICAgICAgICAgIEVORCBETzsgRU5EIERPICEgcCwgcQogICAgICAgIEVORCBETwogICAgRU5EIElGCkVORCBJRgoKSUYgKG5XTUxFU1NpZGVzLkdULjAgLkFORC4gV01MRVNfRmlsdGVyLkdULjApIFRIRU4KICAgIElGIChXTUxFU19GaWx0ZXIgLkdULiBQUF9OKSBDQUxMIENvbGxlY3RpdmVTdG9wKF9fU1RBTVBfXywgIldNTEVTX0ZpbHRlciBtdXN0IGJlIDw9IE4iKQogICAgQUxMT0NBVEUoV01MRVNfRmlsdGVyTWF0KDA6UFBfTiwgMDpQUF9OKSkKICAgIFdNTEVTX0ZpbHRlck1hdCA9IDAuCiAgICBJRiAoV01MRVNfRmlsdGVyVHlwZSAuRVEuIFdNTEVTX01PREFMVFJBTlNGSUxURVIpIFRIRU4KICAgICAgICAhIFVzaW5nIGEgc2ltcGxlIGN1dC1vZmYgZmlsdGVyCiAgICAgICAgRE8gaT0wLChQUF9OLVdNTEVTX0ZpbHRlcikKICAgICAgICAgICAgV01MRVNfRmlsdGVyTWF0KGksaSkgPSAxLgogICAgICAgIEVORCBETwogICAgICAgIFdNTEVTX0ZpbHRlck1hdCA9IE1BVE1VTChNQVRNVUwoVmRtX0xlZyxXTUxFU19GaWx0ZXJNYXQpLHNWZG1fTGVnKQogICAgRUxTRSBJRiAoV01MRVNfRmlsdGVyVHlwZSAuRVEuIFdNTEVTX1BST0pGSUxURVIpIFRIRU4KICAgICAgICBJRiAoV01MRVNfRmlsdGVyIC5FUS4gUFBfTikgTm9kZVR5cGVGID0gIkdBVVNTIgogICAgICAgICEgR2V0IGluL291dCBWYW5kZXJtb25kZSBtYXRyaWNlcwogICAgICAgIEFMTE9DQVRFKFRlbXBWZG1OX05GKDA6KFBQX04tV01MRVNfRmlsdGVyKSwwOlBQX04pLCBUZW1wVmRtTkZfTigwOlBQX04sMDooUFBfTi1XTUxFU19GaWx0ZXIpKSkKICAgICAgICBDQUxMIEdldFZhbmRlcm1vbmRlKFBQX04sTm9kZVR5cGUsKFBQX04tV01MRVNfRmlsdGVyKSxOb2RlVHlwZUYsVGVtcFZkbU5fTkYsVGVtcFZkbU5GX04pCiAgICAgICAgISBGb3JtIHRoZSBmaW5hbCBmaWx0ZXIgbWF0cml4IChwcm9kdWN0IG9mIHRoZSBvYnRhaW5lZCBWYW5kZXJtb25kZSBtYXRyaWNlcyBhYm92ZSkKICAgICAgICBXTUxFU19GaWx0ZXJNYXQgPSBNQVRNVUwoVGVtcFZkbU5GX04sVGVtcFZkbU5fTkYpCiAgICBFTFNFCiAgICAgICAgQ0FMTCBDb2xsZWN0aXZlU3RvcChfX1NUQU1QX18sICdVbmtub3duIEZpbHRlciBUeXBlIC0tIGNoZWNrIFdNTEVTX0ZpbHRlclR5cGUgcGFyYW1ldGVyJykKICAgIEVORCBJRgpFTkQgSUYKCkFMTE9DQVRFKFdNTEVTX1RhdVcoMiwwOlBQX04sMDpQUF9OWixuV01MRVNTaWRlcykpCldNTEVTX1RhdVcgPSAwLgoKIT4gRGlzcGxheSBkZWJ1ZyBpbmZvcm1hdGlvbiBpbiBMb2dmaWxlCklGIChuV01MRVNTaWRlcy5HVC4wKSBUSEVOCiAgICBMT0dXUklURSgqLCcoLyxBNzIpJykgJz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PScKICAgIExPR1dSSVRFKCosJygyMFgsQTMyLDIwWCknKSAnV01MRVMgUHJlLUNvbXB1dGF0aW9uIFN0YWdlIEluZm8nCiAgICBMT0dXUklURSgqLCcoQTcyKScpICc9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0nCiAgICBMT0dXUklURSgqLCcoMTBYLEE5KScpICJTdW1tYXJ5OiIKICAgIExPR1dSSVRFKCosJygyMFgsQTE4LFgsSTYpJykgIm5XTUxFU1NpZGVzOiIsIG5XTUxFU1NpZGVzCiAgICBMT0dXUklURSgqLCcoMjBYLEExOCxYLEk2KScpICJuTWFzdGVyV01MRVNTaWRlOiIsIG5NYXN0ZXJXTUxFU1NpZGUKICAgIExPR1dSSVRFKCosJygyMFgsQTE4LFgsSTYpJykgIm5TbGF2ZVdNTEVTU2lkZToiLCBuU2xhdmVXTUxFU1NpZGUKICAgIExPR1dSSVRFKCosJyhBNzIpJykgJy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLScKICAgIExPR1dSSVRFKCosJygyKEE0LDJYKSxBMTAsMlgsMihBNiwyWCksQTksMlgsQTE1KScpICJwIiwicSIsIm5XTUxFU1NpZGUiLCJNYXN0ZXIiLCJTbGF2ZSIsIldNTEVTRmxpcCIsICJoX3dtIERpc3RhbmNlIgogICAgRE8gaT0xLG5XTUxFU1NpZGVzCiAgICAgICAgRE8gcT0wLFBQX05aOyBETyBwPTAsUFBfTgogICAgICAgICAgICBMT0dXUklURSgqLCcoMihJNCwyWCksSTEwLDJYLDIoTDYsMlgpLEk5LDJYRTE1LjgpJykgcCwgcSwgaSwgSXNNYXN0ZXIoaSksIElzU2xhdmUoaSksIFdNTEVTRmxpcChpKSwgaF93bShwLHEsaSkKICAgICAgICBFTkQgRE87IEVORCBETwogICAgRU5EIERPCiAgICBMT0dXUklURSgqLCcoQTE4LFgsQTM1LFgsQTE4LC8pJykgJz09PT09PT09PT09PT09PT09PScsJ0VORCBPRiBXTUxFUyBQUkUtQ09NUFVULiBTVEFHRSBJTkZPJywnPT09PT09PT09PT09PT09PT09JwogICAgSUYgKExvZ2dpbmcpIENBTEwgRkxVU0goVU5JVF9sb2dPdXQpCkVORCBJRgoKV01MRVNJbml0RG9uZT0uVFJVRS4KU1dSSVRFKFVOSVRfc3RkT3V0LCcoQSknKScgSU5JVCBXYWxsLU1vZGVsZWQgTEVTIERPTkUhJwpTV1JJVEUoVU5JVF9TdGRPdXQsJygxMzIoIi0iKSknKQoKRU5EIFNVQlJPVVRJTkUgSW5pdFdNTEVTCgoKIT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KIT4gR2V0IHRoZSBJRCBvZiB0aGUgc2lkZSBvcHBvc2l0ZSBvZiB0aGF0IGluZGljYXRlZCBieSBTaWRlSUQsIGluIHRoZSBzYW1lIGVsZW1lbnQKIT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KU1VCUk9VVElORSBHZXRPcHBvc2l0ZVNpZGUoU2lkZUlELCBFbGVtSUQsIE9wcG9zaXRlU2lkZSwgU2lkZUZsaXApCiEgTU9EVUxFUwpVU0UgTU9EX01lc2hfVmFycywgICAgICAgICAgICAgIE9OTFk6IFNpZGVUb0VsZW0sIEVsZW1Ub1NpZGUKSU1QTElDSVQgTk9ORQohLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQohIExPQ0FMIFZBUklBQkxFUwpJTlRFR0VSLCBJTlRFTlQoSU4pICAgICAgICAgICAgICAgICA6OiBFbGVtSUQsIFNpZGVJRApJTlRFR0VSLCBJTlRFTlQoT1VUKSAgICAgICAgICAgICAgICA6OiBPcHBvc2l0ZVNpZGUKSU5URUdFUiwgSU5URU5UKE9VVCksIE9QVElPTkFMICAgICAgOjogU2lkZUZsaXAKIS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KSU5URUdFUiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOjogTG9jU2lkZSwgdG1wRWxlbUlECiE9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Cgp0bXBFbGVtSUQgPSBTaWRlVG9FbGVtKFMyRV9FTEVNX0lELCBTaWRlSUQpCklGICh0bXBFbGVtSUQgLkVRLiBFbGVtSUQpIFRIRU4gISBFbGVtSUQgaXMgbWFzdGVyIG9mIHRoaXMgc2lkZQogICAgTG9jU2lkZSA9IFNpZGVUb0VsZW0oUzJFX0xPQ19TSURFX0lELCBTaWRlSUQpCkVMU0UgISBFbGVtSUQgaXMgc2xhdmUgb2YgdGhpcyBzaWRlCiAgICBMb2NTaWRlID0gU2lkZVRvRWxlbShTMkVfTkJfTE9DX1NJREVfSUQsIFNpZGVJRCkKRU5EIElGCgpTRUxFQ1QgQ0FTRShMb2NTaWRlKQpDQVNFIChFVEFfTUlOVVMpCiAgICBPcHBvc2l0ZVNpZGUgPSBFbGVtVG9TaWRlKEUyU19TSURFX0lELCBFVEFfUExVUywgRWxlbUlEKQogICAgSUYgKFBSRVNFTlQoU2lkZUZsaXApKSBTaWRlRmxpcCA9IEVUQV9QTFVTCkNBU0UgKEVUQV9QTFVTKQogICAgT3Bwb3NpdGVTaWRlID0gRWxlbVRvU2lkZShFMlNfU0lERV9JRCwgRVRBX01JTlVTLCBFbGVtSUQpCiAgICBJRiAoUFJFU0VOVChTaWRlRmxpcCkpIFNpZGVGbGlwID0gRVRBX01JTlVTCkNBU0UgKFhJX01JTlVTKQogICAgT3Bwb3NpdGVTaWRlID0gRWxlbVRvU2lkZShFMlNfU0lERV9JRCwgWElfUExVUywgRWxlbUlEKQogICAgSUYgKFBSRVNFTlQoU2lkZUZsaXApKSBTaWRlRmxpcCA9IFhJX1BMVVMKQ0FTRSAoWElfUExVUykKICAgIE9wcG9zaXRlU2lkZSA9IEVsZW1Ub1NpZGUoRTJTX1NJREVfSUQsIFhJX01JTlVTLCBFbGVtSUQpCiAgICBJRiAoUFJFU0VOVChTaWRlRmxpcCkpIFNpZGVGbGlwID0gWElfTUlOVVMKQ0FTRSAoWkVUQV9NSU5VUykKICAgIE9wcG9zaXRlU2lkZSA9IEVsZW1Ub1NpZGUoRTJTX1NJREVfSUQsIFpFVEFfUExVUywgRWxlbUlEKQogICAgSUYgKFBSRVNFTlQoU2lkZUZsaXApKSBTaWRlRmxpcCA9IFpFVEFfUExVUwpDQVNFIChaRVRBX1BMVVMpCiAgICBPcHBvc2l0ZVNpZGUgPSBFbGVtVG9TaWRlKEUyU19TSURFX0lELCBaRVRBX01JTlVTLCBFbGVtSUQpCiAgICBJRiAoUFJFU0VOVChTaWRlRmxpcCkpIFNpZGVGbGlwID0gWkVUQV9NSU5VUwpFTkQgU0VMRUNUCgpFTkQgU1VCUk9VVElORQoKCiE9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiE+IENvbXB1dGUgdGhlIHdhbGwgc3RyZXNzLCB0YXVfdywgYXQgZWFjaCBwb2ludCBpbiBhIFdNTEVTIEJDIHN1cmZhY2UuCiE9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ClNVQlJPVVRJTkUgQ29tcHV0ZVdhbGxTdHJlc3MoKQohIE1PRFVMRVMKVVNFIE1PRF9HbG9iYWxzClVTRSBNT0RfUHJlUHJvYwpVU0UgTU9EX1dNTEVTX1ZhcnMKVVNFIE1PRF9NZXNoX1ZhcnMKVVNFIE1PRF9ER19WYXJzICAgICAgICAgICAgICAgICAgICAgClVTRSBNT0RfRU9TX1ZhcnMgICAgICAgICAgICAgICAgICAgICxPTkxZOiBtdTAKVVNFIE1PRF9NUEkKVVNFIE1PRF9NUElfVmFycwpVU0UgTU9EX0NoYW5nZUJhc2lzQnlEaW0gICAgICAgICAgICAsT05MWTogQ2hhbmdlQmFzaXNTdXJmLCBDaGFuZ2VCYXNpc1ZvbHVtZQpVU0UgTU9EX0NoYW5nZUJhc2lzCklNUExJQ0lUIE5PTkUKCiEtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiEgTE9DQUwgVkFSSUFCTEVTCklOVEVHRVIgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDo6IHAscSxpLGosU2lkZUlELGZsaXAKUkVBTCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOjogdV90YXUsIHRhdV93X21hZywgdXRhbmcsIFZlbE1hZwpSRUFMICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6OiB0YW5ndmVjKDMpLCB0YXVfd192ZWMoMyksIEZhY2VEYXRhKFBQX25WYXJQcmltLDA6UFBfTiwwOlBQX05aKQohPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQpJRiAoLk5PVC5XTUxFU0luaXREb25lKSBUSEVOCiAgICBDQUxMIENvbGxlY3RpdmVTdG9wKF9fU1RBTVBfXywmCiAgICAnQ2Fubm90IGNvbXB1dGUgV2FsbCBTdHJlc3MgLS0gV2FsbC1Nb2RlbGVkIExFUyBJTklUIGlzIG5vdCBkb25lLicpCkVORCBJRgoKISBUT0RPID8KISBGb3IgYWxnZWJyYWljIG1vZGVscyAoZXhjZXB0IGZvciBTY2h1bWFubiksIHRoZSBvdXRjb21lIGlzIHJlYWxseSB1X3RhdSBpbnN0ZWFkIG9mIHRhdV93IGRpcmVjdGx5CiEgSGVuY2UsIHRvIGNvbXB1dGUgdGF1X3csIHdlIHRha2UgdGF1X3cgPSB1X3RhdV4yICogcmhvLiBIb3dldmVyLCB0aGlzIHJobyBzaG91bGQgYmUgCiEgdGhlIGRlbnNpdHkgQVQgVEhFIFdBTEwsIGFuZCB3ZSBhcmUgY3VycmVudGx5IGFzc3VtaW5nIHRoZSBkZW5zaXR5IGF0IHRoZSBleGNoYW5nZSBsb2NhdGlvbiwgaF93bSwKISB3aGljaCBpcyBjb25jZXB0dWFsbHkgd3JvbmcgZm9yIGEgY29tcHJlc3NpYmxlIGZsb3cuCiEgVGh1cywgbWF5YmUgd2Ugc2hvdWxkIHNlbmQgdV90YXUgaW5zdGVhZCBvZiB0YXVfdyB0byB0aGUgTVBJIHByb2MuIHJlc3BvbnNpYmxlIGZvciBCQyBpbXBvc2l0aW9uLAohIGFuZCB0aGVuIHRoaXMgTVBJIHByb2MuIGNvbXB1dGVzIHRhdV93LgohIChTZWUgQm9jcXVldCwgU2FnYXV0ICYgSm91aGF1ZCkuCgohIENvbXB1dGUgdGF1X3cgZm9yIHBvaW50cyBvZiBvdXIgcmVzcG9uc2liaWxpdHkKU0VMRUNUIENBU0UoV2FsbE1vZGVsKQoKICBDQVNFKFdNTEVTX1NDSFVNQU5OKQogICAgCiAgICAhIFNjaHVtYW5uIG1vZGVsCiAgICAhIENvbXB1dGF0aW9uIGlzIGRvbmUgdXNpbmcgaW5zdGFudGFuZW91cyBpbmZvcm1hdGlvbiwgcHJvamVjdGVkIG9udG8gdGhlIHdhbGwtdGFuZ2VudCBkaXJlY3Rpb24KICAgICEgTWVhbiB3YWxsIHNoZWFyIHN0cmVzcyBpcyBhbiBJTlBVVCB0byB0aGlzIG1vZGVsICEgVGhlcmVmb3JlLCBvbmx5IHdvcmtzIGZvciBwZXJpb2RpYyBjaGFubmVsIGZsb3dzLgogICAgISBUaGUgY2hhbm5lbCBmbG93IHRlc3RjYXNlIGFzc3VtZXMgPHRhdV93PiA9IDEuMAogICAgISB1X3RhdSBpcyB1c2VkIGluIHRoZSBsb2ctbGF3IGVxLiB0byBleHRyYWN0IDx1PiAodV9tZWFuKSwgd2hpY2ggaXMgdGhlbiB1c2VkIHRvIGNhbGN1bGF0ZSB0YXVfdwoKICAgICEgRE8gc1Byb2M9MCxuUHJvY3NfU2VuZFRhdVcKICAgICEgICAgICEgQ2FsY3VsYXRlIHRhdV93IGZvciBlYWNoIGhfd20gdGhhdCBpcyBhcHByb3hpbWF0ZWQgYXMgYSBmYWNlIG5vZGUKICAgICEgICAgIERPIEZQSW5kPTEsblRhdVdfTUlORV9GYWNlUG9pbnQoc1Byb2MpCiAgICAhICAgICAgICAgcCA9IFRhdVdfTUlORV9GYWNlUG9pbnQoMSxGUEluZCxzUHJvYykKICAgICEgICAgICAgICBxID0gVGF1V19NSU5FX0ZhY2VQb2ludCgyLEZQSW5kLHNQcm9jKQogICAgISAgICAgICAgIFNpZGVJRCA9IFRhdVdfTUlORV9GYWNlUG9pbnQoMyxGUEluZCxzUHJvYykKCiAgICAhICAgICAgICAgISBGYWNlX3hHUCBpcyBvbmx5IHBvcHVsYXRlZCBmb3IgbWFzdGVyIHNpZGVzLCBzbyB0aGF0IG9ubHkgbWFzdGVyIHNpZGVzIGhhdmUgYXBwcm94aW1hdGlvbiBub2RlcyAoY2hlY2sgSW5pdFdNTEVTIGFib3ZlKQogICAgISAgICAgICAgICEgaGVuY2UsIHVzZSBvZiBVUHJpbV9tYXN0ZXIgaXMgZ3VhcmFudGVlZCB0byBiZSBjb3JyZWN0IGhlcmUKICAgICEgICAgICAgICAhdXRhbmcgPSBET1RfUFJPRFVDVChVUHJpbV9tYXN0ZXIoMjo0LHAscSxTaWRlSUQpLFRhdVdfTUlORV9Ob3JtVmVjKDosRmFjZVRvTG9jYWxQb2ludChGUEluZCxzUHJvYyksc1Byb2MpKQogICAgISAgICAgICAgIHV0YW5nID0gVVByaW1fbWFzdGVyKDIscCxxLFNpZGVJRCkKCiAgICAhICAgICAgICAgdV90YXUgPSBTUVJUKDEuMC9VUHJpbV9tYXN0ZXIoMSxwLHEsU2lkZUlEKSkgCiAgICAhICAgICAgICAgdV9tZWFuID0gdV90YXUqKCAoMS4vdkthcm1hbikgKiBMT0coKGFic19oX3dtKnVfdGF1KS9tdTApICsgQiApCiAgICAhICAgICAgICAgVGF1V19NSU5FKDEsRmFjZVRvTG9jYWxQb2ludChGUEluZCxzUHJvYyksc1Byb2MpID0gdXRhbmcvdV9tZWFuICogMS4wICEgPHRhdV93PiA9IDEuMAogICAgISAgICAgICAgIFRhdVdfTUlORSgyLEZhY2VUb0xvY2FsUG9pbnQoRlBJbmQsc1Byb2MpLHNQcm9jKSA9ICgyLjAqbXUwKSooVVByaW1fbWFzdGVyKDQscCxxLFNpZGVJRCkvYWJzX2hfd20pCiAgICAhICAgICBFTkQgRE8KCiAgICAhICAgICAhIENhbGN1bGF0ZSB0YXVfdyBmb3IgZWFjaCBoX3dtIHRoYXQgaXMgYXBwcm94aW1hdGVkIGFzIGFuIGludGVyaW9yIG5vZGUKICAgICEgICAgIERPIElQSW5kPTEsblRhdVdfTUlORV9JbnRlcmlvclBvaW50KHNQcm9jKQogICAgISAgICAgICAgIHAgPSBUYXVXX01JTkVfSW50ZXJpb3JQb2ludCgxLElQSW5kLHNQcm9jKQogICAgISAgICAgICAgIHEgPSBUYXVXX01JTkVfSW50ZXJpb3JQb2ludCgyLElQSW5kLHNQcm9jKQogICAgISAgICAgICAgIHIgPSBUYXVXX01JTkVfSW50ZXJpb3JQb2ludCgzLElQSW5kLHNQcm9jKQogICAgISAgICAgICAgIEVsZW1JRCA9IFRhdVdfTUlORV9JbnRlcmlvclBvaW50KDQsSVBJbmQsc1Byb2MpCgogICAgISAgICAgICAgICF1dGFuZyA9IERPVF9QUk9EVUNUKFVQcmltKDI6NCxwLHEscixFbGVtSUQpLFRhdVdfTUlORV9Ob3JtVmVjKDosSW50ZXJpb3JUb0xvY2FsUG9pbnQoSVBJbmQpLHNQcm9jKSkKICAgICEgICAgICAgICB1dGFuZyA9IFVQcmltKDIscCxxLHIsRWxlbUlEKQoKICAgICEgICAgICAgICB1X3RhdSA9IFNRUlQoMS4wL1VQcmltKDEscCxxLHIsRWxlbUlEKSkgCiAgICAhICAgICAgICAgdV9tZWFuID0gdV90YXUqKCAoMS4vdkthcm1hbikgKiBMT0coKGFic19oX3dtKnVfdGF1KS9tdTApICsgQiApCiAgICAhICAgICAgICAgVGF1V19NSU5FKDEsSW50ZXJpb3JUb0xvY2FsUG9pbnQoSVBJbmQsc1Byb2MpLHNQcm9jKSA9IHV0YW5nL3VfbWVhbiAqIDEuMCAhIDx0YXVfdz4gPSAxLjAKICAgICEgICAgICAgICBUYXVXX01JTkUoMixJbnRlcmlvclRvTG9jYWxQb2ludChJUEluZCxzUHJvYyksc1Byb2MpID0gKDIuMCptdTApKihVUHJpbSg0LHAscSxyLEVsZW1JRCkvYWJzX2hfd20pCiAgICAhICAgICBFTkQgRE8KCiAgICAhICAgICAhIENhbGN1bGF0ZSB0YXVfdyBmb3IgZWFjaCBoX3dtIHRoYXQgbXVzdCBiZSBpbnRlcnBvbGF0ZWQKICAgICEgICAgIERPIEludFBJbmQ9MSxuVGF1V19NSU5FX0ludGVycG9sYXRlKHNQcm9jKQogICAgISAgICAgICAgIEVsZW1JRCA9IElOVChUYXVXX01JTkVfSW50ZXJwb2xhdGUoNCxJbnRQSW5kLHNQcm9jKSkKICAgICEgICAgICAgICAhdmVsX2luc3QoMSkgPSBJbnRlcnBvbGF0ZUh3bShFbGVtSUQsTGFnX3hpKDosSW50UEluZCxzUHJvYyksTGFnX2V0YSg6LEludFBJbmQsc1Byb2MpLExhZ196ZXRhKDosSW50UEluZCxzUHJvYyksMixwcmltPS5UUlVFLikKICAgICEgICAgICAgICAhdmVsX2luc3QoMikgPSBJbnRlcnBvbGF0ZUh3bShFbGVtSUQsTGFnX3hpKDosSW50UEluZCxzUHJvYyksTGFnX2V0YSg6LEludFBJbmQsc1Byb2MpLExhZ196ZXRhKDosSW50UEluZCxzUHJvYyksMyxwcmltPS5UUlVFLikKICAgICEgICAgICAgICAhdmVsX2luc3QoMykgPSBJbnRlcnBvbGF0ZUh3bShFbGVtSUQsTGFnX3hpKDosSW50UEluZCxzUHJvYyksTGFnX2V0YSg6LEludFBJbmQsc1Byb2MpLExhZ196ZXRhKDosSW50UEluZCxzUHJvYyksNCxwcmltPS5UUlVFLikKICAgICEgICAgICAgICAhcmhvX2luc3QgPSBJbnRlcnBvbGF0ZUh3bShFbGVtSUQsTGFnX3hpKDosSW50UEluZCxzUHJvYyksTGFnX2V0YSg6LEludFBJbmQsc1Byb2MpLExhZ196ZXRhKDosSW50UEluZCxzUHJvYyksMSkKCiAgICAhICAgICAgICAgIXV0YW5nID0gRE9UX1BST0RVQ1QodmVsX2luc3QoOiksVGF1V19NSU5FX05vcm1WZWMoOixJbnRlcnBUb0xvY2FsUG9pbnQoSW50UEluZCksc1Byb2MpKQogICAgISAgICAgICAgIHV0YW5nID0gdmVsX2luc3QoMSkKCiAgICAhICAgICAgICAgdV90YXUgPSBTUVJUKDEuMC9yaG9faW5zdCkgCiAgICAhICAgICAgICAgdV9tZWFuID0gdV90YXUqKCAoMS4vdkthcm1hbikgKiBMT0coKGFic19oX3dtKnVfdGF1KS9tdTApICsgQiApCiAgICAhICAgICAgICAgVGF1V19NSU5FKDEsSW50ZXJwVG9Mb2NhbFBvaW50KEludFBJbmQsc1Byb2MpLHNQcm9jKSA9IHV0YW5nL3VfbWVhbiAqIDEuMCAhIDx0YXVfdz4gPSAxLjAKICAgICEgICAgICAgICBUYXVXX01JTkUoMixJbnRlcnBUb0xvY2FsUG9pbnQoSW50UEluZCxzUHJvYyksc1Byb2MpID0gKDIuMCptdTApKih2ZWxfaW5zdCgzKS9hYnNfaF93bSkKICAgICEgICAgIEVORCBETwogICAgISBFTkQgRE8KCiAgQ0FTRSAoV01MRVNfTE9HTEFXLFdNTEVTX1JFSUNIQVJEVCkKCiAgICAhIEluIHRoaXMgY2FzZSwgaXQgaXMgYXNzdW1lZCB0aGF0IHRoZSBsb2ctbGF3IGlzIGFuIGluc3RhbnRhbmVvdXMgcmVsYXRpb24KICAgICEgVGhlbiwgdSAocHJvamVjdGVkIG9udG8gdGhlIHdhbGwtdGFuZ2VudCBzdHJlYW13aXNlIGRpcmVjdGlvbikgaXMgdXNlZCBpbiB0aGUgbG9nLWxhdwogICAgISBhbmQgdV90YXUgaXMgY29tcHV0ZWQgKHVzaW5nIE5ld3RvbiBpdGVyYXRpb25zKS4KICAgICEgVGhlbiwgdV90YXUgaXMgdXNlZCB0byBjb21wdXRlIHdhbGwgc2hlYXIgc3RyZXNzZXMuCgogICAgRE8gaT0xLG5NYXN0ZXJXTUxFU1NpZGUKICAgICAgICBTaWRlSUQgPSBNYXN0ZXJUb09wcFNpZGUoaSkKCiAgICAgICAgISBXaGVuZXZlciB3ZSBhcmUgdXNpbmcgaW5mb3JtYXRpb24gZnJvbSB0aGUgbG9jYWwgc2lkZSwgd2UgbmVlZCB0byBmbGlwIHRoZSByZWZlcmVuY2UKICAgICAgICAhIHNvIHRoYXQgdGhlIGluZGljZXMgcCxxLCBjb2luY2lkZSBiZXR3ZWVuIHRoZSBCQyBhbmQgdGhlIHVwcGVyIGZhY2UuCiAgICAgICAgISBUaGlzIGlzIG5vdCBuZWVkZWQgd2hlbiB3ZSdyZSB0YWtpbmcgbm9uLWxvY2FsIGluZm9ybWF0aW9uLCBpLmUuLCBmcm9tIHRoZQogICAgICAgICEgZmFjZSBvd25lZCBieSB0aGUgZWxlbWVudCBqdXN0IGFib3ZlIHRoZSB3YWxsIGVsZW1lbnQKICAgICAgICBmbGlwID0gV01MRVNGbGlwKE1hc3RlclRvV01MRVNTaWRlKGkpKQoKICAgICAgICAhIElmIGZpbHRlcmluZyBpcyBPTiwgd2Ugc2hvdWxkIGZpbHRlciB0aGUgZmFjZSBzb2x1dGlvbiBub3cgYW5kIHN0b3JlIGl0IGluIExFU19Tb2wgYXJyYXkKICAgICAgICBJRiAoV01MRVNfRmlsdGVyIC5HVC4gMCkgVEhFTgogICAgICAgICAgICAhQ0FMTCBXTUxFU0ZpbHRlcihVUHJpbV9tYXN0ZXIoOiw6LDosU2lkZUlEKSwgRmFjZURhdGEsIFdNTEVTX0ZpbHRlck1hdCkKICAgICAgICAgICAgQ0FMTCBDaGFuZ2VCYXNpc1N1cmYoUFBfblZhclByaW0sUFBfTixQUF9OLFdNTEVTX0ZpbHRlck1hdCxVUHJpbV9tYXN0ZXIoOiw6LDosU2lkZUlEKSxGYWNlRGF0YSg6LDosOikpCiAgICAgICAgRUxTRQogICAgICAgICAgICBGYWNlRGF0YSg6LDosOikgPSBVUHJpbV9tYXN0ZXIoOiw6LDosU2lkZUlEKQogICAgICAgIEVORCBJRgoKICAgICAgICBETyBxPTAsUFBfTlo7IERPIHA9MCxQUF9OCiAgICAgICAgICAgIHRhbmd2ZWMgPSBGYWNlRGF0YSgyOjQsRlMyTSgxLHAscSxmbGlwKSxGUzJNKDIscCxxLGZsaXApKSAtIERPVF9QUk9EVUNUKEZhY2VEYXRhKDI6NCxGUzJNKDEscCxxLGZsaXApLEZTMk0oMixwLHEsZmxpcCkpLE5vcm1WZWMoMTozLHAscSwwLFdNTEVTVG9CQ1NpZGUoTWFzdGVyVG9XTUxFU1NpZGUoaSkpKSkqTm9ybVZlYygxOjMscCxxLDAsV01MRVNUb0JDU2lkZShNYXN0ZXJUb1dNTEVTU2lkZShpKSkpCiAgICAgICAgICAgIFZlbE1hZyA9IDAuCiAgICAgICAgICAgIERPIGo9MSwzCiAgICAgICAgICAgICAgICBWZWxNYWcgPSBWZWxNYWcgKyB0YW5ndmVjKGopKioyCiAgICAgICAgICAgIEVORCBETwogICAgICAgICAgICBWZWxNYWcgPSBTUVJUKFZlbE1hZykKICAgICAgICAgICAgdGFuZ3ZlYyA9IHRhbmd2ZWMvVmVsTWFnCgogICAgICAgICAgICB1dGFuZyA9IERPVF9QUk9EVUNUKEZhY2VEYXRhKDI6NCxGUzJNKDEscCxxLGZsaXApLEZTMk0oMixwLHEsZmxpcCkpLHRhbmd2ZWMpCgogICAgICAgICAgICB1X3RhdSA9IE5ld3RvbkxvZ0xhdyh1dGFuZywobXUwL0ZhY2VEYXRhKDEsRlMyTSgxLHAscSxmbGlwKSxGUzJNKDIscCxxLGZsaXApKSksaF93bShwLHEsTWFzdGVyVG9XTUxFU1NpZGUoaSkpKQogICAgICAgICAgICB0YXVfd19tYWcgPSBGYWNlRGF0YSgxLEZTMk0oMSxwLHEsZmxpcCksRlMyTSgyLHAscSxmbGlwKSkqKHVfdGF1KioyKSAhIENIRUNLIFRPRE8gQUJPVkUKICAgICAgICAgICAgdGF1X3dfdmVjID0gKC8wLix0YXVfd19tYWcsMC4vKQoKICAgICAgICAgICAgV01MRVNfVGF1dygxLHAscSxNYXN0ZXJUb1dNTEVTU2lkZShpKSkgPSAtMS4qRE9UX1BST0RVQ1QodGF1X3dfdmVjKDE6MyksTm9ybVZlYygxOjMscCxxLDAsV01MRVNUb0JDU2lkZShNYXN0ZXJUb1dNTEVTU2lkZShpKSkpKQogICAgICAgICAgICBXTUxFU19UYXV3KDIscCxxLE1hc3RlclRvV01MRVNTaWRlKGkpKSA9IDAuCiAgICAgICAgRU5EIERPOyBFTkQgRE8gISBwLCBxCiAgICBFTkQgRE8KCiAgICBETyBpPTEsblNsYXZlV01MRVNTaWRlCiAgICAgICAgU2lkZUlEID0gU2xhdmVUb09wcFNpZGUoaSkKCiAgICAgICAgISBXaGVuZXZlciB3ZSBhcmUgdXNpbmcgaW5mb3JtYXRpb24gZnJvbSB0aGUgbG9jYWwgc2lkZSwgd2UgbmVlZCB0byBmbGlwIHRoZSByZWZlcmVuY2UKICAgICAgICAhIHNvIHRoYXQgdGhlIGluZGljZXMgcCxxLCBjb2luY2lkZSBiZXR3ZWVuIHRoZSBCQyBhbmQgdGhlIHVwcGVyIGZhY2UuCiAgICAgICAgISBUaGlzIGlzIG5vdCBuZWVkZWQgd2hlbiB3ZSdyZSB0YWtpbmcgbm9uLWxvY2FsIGluZm9ybWF0aW9uLCBpLmUuLCBmcm9tIHRoZQogICAgICAgICEgZmFjZSBvd25lZCBieSB0aGUgZWxlbWVudCBqdXN0IGFib3ZlIHRoZSB3YWxsIGVsZW1lbnQKICAgICAgICBmbGlwID0gV01MRVNGbGlwKFNsYXZlVG9XTUxFU1NpZGUoaSkpCgogICAgICAgIElGIChXTUxFU19GaWx0ZXIgLkdULiAwKSBUSEVOCiAgICAgICAgICAgICFDQUxMIFdNTEVTRmlsdGVyKFVQcmltX3NsYXZlLCBGYWNlRGF0YSwgV01MRVNfRmlsdGVyTWF0KQogICAgICAgICAgICBDQUxMIENoYW5nZUJhc2lzU3VyZihQUF9uVmFyUHJpbSxQUF9OLFBQX04sV01MRVNfRmlsdGVyTWF0LFVQcmltX3NsYXZlKDosOiw6LFNpZGVJRCksRmFjZURhdGEoOiw6LDopKQogICAgICAgIEVMU0UKICAgICAgICAgICAgRmFjZURhdGEoOiw6LDopID0gVVByaW1fc2xhdmUoOiw6LDosU2lkZUlEKQogICAgICAgIEVORCBJRgoKICAgICAgICBETyBxPTAsUFBfTlo7IERPIHA9MCxQUF9OCiAgICAgICAgICAgIHRhbmd2ZWMgPSBGYWNlRGF0YSgyOjQsRlMyTSgxLHAscSxmbGlwKSxGUzJNKDIscCxxLGZsaXApKSAtIERPVF9QUk9EVUNUKEZhY2VEYXRhKDI6NCxGUzJNKDEscCxxLGZsaXApLEZTMk0oMixwLHEsZmxpcCkpLE5vcm1WZWMoMTozLHAscSwwLFdNTEVTVG9CQ1NpZGUoU2xhdmVUb1dNTEVTU2lkZShpKSkpKSpOb3JtVmVjKDE6MyxwLHEsMCxXTUxFU1RvQkNTaWRlKFNsYXZlVG9XTUxFU1NpZGUoaSkpKQogICAgICAgICAgICBWZWxNYWcgPSAwLgogICAgICAgICAgICBETyBqPTEsMwogICAgICAgICAgICAgICAgVmVsTWFnID0gVmVsTWFnICsgdGFuZ3ZlYyhqKSoqMgogICAgICAgICAgICBFTkQgRE8KICAgICAgICAgICAgVmVsTWFnID0gU1FSVChWZWxNYWcpCiAgICAgICAgICAgIHRhbmd2ZWMgPSB0YW5ndmVjL1ZlbE1hZwoKICAgICAgICAgICAgdXRhbmcgPSBET1RfUFJPRFVDVChGYWNlRGF0YSgyOjQsRlMyTSgxLHAscSxmbGlwKSxGUzJNKDIscCxxLGZsaXApKSx0YW5ndmVjKQoKICAgICAgICAgICAgdV90YXUgPSBOZXd0b25Mb2dMYXcodXRhbmcsKG11MC9GYWNlRGF0YSgxLEZTMk0oMSxwLHEsZmxpcCksRlMyTSgyLHAscSxmbGlwKSkpLGhfd20ocCxxLFNsYXZlVG9XTUxFU1NpZGUoaSkpKQogICAgICAgICAgICB0YXVfd19tYWcgPSBGYWNlRGF0YSgxLEZTMk0oMSxwLHEsZmxpcCksRlMyTSgyLHAscSxmbGlwKSkqKHVfdGF1KioyKSAhIENIRUNLIFRPRE8gQUJPVkUKICAgICAgICAgICAgdGF1X3dfdmVjID0gKC8wLix0YXVfd19tYWcsMC4vKQoKICAgICAgICAgICAgV01MRVNfVGF1dygxLHAscSxTbGF2ZVRvV01MRVNTaWRlKGkpKSA9IC0xLipET1RfUFJPRFVDVCh0YXVfd192ZWMoMTozKSxOb3JtVmVjKDE6MyxwLHEsMCxXTUxFU1RvQkNTaWRlKFNsYXZlVG9XTUxFU1NpZGUoaSkpKSkKICAgICAgICAgICAgV01MRVNfVGF1dygyLHAscSxTbGF2ZVRvV01MRVNTaWRlKGkpKSA9IDAuCgogICAgICAgIEVORCBETzsgRU5EIERPICEgcCwgcQogICAgRU5EIERPCgogICAgSUYoTG9nZ2luZykgQ0FMTCBGTFVTSChVTklUX2xvZ091dCkKCiAgQ0FTRShXTUxFU19DT1VFVFRFKQoKICAgICEgVGVzdCBmb3IgYSBsYW1pbmFyIGZsb3cgd2l0aCBrbm93biB2ZWxvY2l0eSBwcm9maWxlLCBzbyB0aGF0IHdlIGNhbiBkZWJ1ZyB0aGUgaW1wbGVtZW50YXRpb24KCiAgICBETyBpPTEsbk1hc3RlcldNTEVTU2lkZQogICAgICAgIFNpZGVJRCA9IE1hc3RlclRvT3BwU2lkZShpKQoKICAgICAgICBETyBxPTAsUFBfTlo7IERPIHA9MCxQUF9OCiAgICAgICAgICAgICEgQ2FsY3VsYXRlZCBhcyBpZiBhIG1vZGVsIHdhcyBlbXBsb3llZAogICAgICAgICAgICB1dGFuZyA9IFVQcmltX21hc3RlcigyLHAscSxTaWRlSUQpCgogICAgICAgICAgICB1X3RhdSA9IE5ld3RvbkNvdWV0dGUodXRhbmcsbXUwLGhfd20ocCxxLE1hc3RlclRvV01MRVNTaWRlKGkpKSkgISBkcGR4LCBvYnZpb3VzbHkuCgogICAgICAgICAgICAhIENyZWF0ZSB2ZWN0b3IgYWxpZ25lZCB3aXRoIHdhbGwtbm9ybWFsIGRpcmVjdGlvbiBhbmQgbWFnbml0dWRlIG9mIHRhdV94eQogICAgICAgICAgICB0YXVfd192ZWMgPSAoLzAuLC0wLjUqdV90YXUsMC4vKQogICAgICAgICAgICAhIFByb2plY3QgaXQgb250byB0aGUgbm9ybWFsIGRpcmVjdGlvbiBzbyB0aGF0IHRoZSBjb3JyZWN0IHNpZ25hbCBpcyBpbXBvc2VkCiAgICAgICAgICAgIFdNTEVTX1RhdXcoMSxwLHEsTWFzdGVyVG9XTUxFU1NpZGUoaSkpID0gLTEuKkRPVF9QUk9EVUNUKHRhdV93X3ZlYygxOjMpLE5vcm1WZWMoMTozLHAscSwwLFdNTEVTVG9CQ1NpZGUoTWFzdGVyVG9XTUxFU1NpZGUoaSkpKSkKICAgICAgICAgICAgV01MRVNfVGF1dygyLHAscSxNYXN0ZXJUb1dNTEVTU2lkZShpKSkgPSAwLgoKICAgICAgICBFTkQgRE87IEVORCBETyAhIHAsIHEKICAgIEVORCBETwoKICAgIERPIGk9MSxuU2xhdmVXTUxFU1NpZGUKICAgICAgICBTaWRlSUQgPSBTbGF2ZVRvT3BwU2lkZShpKQoKICAgICAgICBETyBxPTAsUFBfTlo7IERPIHA9MCxQUF9OCiAgICAgICAgICAgICEgQ2FsY3VsYXRlZCBhcyBpZiBhIG1vZGVsIHdhcyBlbXBsb3llZAogICAgICAgICAgICB1dGFuZyA9IFVQcmltX3NsYXZlKDIscCxxLFNpZGVJRCkKCiAgICAgICAgICAgIHVfdGF1ID0gTmV3dG9uQ291ZXR0ZSh1dGFuZyxtdTAsaF93bShwLHEsU2xhdmVUb1dNTEVTU2lkZShpKSkpICEgZHBkeCwgb2J2aW91c2x5LgoKICAgICAgICAgICAgISBDcmVhdGUgdmVjdG9yIGFsaWduZWQgd2l0aCB3YWxsLW5vcm1hbCBkaXJlY3Rpb24gYW5kIG1hZ25pdHVkZSBvZiB0YXVfeHkKICAgICAgICAgICAgdGF1X3dfdmVjID0gKC8wLiwtMC41KnVfdGF1LDAuLykKICAgICAgICAgICAgISBQcm9qZWN0IGl0IG9udG8gdGhlIG5vcm1hbCBkaXJlY3Rpb24gc28gdGhhdCB0aGUgY29ycmVjdCBzaWduYWwgaXMgaW1wb3NlZAogICAgICAgICAgICBXTUxFU19UYXV3KDEscCxxLFNsYXZlVG9XTUxFU1NpZGUoaSkpID0gLTEuKkRPVF9QUk9EVUNUKHRhdV93X3ZlYygxOjMpLE5vcm1WZWMoMTozLHAscSwwLFdNTEVTVG9CQ1NpZGUoU2xhdmVUb1dNTEVTU2lkZShpKSkpKQogICAgICAgICAgICBXTUxFU19UYXV3KDIscCxxLFNsYXZlVG9XTUxFU1NpZGUoaSkpID0gMC4KCiAgICAgICAgRU5EIERPOyBFTkQgRE8gISBwLCBxCiAgICBFTkQgRE8KCgogIENBU0UgREVGQVVMVAogICAgQ0FMTCBhYm9ydChfX1NUQU1QX18sJgogICAgICAgICAnVW5rbm93biBkZWZpbml0aW9uIG9mIFdhbGwgTW9kZWwuJykKCkVORCBTRUxFQ1QKCiEgU3RhcnQgbm9uLWJsb2NraW5nbHkgc2VuZGluZyBXTUxFUyBpbmZvIChmb3IgdGhvc2Ugd2hvIGhhdmUgYW55dGhpbmcgdG8gc2VuZCkKIUNBTEwgU3RhcnRTZW5kVGF1V01QSSgpCgohIEZpbmlzaCByZWNlaXZpbmcgV01MRVMgaW5mbyAobm93IHRoaXMgaXMgYSBibG9ja2luZyBvcC4pCiFDQUxMIEZpbmlzaFJlY2VpdmVUYXVXTVBJKCkKCgohIFNldCB1cCBXTUxFU19UYXVXIHZlY3RvciB3aXRoIGFsbCBuZWNlc3NhcnksIGNvbXB1dGVkIHZhbHVlcyBvZiB3YWxsIHNoZWFyIHN0cmVzcwohIERPIGlTaWRlPTEsbldNTEVTU2lkZXMKISAgICAgRE8gcT0wLFBQX05aOyBETyBwPTAsUFBfTgohICAgICAgICAgV01MRVNfVGF1Vyg6LHAscSxpU2lkZSkgPSBUYXVXX1lPVVJTKDosVGF1V19Qcm9jKDIscCxxLGlTaWRlKSxQcm9jX1JlY3ZUYXVXX0ludihUYXVXX1Byb2MoMSxwLHEsaVNpZGUpKSkKISAgICAgRU5EIERPOyBFTkQgRE8gISBwLCBxCiEgRU5EIERPCgohIyMjIERFQlVHIC0tIFJFTU9WRQohIElGIChMb2dnaW5nKSBUSEVOCiEgICAgIExPR1dSSVRFKCosKikgIj0tPS09LT0tPS09LT0tPS09LT0tIENIRUNLIFBPSU5UUyBFUVVJVkFMRU5DRSA9LT0tPS09LT0tPS09LT0tPS09LSIKISAgICAgTE9HV1JJVEUoKiwnKChJNCwyWCksMyhJMTUsMlgpKScpICJOIyIsICJYIiwgIlkiLCAiWiIKISAgICAgRE8gaVNpZGU9MSxuV01MRVNTaWRlcwohICAgICAgICAgRE8gcT0wLFBQX05aOyBETyBwPTAsUFBfTgohICAgICAgICAgICAgIExPR1dSSVRFKCosJygoSTQsMlgpLDMoRTE1LjgsMlgpKScpIAohICAgICAgICAgRU5EIERPOyBFTkQgRE8gISBwLCBxCiEgICAgIEVORCBETwohIEVORCBJRgoKCkVORCBTVUJST1VUSU5FIENvbXB1dGVXYWxsU3RyZXNzCgoKIT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KIT4gRXZhbHVhdGUgdGhlIHZpc2NvdXMgZmx1eGVzIHRocm91Z2ggdGhlIEJvdW5kYXJ5IHNpZGUgb2YgV01MRVMuCiE+IFRoaXMgaXMgZG9uZSBzaW1wbHkgc2V0dGluZyB0aGUgYXBwcm9wcmlhdGUgY29tcG9uZW50cyBmcm9tIHRoZSBwcmV2aW91c2x5IGNhbGN1bGF0ZWQgd2FsbCBzdHJlc3MsIFdNTEVTX1RhdXcKIT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KU1VCUk9VVElORSBFdmFsRGlmZkZsdXgzRF9XTUxFUyhObG9jLCBVUHJpbV9tYXN0ZXIsIFRhdXcsIGYsIGcsIGgpCiEgTU9EVUxFUwpVU0UgTU9EX0dsb2JhbHMKSU1QTElDSVQgTk9ORQoKIS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KISBMT0NBTCBWQVJJQUJMRVMKSU5URUdFUiwgSU5URU5UKElOKSAgICAgICAgICAgICAgICAgICAgOjogTmxvYwpSRUFMLCBJTlRFTlQoSU4pICAgICAgICAgICAgICAgICAgICAgICA6OiBUYXV3KDE6MiwgMDpObG9jLCAwOlpESU0oTmxvYykpClJFQUwsIElOVEVOVChJTikgICAgICAgICAgICAgICAgICAgICAgIDo6IFVQcmltX21hc3RlciggUFBfblZhclByaW0sMDpObG9jLDA6WkRJTShObG9jKSkKUkVBTCxESU1FTlNJT04oUFBfblZhciAgICAsMDpObG9jLDA6WkRJTShObG9jKSksSU5URU5UKE9VVCkgOjogZixnLGgKIS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KSU5URUdFUiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDo6IHAscQpSRUFMICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOjogdGF1X3h5LCB0YXVfeXoKIT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KCkxPR1dSSVRFKCosKikgJy0tLS0tLS0tIERJRkZVU0lWRSBGTFVYIChWSVNDT1VTKSAtLS0tLS0tLS0tLS0nCkxPR1dSSVRFKCosJygyKEE0LDJYKSwxNShBMTUsMlgpKScpICdwJywgJ3EnLCAnZigxKScsICdmKDIpJywgJ2YoMyknLCAnZig0KScsICdmKDUpJywmCiAgICAgICAgICAgICdnKDEpJywgJ2coMiknLCAnZygzKScsICdnKDQpJywgJ2coNSknLCAnaCgxKScsICdoKDIpJywgJ2goMyknLCAnaCg0KScsICdoKDUpJwoKRE8gcT0wLFpESU0oTmxvYyk7IERPIHA9MCxObG9jCgogIHRhdV94eSA9IFRhdXcoMSxwLHEpCiAgdGF1X3l6ID0gVGF1dygyLHAscSkKCiAgISBBc3N1bWluZyBhZGlhYmF0aWMgd2FsbCwgaS5lLiwgZFRfZHggPSAwLgogIGYoMSxwLHEpID0gMC4KICBmKDIscCxxKSA9IDAuICEgdGF1X3h4ID0gMAogIGYoMyxwLHEpID0gLXRhdV94eQogIGYoNCxwLHEpID0gMC4gISB0YXVfeHogPSAwCiAgZig1LHAscSkgPSAwLiAhIC0oVVByaW1fbWFzdGVyKDMscCxxKSp0YXVfeHkpICEgLSh1KnRhdV94eCArIHYqdGF1X3h5ICsgdyp0YXVfeHogLSBrZFRkeCkKCiAgZygxLHAscSkgPSAwLgogIGcoMixwLHEpID0gLXRhdV94eSAhIHRhdV95eCA9IHRhdV94eQogIGcoMyxwLHEpID0gMC4gISB0YXVfeXkgPSAwCiAgZyg0LHAscSkgPSAtdGF1X3l6ICEgdGF1X3l6ID0gdGF1X3p5CiAgZyg1LHAscSkgPSAwLiAhIC0oVVByaW1fbWFzdGVyKDIscCxxKSp0YXVfeHkgKyBVUHJpbV9tYXN0ZXIoNCxwLHEpKnRhdV95eikgISAtKHUqdGF1X3l4ICsgdip0YXVfeXkgKyB3KnRhdV95eiAtIGtkVGR4KQoKICBoKDEscCxxKSA9IDAuCiAgaCgyLHAscSkgPSAwLiAhIHRhdV96eCA9IDAKICBoKDMscCxxKSA9IC10YXVfeXogISB0YXVfenkgPSB0YXVfeXoKICBoKDQscCxxKSA9IDAuICEgdGF1X3p6ID0gMAogIGgoNSxwLHEpID0gMC4gIS0oVVByaW1fbWFzdGVyKDMscCxxKSp0YXVfeXopICEgLSh1KnRhdV96eCArIHYqdGF1X3p5ICsgdyp0YXVfenogLSBrZFRkeCkKCgogIExPR1dSSVRFKCosJygyKEk0LDJYKSwxNShFMTUuOCwyWCkpJykgcCwgcSwgZigxLHAscSksIGYoMixwLHEpLCBmKDMscCxxKSwgZig0LHAscSksIGYoNSxwLHEpLCYKICAgICBnKDEscCxxKSwgZygyLHAscSksIGcoMyxwLHEpLCBnKDQscCxxKSwgZyg1LHAscSksIGgoMSxwLHEpLCBoKDIscCxxKSwgaCgzLHAscSksIGgoNCxwLHEpLCBoKDUscCxxKQoKRU5EIERPOyBFTkQgRE8gISBwLHEKCkxPR1dSSVRFKCosJyhYKScpCgpFTkQgU1VCUk9VVElORSBFdmFsRGlmZkZsdXgzRF9XTUxFUwoKCiE9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiE+IEV2YWx1YXRlIHVfdGF1IGZyb20gYSBsb2ctbGF3IGdpdmVuIGluc3RhbnRhbmVvdXMgdmVsb2NpdHksIHVzaW5nIE5ld3RvbiBtZXRob2QKIT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KRlVOQ1RJT04gTmV3dG9uTG9nTGF3KHZlbHgsbnUsaHdtKQohIE1PRFVMRVMKVVNFIE1PRF9XTUxFU19WYXJzICAgICAgICAgICAgICAgICAgCklNUExJQ0lUIE5PTkUKIS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KISBJTlBVVC9PVVRQVVQgVkFSSUFCTEVTClJFQUwsIElOVEVOVChJTikgICAgICAgICAgICA6OiB2ZWx4ICAgICAgICAgISBUYW5nZW50aWFsIHZlbG9jaXR5IHRvIGZlZWQgd2FsbCBtb2RlbCAobG9nLWxhdyBmdW5jdGlvbikKUkVBTCwgSU5URU5UKElOKSAgICAgICAgICAgIDo6IG51ICAgICAgICAgICAhIGtpbmVtYXRpYyB2aXNjb3NpdHkgYXQgaF93bQpSRUFMLCBJTlRFTlQoSU4pICAgICAgICAgICAgOjogaHdtICAgICAgICAgICEgV2FsbCBtb2RlbCBoZWlnaHQKUkVBTCAgICAgICAgICAgICAgICAgICAgICAgIDo6IE5ld3RvbkxvZ0xhdyAhIENvbXB1dGVkIGZyaWN0aW9uIHZlbG9jaXR5IHVfdGF1CiEtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiEgTE9DQUwgVkFSSUFCTEVTCklOVEVHRVIgICAgICAgICAgICAgICAgICAgICA6OiBpdGVyClJFQUwgICAgICAgICAgICAgICAgICAgICAgICA6OiBmLGZwcmltZQohLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoKTmV3dG9uTG9nTGF3ID0gMS4wICEgSW5pdGlhbCBndWVzcywgdXN1YWxseSBub3Qgc28gYmFkIGZvciB1X3RhdQppdGVyID0gMAoKU0VMRUNUIENBU0UoV2FsbE1vZGVsKQogICAgQ0FTRShXTUxFU19MT0dMQVcpCiAgICAgICAgRE8gV0hJTEUoaXRlci5MVC4xMCkgISBNYXhpbXVtIG51bWJlciBvZiBpdGVyYXRpb25zLiBVc3VhbGx5LCB1X3RhdSBpcyBmb3VuZCB3aXRoIDF+NCBpdGVycwogICAgICAgICAgICBpdGVyID0gaXRlcisxCiAgICAgICAgICAgIGYgPSBOZXd0b25Mb2dMYXcqKCAoMS4vdkthcm1hbikqTE9HKGh3bSpOZXd0b25Mb2dMYXcvbnUpICsgQiApIC0gdmVseAogICAgICAgICAgICBmcHJpbWUgPSAoMS4vdkthcm1hbikgKiAoTE9HKGh3bSpOZXd0b25Mb2dMYXcvbnUpICsgMS4pICsgQgogICAgICAgICAgICAhIElGKEFCUyhmcHJpbWUpLkxFLjEuRS01KSBFWElUICEgZnByaW1lIH4gMCAtLSBJTkNPTUlORyBPVkVSRkxPVyBCWSBESVZJU0lPTgogICAgICAgICAgICBOZXd0b25Mb2dMYXcgPSBOZXd0b25Mb2dMYXcgLSBmL2ZwcmltZQogICAgICAgICAgICBJRiAoQUJTKGYvZnByaW1lKS5MRS4xLkUtNSkgRVhJVCAhIDEuRS01ID0gc3RvcCBjcml0ZXJpb24gKHRvbGVyYW5jZSkKICAgICAgICBFTkQgRE8KCiAgICBDQVNFKFdNTEVTX1JFSUNIQVJEVCkKICAgICAgICBETyBXSElMRShpdGVyLkxULjEwKSAhIE1heGltdW0gbnVtYmVyIG9mIGl0ZXJhdGlvbnMuIFVzdWFsbHksIHVfdGF1IGlzIGZvdW5kIHdpdGggMX40IGl0ZXJzCiAgICAgICAgICAgIGl0ZXIgPSBpdGVyKzEKICAgICAgICAgICAgZiA9IE5ld3RvbkxvZ0xhdyooICgxLi92S2FybWFuKSpMT0coMS4gKyB2S2FybWFuKmh3bSpOZXd0b25Mb2dMYXcvbnUpICsgKEIgLSAoMS4vdkthcm1hbikqTE9HKHZLYXJtYW4pKSooMS4gLSBFWFAoLWh3bSpOZXd0b25Mb2dMYXcvKDExLipudSkpIC0gKGh3bSpOZXd0b25Mb2dMYXcvKDExLipudSkpKkVYUCgtaHdtKk5ld3RvbkxvZ0xhdy8oMy4qbnUpKSApICkgLSB2ZWx4CiAgICAgICAgICAgIGZwcmltZSA9ICgxLi92S2FybWFuKSpMT0coMS4gKyB2S2FybWFuKmh3bSpOZXd0b25Mb2dMYXcvbnUpICsgKEIgLSAoMS4vdkthcm1hbikqTE9HKHZLYXJtYW4pKSooMS4gLSBFWFAoLWh3bSpOZXd0b25Mb2dMYXcvKDExLipudSkpIC0gKGh3bSpOZXd0b25Mb2dMYXcvKDExLipudSkpKkVYUCgtaHdtKk5ld3RvbkxvZ0xhdy8oMy4qbnUpKSApICYKICAgICAgICAgICAgICAgICsgaHdtKk5ld3RvbkxvZ0xhdy8obnUgKyB2S2FybWFuKmh3bSpOZXd0b25Mb2dMYXcpICYKICAgICAgICAgICAgICAgICsgTmV3dG9uTG9nTGF3KihCIC0gKDEuL3ZLYXJtYW4pKkxPRyh2S2FybWFuKSkqKChod20vKDExLipudSkpKihFWFAoLWh3bSpOZXd0b25Mb2dMYXcvKDExLipudSkpIC0gRVhQKC1od20qTmV3dG9uTG9nTGF3LygzLipudSkpICsgKGh3bSpOZXd0b25Mb2dMYXcvKDExLipudSkpKkVYUCgtaHdtKk5ld3RvbkxvZ0xhdy8oMy4qbnUpKSApICkKICAgICAgICAgICAgISBJRihBQlMoZnByaW1lKS5MRS4xLkUtNSkgRVhJVCAhIGZwcmltZSB+IDAgLS0gSU5DT01JTkcgT1ZFUkZMT1cgQlkgRElWSVNJT04KICAgICAgICAgICAgTmV3dG9uTG9nTGF3ID0gTmV3dG9uTG9nTGF3IC0gZi9mcHJpbWUgICAgICAgICAgICAKICAgICAgICAgICAgSUYgKEFCUyhmL2ZwcmltZSkuTEUuMS5FLTUpIEVYSVQgISAxLkUtNSA9IHN0b3AgY3JpdGVyaW9uICh0b2xlcmFuY2UpCiAgICAgICAgRU5EIERPCgpFTkQgU0VMRUNUCgoKRU5EIEZVTkNUSU9OIE5ld3RvbkxvZ0xhdwoKIT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KIT4gRXZhbHVhdGUgdV90YXUgZnJvbSBhIGxvZy1sYXcgZ2l2ZW4gaW5zdGFudGFuZW91cyB2ZWxvY2l0eSwgdXNpbmcgTmV3dG9uIG1ldGhvZAohPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQpGVU5DVElPTiBOZXd0b25Db3VldHRlKHZlbHgsbnUsaHdtKQohIE1PRFVMRVMKVVNFIE1PRF9XTUxFU19WYXJzICAgICAgICAgICAgICAgICAgCklNUExJQ0lUIE5PTkUKIS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KISBJTlBVVC9PVVRQVVQgVkFSSUFCTEVTClJFQUwsIElOVEVOVChJTikgICAgICAgICAgICA6OiB2ZWx4ICAgICAgICAgISBUYW5nZW50aWFsIHZlbG9jaXR5IHRvIGZlZWQgd2FsbCBtb2RlbCAobG9nLWxhdyBmdW5jdGlvbikKUkVBTCwgSU5URU5UKElOKSAgICAgICAgICAgIDo6IG51ICAgICAgICAgICAhIGtpbmVtYXRpYyB2aXNjb3NpdHkgYXQgaF93bQpSRUFMLCBJTlRFTlQoSU4pICAgICAgICAgICAgOjogaHdtICAgICAgICAgICEgV2FsbCBtb2RlbCBoZWlnaHQKUkVBTCAgICAgICAgICAgICAgICAgICAgICAgIDo6IE5ld3RvbkNvdWV0dGUgISBDb21wdXRlZCBmcmljdGlvbiB2ZWxvY2l0eSB1X3RhdQohLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQohIExPQ0FMIFZBUklBQkxFUwpJTlRFR0VSICAgICAgICAgICAgICAgICAgICAgOjogaXRlcgpSRUFMICAgICAgICAgICAgICAgICAgICAgICAgOjogZixmcHJpbWUKIS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCk5ld3RvbkNvdWV0dGUgPSAwLjUgISBJbml0aWFsIGd1ZXNzLCB1c3VhbGx5IG5vdCBzbyBiYWQgZm9yIHVfdGF1Cml0ZXIgPSAwCgpETyBXSElMRShpdGVyLkxULjEwKSAhIE1heGltdW0gbnVtYmVyIG9mIGl0ZXJhdGlvbnMuIFVzdWFsbHksIHVfdGF1IGlzIGZvdW5kIHdpdGggMX40IGl0ZXJzCiAgICBpdGVyID0gaXRlcisxCiAgICBmID0gdmVseCArICgxLi8oMi4qbnUpKSpOZXd0b25Db3VldHRlKmh3bSooMS4taHdtKQogICAgZnByaW1lID0gKDEuLygyLipudSkpKmh3bSooMS4taHdtKQogICAgISBJRihBQlMoZnByaW1lKS5MRS4xLkUtNSkgRVhJVCAhIGZwcmltZSB+IDAgLS0gSU5DT01JTkcgT1ZFUkZMT1cgQlkgRElWSVNJT04KICAgIE5ld3RvbkNvdWV0dGUgPSBOZXd0b25Db3VldHRlIC0gZi9mcHJpbWUKICAgIElGIChBQlMoZi9mcHJpbWUpLkxFLjEuRS01KSBFWElUICEgMS5FLTUgPSBzdG9wIGNyaXRlcmlvbiAodG9sZXJhbmNlKQpFTkQgRE8KRU5EIEZVTkNUSU9OIE5ld3RvbkNvdWV0dGUKCiE9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiE+IEZpbmFsaXplIHBhcmFtZXRlcnMgb2YgV01MRVMgY29tcHV0YXRpb24KIT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KU1VCUk9VVElORSBGaW5hbGl6ZVdNTEVTKCkKISBNT0RVTEVTClVTRSBNT0RfV01MRVNfVmFycwpJTVBMSUNJVCBOT05FCgohLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQohIExPQ0FMIFZBUklBQkxFUwoKIT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KU0RFQUxMT0NBVEUoV01MRVNfVGF1dykKU0RFQUxMT0NBVEUoQkNTaWRlVG9XTUxFUykKU0RFQUxMT0NBVEUoV01MRVNUb0JDU2lkZSkKU0RFQUxMT0NBVEUoaF93bSkKU0RFQUxMT0NBVEUoV01MRVNGbGlwKQpTREVBTExPQ0FURShNYXN0ZXJUb1dNTEVTU2lkZSkKU0RFQUxMT0NBVEUoU2xhdmVUb1dNTEVTU2lkZSkKU0RFQUxMT0NBVEUoTWFzdGVyVG9PcHBTaWRlKQpTREVBTExPQ0FURShTbGF2ZVRvT3BwU2lkZSkKU0RFQUxMT0NBVEUoV01MRVNfRmlsdGVyTWF0KQoKRU5EIFNVQlJPVVRJTkUgRmluYWxpemVXTUxFUwoKCgohPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQpFTkQgTU9EVUxFIE1PRF9XTUxFUwoAAAAAAAAAANThAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAApaAAAAAAAACloAAAAAAAAAAAAAAAA8L8"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": ",WMLES_R"
					},
					"CAAAAC+RAAAAAAAAMJEAAAAAAAAAAAAAMJEAAAAAAAAxkQAAAAAAAAAAAAAxkQAAAAAAADKRAAAAAAAAAAAAADKRAAAAAAAAM5EAAAAAAAAAAAAAM5EAAAAAAAA0kQAAAAAAAAAAAAA0kQAAAAAAADWRAAAAAAAAAAAAADWRAAAAAAAANpEAAAAAAAAAAAAANpEAAAAAAAA3kQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAvkQAAAAAAAC+RAAAAAAAAAAAAAAAA8L8"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "EICHAR"
					},
					"BgAAADeRAAAAAAAAOJEAAAAAAAAAAAAAOJEAAAAAAAA5kQAAAAAAAAAAAAA5kQAAAAAAADqRAAAAAAAAAAAAADqRAAAAAAAAO5EAAAAAAAAAAAAAO5EAAAAAAAA8kQAAAAAAAAAAAAA8kQAAAAAAAD2RAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAN5EAAAAAAAA3kQAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert_completion",
					{
						"completion": "WMLES_REICHARDT",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "WMLES_REICHARDT"
					},
					"AgAAADCRAAAAAAAAMJEAAAAAAAANAAAAV01MRVNfUkVJQ0hBUjCRAAAAAAAAP5EAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPZEAAAAAAAA9kQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/home/eron/Workspace/CFD/Flexi/flexi/posti/avg2D/posti_avg2D.f90",
			"settings":
			{
				"buffer_size": 8179,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "equations/navierstokes/wmles/wmles_vars.f90",
			"settings":
			{
				"buffer_size": 13140,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					112,
					1,
					"insert",
					{
						"characters": " !"
					},
					"AgAAAPUYAAAAAAAA9hgAAAAAAAAAAAAA9hgAAAAAAAD3GAAAAAAAAAAAAAA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9RgAAAAAAAD1GAAAAAAAAP///////+9/"
				],
				[
					113,
					1,
					"insert",
					{
						"characters": " Array"
					},
					"BgAAAPcYAAAAAAAA+BgAAAAAAAAAAAAA+BgAAAAAAAD5GAAAAAAAAAAAAAD5GAAAAAAAAPoYAAAAAAAAAAAAAPoYAAAAAAAA+xgAAAAAAAAAAAAA+xgAAAAAAAD8GAAAAAAAAAAAAAD8GAAAAAAAAP0YAAAAAAAAAAAAAA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9xgAAAAAAAD3GAAAAAAAAAAAAAAAAPC/"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": " containing"
					},
					"CwAAAP0YAAAAAAAA/hgAAAAAAAAAAAAA/hgAAAAAAAD/GAAAAAAAAAAAAAD/GAAAAAAAAAAZAAAAAAAAAAAAAAAZAAAAAAAAARkAAAAAAAAAAAAAARkAAAAAAAACGQAAAAAAAAAAAAACGQAAAAAAAAMZAAAAAAAAAAAAAAMZAAAAAAAABBkAAAAAAAAAAAAABBkAAAAAAAAFGQAAAAAAAAAAAAAFGQAAAAAAAAYZAAAAAAAAAAAAAAYZAAAAAAAABxkAAAAAAAAAAAAABxkAAAAAAAAIGQAAAAAAAAAAAAA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/RgAAAAAAAD9GAAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAAgZAAAAAAAACRkAAAAAAAAAAAAACRkAAAAAAAAKGQAAAAAAAAAAAAAKGQAAAAAAAAsZAAAAAAAAAAAAAAsZAAAAAAAADBkAAAAAAAAAAAAA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACBkAAAAAAAAIGQAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAwZAAAAAAAADRkAAAAAAAAAAAAA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADBkAAAAAAAAMGQAAAAAAAAAAAAAAAPC/"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": "flow"
					},
					"BAAAAA0ZAAAAAAAADhkAAAAAAAAAAAAADhkAAAAAAAAPGQAAAAAAAAAAAAAPGQAAAAAAABAZAAAAAAAAAAAAABAZAAAAAAAAERkAAAAAAAAAAAAA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADRkAAAAAAAANGQAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": " properties"
					},
					"CwAAABEZAAAAAAAAEhkAAAAAAAAAAAAAEhkAAAAAAAATGQAAAAAAAAAAAAATGQAAAAAAABQZAAAAAAAAAAAAABQZAAAAAAAAFRkAAAAAAAAAAAAAFRkAAAAAAAAWGQAAAAAAAAAAAAAWGQAAAAAAABcZAAAAAAAAAAAAABcZAAAAAAAAGBkAAAAAAAAAAAAAGBkAAAAAAAAZGQAAAAAAAAAAAAAZGQAAAAAAABoZAAAAAAAAAAAAABoZAAAAAAAAGxkAAAAAAAAAAAAAGxkAAAAAAAAcGQAAAAAAAAAAAAA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAERkAAAAAAAARGQAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": " at"
					},
					"AwAAABwZAAAAAAAAHRkAAAAAAAAAAAAAHRkAAAAAAAAeGQAAAAAAAAAAAAAeGQAAAAAAAB8ZAAAAAAAAAAAAAA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHBkAAAAAAAAcGQAAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAB8ZAAAAAAAAIBkAAAAAAAAAAAAAIBkAAAAAAAAhGQAAAAAAAAAAAAAhGQAAAAAAACIZAAAAAAAAAAAAACIZAAAAAAAAIxkAAAAAAAAAAAAA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHxkAAAAAAAAfGQAAAAAAAAAAAAAAAPC/"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": " h_)w"
					},
					"BQAAACMZAAAAAAAAJBkAAAAAAAAAAAAAJBkAAAAAAAAlGQAAAAAAAAAAAAAlGQAAAAAAACYZAAAAAAAAAAAAACYZAAAAAAAAJxkAAAAAAAAAAAAAJxkAAAAAAAAoGQAAAAAAAAAAAAA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIxkAAAAAAAAjGQAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					2,
					"left_delete",
					null,
					"AgAAACcZAAAAAAAAJxkAAAAAAAABAAAAdyYZAAAAAAAAJhkAAAAAAAABAAAAKQ",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKBkAAAAAAAAoGQAAAAAAAAAAAAAAAPC/"
				],
				[
					123,
					1,
					"insert",
					{
						"characters": "wm"
					},
					"AgAAACYZAAAAAAAAJxkAAAAAAAAAAAAAJxkAAAAAAAAoGQAAAAAAAAAAAAA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJhkAAAAAAAAmGQAAAAAAAAAAAAAAAPC/"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": " location."
					},
					"CgAAACgZAAAAAAAAKRkAAAAAAAAAAAAAKRkAAAAAAAAqGQAAAAAAAAAAAAAqGQAAAAAAACsZAAAAAAAAAAAAACsZAAAAAAAALBkAAAAAAAAAAAAALBkAAAAAAAAtGQAAAAAAAAAAAAAtGQAAAAAAAC4ZAAAAAAAAAAAAAC4ZAAAAAAAALxkAAAAAAAAAAAAALxkAAAAAAAAwGQAAAAAAAAAAAAAwGQAAAAAAADEZAAAAAAAAAAAAADEZAAAAAAAAMhkAAAAAAAAAAAAA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKBkAAAAAAAAoGQAAAAAAAAAAAAAAAPC/"
				],
				[
					125,
					1,
					"insert",
					{
						"characters": " In"
					},
					"AwAAADIZAAAAAAAAMxkAAAAAAAAAAAAAMxkAAAAAAAA0GQAAAAAAAAAAAAA0GQAAAAAAADUZAAAAAAAAAAAAAA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMhkAAAAAAAAyGQAAAAAAAAAAAAAAAPC/"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": " other"
					},
					"BgAAADUZAAAAAAAANhkAAAAAAAAAAAAANhkAAAAAAAA3GQAAAAAAAAAAAAA3GQAAAAAAADgZAAAAAAAAAAAAADgZAAAAAAAAORkAAAAAAAAAAAAAORkAAAAAAAA6GQAAAAAAAAAAAAA6GQAAAAAAADsZAAAAAAAAAAAAAA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANRkAAAAAAAA1GQAAAAAAAAAAAAAAAPC/"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": " words"
					},
					"BgAAADsZAAAAAAAAPBkAAAAAAAAAAAAAPBkAAAAAAAA9GQAAAAAAAAAAAAA9GQAAAAAAAD4ZAAAAAAAAAAAAAD4ZAAAAAAAAPxkAAAAAAAAAAAAAPxkAAAAAAABAGQAAAAAAAAAAAABAGQAAAAAAAEEZAAAAAAAAAAAAAA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAOxkAAAAAAAA7GQAAAAAAAAAAAAAAAPC/"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": "necessary"
					},
					"CgAAAA0ZAAAAAAAADhkAAAAAAAAAAAAADhkAAAAAAAAOGQAAAAAAADQAAABmbG93IHByb3BlcnRpZXMgYXQgdGhlIGhfd20gbG9jYXRpb24uIEluIG90aGVyIHdvcmRzDhkAAAAAAAAPGQAAAAAAAAAAAAAPGQAAAAAAABAZAAAAAAAAAAAAABAZAAAAAAAAERkAAAAAAAAAAAAAERkAAAAAAAASGQAAAAAAAAAAAAASGQAAAAAAABMZAAAAAAAAAAAAABMZAAAAAAAAFBkAAAAAAAAAAAAAFBkAAAAAAAAVGQAAAAAAAAAAAAAVGQAAAAAAABYZAAAAAAAAAAAAAA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQRkAAAAAAAANGQAAAAAAAAAAAAAAAPC/"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": " information"
					},
					"DAAAABYZAAAAAAAAFxkAAAAAAAAAAAAAFxkAAAAAAAAYGQAAAAAAAAAAAAAYGQAAAAAAABkZAAAAAAAAAAAAABkZAAAAAAAAGhkAAAAAAAAAAAAAGhkAAAAAAAAbGQAAAAAAAAAAAAAbGQAAAAAAABwZAAAAAAAAAAAAABwZAAAAAAAAHRkAAAAAAAAAAAAAHRkAAAAAAAAeGQAAAAAAAAAAAAAeGQAAAAAAAB8ZAAAAAAAAAAAAAB8ZAAAAAAAAIBkAAAAAAAAAAAAAIBkAAAAAAAAhGQAAAAAAAAAAAAAhGQAAAAAAACIZAAAAAAAAAAAAAA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFhkAAAAAAAAWGQAAAAAAAAAAAAAAAPC/"
				],
				[
					131,
					1,
					"insert",
					{
						"characters": " from"
					},
					"BQAAACIZAAAAAAAAIxkAAAAAAAAAAAAAIxkAAAAAAAAkGQAAAAAAAAAAAAAkGQAAAAAAACUZAAAAAAAAAAAAACUZAAAAAAAAJhkAAAAAAAAAAAAAJhkAAAAAAAAnGQAAAAAAAAAAAAA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIhkAAAAAAAAiGQAAAAAAAAAAAAAAAPC/"
				],
				[
					132,
					1,
					"insert",
					{
						"characters": " h_)w"
					},
					"BQAAACcZAAAAAAAAKBkAAAAAAAAAAAAAKBkAAAAAAAApGQAAAAAAAAAAAAApGQAAAAAAACoZAAAAAAAAAAAAACoZAAAAAAAAKxkAAAAAAAAAAAAAKxkAAAAAAAAsGQAAAAAAAAAAAAA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJxkAAAAAAAAnGQAAAAAAAAAAAAAAAPC/"
				],
				[
					133,
					2,
					"left_delete",
					null,
					"AgAAACsZAAAAAAAAKxkAAAAAAAABAAAAdyoZAAAAAAAAKhkAAAAAAAABAAAAKQ",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALBkAAAAAAAAsGQAAAAAAAAAAAAAAAPC/"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": "wm"
					},
					"AgAAACoZAAAAAAAAKxkAAAAAAAAAAAAAKxkAAAAAAAAsGQAAAAAAAAAAAAA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKhkAAAAAAAAqGQAAAAAAAAAAAAAAAPC/"
				],
				[
					135,
					1,
					"insert",
					{
						"characters": " to"
					},
					"AwAAACwZAAAAAAAALRkAAAAAAAAAAAAALRkAAAAAAAAuGQAAAAAAAAAAAAAuGQAAAAAAAC8ZAAAAAAAAAAAAAA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALBkAAAAAAAAsGQAAAAAAAAAAAAAAAPC/"
				],
				[
					136,
					2,
					"left_delete",
					null,
					"AgAAAC4ZAAAAAAAALhkAAAAAAAABAAAAby0ZAAAAAAAALRkAAAAAAAABAAAAdA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALxkAAAAAAAAvGQAAAAAAAAAAAAAAAPC/"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": "in"
					},
					"AgAAAC0ZAAAAAAAALhkAAAAAAAAAAAAALhkAAAAAAAAvGQAAAAAAAAAAAAA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALRkAAAAAAAAtGQAAAAAAAAAAAAAAAPC/"
				],
				[
					138,
					1,
					"insert",
					{
						"characters": " order"
					},
					"BgAAAC8ZAAAAAAAAMBkAAAAAAAAAAAAAMBkAAAAAAAAxGQAAAAAAAAAAAAAxGQAAAAAAADIZAAAAAAAAAAAAADIZAAAAAAAAMxkAAAAAAAAAAAAAMxkAAAAAAAA0GQAAAAAAAAAAAAA0GQAAAAAAADUZAAAAAAAAAAAAAA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALxkAAAAAAAAvGQAAAAAAAAAAAAAAAPC/"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": " to"
					},
					"AwAAADUZAAAAAAAANhkAAAAAAAAAAAAANhkAAAAAAAA3GQAAAAAAAAAAAAA3GQAAAAAAADgZAAAAAAAAAAAAAA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANRkAAAAAAAA1GQAAAAAAAAAAAAAAAPC/"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": " calcu"
					},
					"BgAAADgZAAAAAAAAORkAAAAAAAAAAAAAORkAAAAAAAA6GQAAAAAAAAAAAAA6GQAAAAAAADsZAAAAAAAAAAAAADsZAAAAAAAAPBkAAAAAAAAAAAAAPBkAAAAAAAA9GQAAAAAAAAAAAAA9GQAAAAAAAD4ZAAAAAAAAAAAAAA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAOBkAAAAAAAA4GQAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					5,
					"left_delete",
					null,
					"BQAAAD0ZAAAAAAAAPRkAAAAAAAABAAAAdTwZAAAAAAAAPBkAAAAAAAABAAAAYzsZAAAAAAAAOxkAAAAAAAABAAAAbDoZAAAAAAAAOhkAAAAAAAABAAAAYTkZAAAAAAAAORkAAAAAAAABAAAAYw",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPhkAAAAAAAA+GQAAAAAAAAAAAAAAAPC/"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": "feed"
					},
					"BAAAADkZAAAAAAAAOhkAAAAAAAAAAAAAOhkAAAAAAAA7GQAAAAAAAAAAAAA7GQAAAAAAADwZAAAAAAAAAAAAADwZAAAAAAAAPRkAAAAAAAAAAAAA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAORkAAAAAAAA5GQAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAD0ZAAAAAAAAPhkAAAAAAAAAAAAAPhkAAAAAAAA/GQAAAAAAAAAAAAA/GQAAAAAAAEAZAAAAAAAAAAAAAEAZAAAAAAAAQRkAAAAAAAAAAAAA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPRkAAAAAAAA9GQAAAAAAAAAAAAAAAPC/"
				],
				[
					144,
					1,
					"insert",
					{
						"characters": " wall"
					},
					"BQAAAEEZAAAAAAAAQhkAAAAAAAAAAAAAQhkAAAAAAABDGQAAAAAAAAAAAABDGQAAAAAAAEQZAAAAAAAAAAAAAEQZAAAAAAAARRkAAAAAAAAAAAAARRkAAAAAAABGGQAAAAAAAAAAAAA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQRkAAAAAAABBGQAAAAAAAAAAAAAAAPC/"
				],
				[
					145,
					1,
					"insert",
					{
						"characters": " model"
					},
					"BgAAAEYZAAAAAAAARxkAAAAAAAAAAAAARxkAAAAAAABIGQAAAAAAAAAAAABIGQAAAAAAAEkZAAAAAAAAAAAAAEkZAAAAAAAAShkAAAAAAAAAAAAAShkAAAAAAABLGQAAAAAAAAAAAABLGQAAAAAAAEwZAAAAAAAAAAAAAA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARhkAAAAAAABGGQAAAAAAAAAAAAAAAPC/"
				],
				[
					150,
					1,
					"insert",
					{
						"characters": "REAL"
					},
					"BQAAAOgXAAAAAAAA6RcAAAAAAAAAAAAA6RcAAAAAAADpFwAAAAAAAAcAAABJTlRFR0VS6RcAAAAAAADqFwAAAAAAAAAAAADqFwAAAAAAAOsXAAAAAAAAAAAAAOsXAAAAAAAA7BcAAAAAAAAAAAAA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6BcAAAAAAADvFwAAAAAAAAAAAAAAAPC/"
				],
				[
					176,
					1,
					"cut",
					null,
					"AQAAAFoyAAAAAAAAWjIAAAAAAACEAAAASU5URUdFUiwgQUxMT0NBVEFCTEUgICAgICAgIDo6IFdNTEVTX1JlY3ZSZXF1ZXN0cyg6KSwgV01MRVNfU2VuZFJlcXVlc3RzKDopICEgUmVxdWVzdHMgZm9yIHRoZSBub24tYmxvY2tpbmcgc2VuZC9yZWNlaXZlIG9wZXJhdGlvbnMK",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWjIAAAAAAADeMgAAAAAAAAAAAAAAAPC/"
				],
				[
					181,
					1,
					"paste",
					null,
					"AQAAAFIaAAAAAAAA1hoAAAAAAAAAAAAA",
					"JQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUhoAAAAAAABSGgAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"left_delete",
					null,
					"AQAAAKAKAAAAAAAAoAoAAAAAAABkAAAAUkVBTCAgICAgICAgICAgICAgICAgICAgICAgIDo6IGFic19oX3dtICEganVzdCBmb3IgY29tcGlsYXRpb247IHRoaXMgd2lsbCBzb29uIHZhbmlzaCBmcm9tIHRoZSBjb2RlCg",
					"JAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKAKAAAAAAAABAsAAAAAAAAAAAAAAADwvw"
				],
				[
					4,
					1,
					"revert",
					null,
					"",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKYFAAAAAAAAtQUAAAAAAAAAAAAAAADwvw"
				],
				[
					5,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAyEAAAIT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQohIFRoaXMgZmlsZSBpcyBOT1QgcGFydCBvZiB0aGUgb3JpZ2luYWwgRkxFWEkgcHJvamVjdC4gSW5zdGVhZCwgaXQgaXMgYW4gYWRkaXRpb24gbWFkZSBieSB0aGUgTEVTIGdyb3VwIGF0CiEgSW5zdGl0dXRvIFRlY25vbMOzZ2ljbyBkZSBBZXJvbsOhdXRpY2EsIERDVEEvSUFFLCBCcmF6aWwsIGluIG9yZGVyIHRvIGltcGxlbWVudCB3YWxsIG1vZGVsaW5nIGZvciBMRVMgY29tcHV0YXRpb25zLgohCiEgRm9yIG1vcmUgaW5mb3JtYXRpb24gb24gdGhlIG9yaWdpbmFsIHByb2plY3QsIHNlZSBodHRwczovL3d3dy5mbGV4aS1wcm9qZWN0Lm9yZyBhbmQgaHR0cHM6Ly9ucmcuaWFnLnVuaS1zdHV0dGdhcnQuZGUvCiEKISBPUklHSU5BTCBESVNDTEFJTUVSOgohIEZMRVhJIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnkgaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZQohIGFzIHB1Ymxpc2hlZCBieSB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvciAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLgohCiEgRkxFWEkgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCwgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkKISBvZiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuIFNlZSB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgdjMuMCBmb3IgbW9yZSBkZXRhaWxzLgohCiEgWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYWxvbmcgd2l0aCBGTEVYSS4gSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LgohPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CgpNT0RVTEUgTU9EX1dNTEVTX1ZhcnMKISBNT0RVTEVTCklNUExJQ0lUIE5PTkUKUFVCTElDClNBVkUKCgpJTlRFR0VSLCBQQVJBTUVURVIgOjogV01MRVNfU0NIVU1BTk4gPSAxCklOVEVHRVIsIFBBUkFNRVRFUiA6OiBXTUxFU19MT0dMQVcgPSAyCklOVEVHRVIsIFBBUkFNRVRFUiA6OiBXTUxFU19XRVJORVJXQU5HTEUgPSAzCklOVEVHRVIsIFBBUkFNRVRFUiA6OiBXTUxFU19SRUlDSEFSRFQgPSA0CklOVEVHRVIsIFBBUkFNRVRFUiA6OiBXTUxFU19TUEFMRElORyA9IDUKSU5URUdFUiwgUEFSQU1FVEVSIDo6IFdNTEVTX0VRVEJMRSA9IDYKSU5URUdFUiwgUEFSQU1FVEVSIDo6IFdNTEVTX0NPVUVUVEUgPSA3CgpJTlRFR0VSLCBQQVJBTUVURVIgOjogV01MRVNfUFJPSkZJTFRFUiA9IDEKSU5URUdFUiwgUEFSQU1FVEVSIDo6IFdNTEVTX01PREFMVFJBTlNGSUxURVIgPSAyCgohLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQohIEdMT0JBTCBWQVJJQUJMRVMKIS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KSU5URUdFUiAgICAgICAgICAgICAgICAgICAgIDo6IFdhbGxNb2RlbCAgICAgICAgISBJbnRlZ2VyIGNvcnJlc3BvbmRpbmcgdG8gdGhlIFdhbGxNb2RlbApSRUFMICAgICAgICAgICAgICAgICAgICAgICAgOjogZGVsdGEgICAgICAgICAgICAhIEFwcHJveGltYXRlLCBvciBjaGFyYWN0ZXJpc3RpYyBib3VuZGFyeSBsYXllciB0aGlja25lc3MKUkVBTCAgICAgICAgICAgICAgICAgICAgICAgIDo6IHZLYXJtYW4gICAgICAgICAgISB2b24gS2FybWFuIGNvbnN0YW50ClJFQUwgICAgICAgICAgICAgICAgICAgICAgICA6OiBCICAgICAgICAgICAgICAgICEgSW50ZXJjZXB0IGNvZWZmaWNpZW50IGZvciBsb2ctbGF3LWJhc2VkIG1vZGVscwpSRUFMLEFMTE9DQVRBQkxFICAgICAgICAgICAgOjogaF93bSg6LDosOikKSU5URUdFUixBTExPQ0FUQUJMRSAgICAgICAgIDo6IFdNTEVTRmxpcCg6KQpSRUFMLEFMTE9DQVRBQkxFICAgICAgICAgICAgOjogV01MRVNfVGF1dyg6LDosOiw6KSAhIFdhbGwgc3RyZXNzIHRlbnNvci4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgISBGaXJzdCBpbmRleDogMSBvciAyLCB3aGVyZSAxIGlzIHRhdV94eSBhbmQgMiBpcyB0YXVfeXoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgISBTZWNvbmQgYW5kIHRoaXJkIGluZGljZXM6IGluZGljZXMgImksaiIgb2YgdGhlIEJDIGZhY2UKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgISBGb3VydGggaW5kZXg6IFdNTEVTIFNpZGUKCklOVEVHRVIgICAgICAgICAgICAgICAgICAgICA6OiBuV01MRVNTaWRlcywgbk1hc3RlcldNTEVTU2lkZSwgblNsYXZlV01MRVNTaWRlICEgTnVtYmVyIG9mIFdNTEVTIEJDIFNpZGVzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCklOVEVHRVIsQUxMT0NBVEFCTEUgICAgICAgICA6OiBCQ1NpZGVUb1dNTEVTKDopICEgTWFwcGluZyBiZXR3ZWVuIFdNTEVTIFNpZGUgYW5kIE1lc2ggQkNTaWRlLgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgISBVc2FnZTogQkNTaWRlVG9XTUxFUyhTaWRlSUQpLCBTaWRlSUQgXGluIFsxOm5CQ1NpZGVzXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgISBPVVRQVVQ6IFsxOm5XTUxFU1NpZGVzXQpJTlRFR0VSLEFMTE9DQVRBQkxFICAgICAgICAgOjogV01MRVNUb0JDU2lkZSg6KSAhIEludmVyc2Ugb2YgQkNTaWRlVG9XTUxFUyBtYXBwaW5nLCB0aGF0IGlzLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAhIGdldCBTaWRlSUQgb2YgQkMgZnJvbSBXTUxFU1NpZGVJRApJTlRFR0VSLEFMTE9DQVRBQkxFICAgICAgICAgOjogTWFzdGVyVG9XTUxFU1NpZGUoOiksIFNsYXZlVG9XTUxFU1NpZGUoOikgISBNYXBwaW5nIGJldHdlZW4gbWFzdGVyL3NsYXZlIG9wcG9zaXRlIHNpZGVzIGFuZCB0aGUgYm91bmRhcnkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICEgc2lkZXMgaW4gdGVybXMgb2YgbldNTEVTU2lkZSBudW1iZXIuCklOVEVHRVIsQUxMT0NBVEFCTEUgICAgICAgICA6OiBNYXN0ZXJUb09wcFNpZGUoOiksIFNsYXZlVG9PcHBTaWRlKDopICEgTWFwcGluZyBiZXR3ZWVuIG1hc3Rlci9zbGF2ZSBzaWRlcywgaW4gdGVybXMgb2Ygbk1hc3Rlci9TbGF2ZVdNTEVTU2lkZXMsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICEgYW5kIHRoZSBPcHBTaWRlIGluIHRlcm1zIG9mICJTaWRlSUQiCkxPR0lDQUwgICAgICAgICAgICAgICAgICAgICA6OiBXTUxFU0luaXREb25lID0gLkZBTFNFLgpMT0dJQ0FMICAgICAgICAgICAgICAgICAgICAgOjogVXNlU2VtaUxvY2FsCklOVEVHRVIgICAgICAgICAgICAgICAgICAgICA6OiBXTUxFU19GaWx0ZXJUeXBlCklOVEVHRVIgICAgICAgICAgICAgICAgICAgICA6OiBXTUxFU19GaWx0ZXIKUkVBTCwgQUxMT0NBVEFCTEUgICAgICAgICAgIDo6IFdNTEVTX0ZpbHRlck1hdCg6LDopCgpFTkQgTU9EVUxFIE1PRF9XTUxFU19WYXJzAAAAAAAAAABUMwAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKYFAAAAAAAAtQUAAAAAAAAAAAAAAADwvw"
				],
				[
					6,
					1,
					"revert",
					null,
					"",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKYFAAAAAAAAtQUAAAAAAAAAAAAAAADwvw"
				],
				[
					1,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					1,
					1,
					"revert",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAAAyEAAAIT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQohIFRoaXMgZmlsZSBpcyBOT1QgcGFydCBvZiB0aGUgb3JpZ2luYWwgRkxFWEkgcHJvamVjdC4gSW5zdGVhZCwgaXQgaXMgYW4gYWRkaXRpb24gbWFkZSBieSB0aGUgTEVTIGdyb3VwIGF0CiEgSW5zdGl0dXRvIFRlY25vbMOzZ2ljbyBkZSBBZXJvbsOhdXRpY2EsIERDVEEvSUFFLCBCcmF6aWwsIGluIG9yZGVyIHRvIGltcGxlbWVudCB3YWxsIG1vZGVsaW5nIGZvciBMRVMgY29tcHV0YXRpb25zLgohCiEgRm9yIG1vcmUgaW5mb3JtYXRpb24gb24gdGhlIG9yaWdpbmFsIHByb2plY3QsIHNlZSBodHRwczovL3d3dy5mbGV4aS1wcm9qZWN0Lm9yZyBhbmQgaHR0cHM6Ly9ucmcuaWFnLnVuaS1zdHV0dGdhcnQuZGUvCiEKISBPUklHSU5BTCBESVNDTEFJTUVSOgohIEZMRVhJIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnkgaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZQohIGFzIHB1Ymxpc2hlZCBieSB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvciAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLgohCiEgRkxFWEkgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCwgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkKISBvZiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuIFNlZSB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgdjMuMCBmb3IgbW9yZSBkZXRhaWxzLgohCiEgWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYWxvbmcgd2l0aCBGTEVYSS4gSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LgohPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CgpNT0RVTEUgTU9EX1dNTEVTX1ZhcnMKISBNT0RVTEVTCklNUExJQ0lUIE5PTkUKUFVCTElDClNBVkUKCgpJTlRFR0VSLCBQQVJBTUVURVIgOjogV01MRVNfU0NIVU1BTk4gPSAxCklOVEVHRVIsIFBBUkFNRVRFUiA6OiBXTUxFU19MT0dMQVcgPSAyCklOVEVHRVIsIFBBUkFNRVRFUiA6OiBXTUxFU19XRVJORVJXQU5HTEUgPSAzCklOVEVHRVIsIFBBUkFNRVRFUiA6OiBXTUxFU19SRUlDSEFSRFQgPSA0CklOVEVHRVIsIFBBUkFNRVRFUiA6OiBXTUxFU19TUEFMRElORyA9IDUKSU5URUdFUiwgUEFSQU1FVEVSIDo6IFdNTEVTX0VRVEJMRSA9IDYKSU5URUdFUiwgUEFSQU1FVEVSIDo6IFdNTEVTX0NPVUVUVEUgPSA3CgpJTlRFR0VSLCBQQVJBTUVURVIgOjogV01MRVNfUFJPSkZJTFRFUiA9IDEKSU5URUdFUiwgUEFSQU1FVEVSIDo6IFdNTEVTX01PREFMVFJBTlNGSUxURVIgPSAyCgohLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQohIEdMT0JBTCBWQVJJQUJMRVMKIS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KSU5URUdFUiAgICAgICAgICAgICAgICAgICAgIDo6IFdhbGxNb2RlbCAgICAgICAgISBJbnRlZ2VyIGNvcnJlc3BvbmRpbmcgdG8gdGhlIFdhbGxNb2RlbApSRUFMICAgICAgICAgICAgICAgICAgICAgICAgOjogZGVsdGEgICAgICAgICAgICAhIEFwcHJveGltYXRlLCBvciBjaGFyYWN0ZXJpc3RpYyBib3VuZGFyeSBsYXllciB0aGlja25lc3MKUkVBTCAgICAgICAgICAgICAgICAgICAgICAgIDo6IHZLYXJtYW4gICAgICAgICAgISB2b24gS2FybWFuIGNvbnN0YW50ClJFQUwgICAgICAgICAgICAgICAgICAgICAgICA6OiBCICAgICAgICAgICAgICAgICEgSW50ZXJjZXB0IGNvZWZmaWNpZW50IGZvciBsb2ctbGF3LWJhc2VkIG1vZGVscwpSRUFMLEFMTE9DQVRBQkxFICAgICAgICAgICAgOjogaF93bSg6LDosOikKSU5URUdFUixBTExPQ0FUQUJMRSAgICAgICAgIDo6IFdNTEVTRmxpcCg6KQpSRUFMLEFMTE9DQVRBQkxFICAgICAgICAgICAgOjogV01MRVNfVGF1dyg6LDosOiw6KSAhIFdhbGwgc3RyZXNzIHRlbnNvci4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgISBGaXJzdCBpbmRleDogMSBvciAyLCB3aGVyZSAxIGlzIHRhdV94eSBhbmQgMiBpcyB0YXVfeXoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgISBTZWNvbmQgYW5kIHRoaXJkIGluZGljZXM6IGluZGljZXMgImksaiIgb2YgdGhlIEJDIGZhY2UKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgISBGb3VydGggaW5kZXg6IFdNTEVTIFNpZGUKCklOVEVHRVIgICAgICAgICAgICAgICAgICAgICA6OiBuV01MRVNTaWRlcywgbk1hc3RlcldNTEVTU2lkZSwgblNsYXZlV01MRVNTaWRlICEgTnVtYmVyIG9mIFdNTEVTIEJDIFNpZGVzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCklOVEVHRVIsQUxMT0NBVEFCTEUgICAgICAgICA6OiBCQ1NpZGVUb1dNTEVTKDopICEgTWFwcGluZyBiZXR3ZWVuIFdNTEVTIFNpZGUgYW5kIE1lc2ggQkNTaWRlLgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgISBVc2FnZTogQkNTaWRlVG9XTUxFUyhTaWRlSUQpLCBTaWRlSUQgXGluIFsxOm5CQ1NpZGVzXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgISBPVVRQVVQ6IFsxOm5XTUxFU1NpZGVzXQpJTlRFR0VSLEFMTE9DQVRBQkxFICAgICAgICAgOjogV01MRVNUb0JDU2lkZSg6KSAhIEludmVyc2Ugb2YgQkNTaWRlVG9XTUxFUyBtYXBwaW5nLCB0aGF0IGlzLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAhIGdldCBTaWRlSUQgb2YgQkMgZnJvbSBXTUxFU1NpZGVJRApJTlRFR0VSLEFMTE9DQVRBQkxFICAgICAgICAgOjogTWFzdGVyVG9XTUxFU1NpZGUoOiksIFNsYXZlVG9XTUxFU1NpZGUoOikgISBNYXBwaW5nIGJldHdlZW4gbWFzdGVyL3NsYXZlIG9wcG9zaXRlIHNpZGVzIGFuZCB0aGUgYm91bmRhcnkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICEgc2lkZXMgaW4gdGVybXMgb2YgbldNTEVTU2lkZSBudW1iZXIuCklOVEVHRVIsQUxMT0NBVEFCTEUgICAgICAgICA6OiBNYXN0ZXJUb09wcFNpZGUoOiksIFNsYXZlVG9PcHBTaWRlKDopICEgTWFwcGluZyBiZXR3ZWVuIG1hc3Rlci9zbGF2ZSBzaWRlcywgaW4gdGVybXMgb2Ygbk1hc3Rlci9TbGF2ZVdNTEVTU2lkZXMsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICEgYW5kIHRoZSBPcHBTaWRlIGluIHRlcm1zIG9mICJTaWRlSUQiCkxPR0lDQUwgICAgICAgICAgICAgICAgICAgICA6OiBXTUxFU0luaXREb25lID0gLkZBTFNFLgpMT0dJQ0FMICAgICAgICAgICAgICAgICAgICAgOjogVXNlU2VtaUxvY2FsCklOVEVHRVIgICAgICAgICAgICAgICAgICAgICA6OiBXTUxFU19GaWx0ZXJUeXBlCklOVEVHRVIgICAgICAgICAgICAgICAgICAgICA6OiBXTUxFU19GaWx0ZXIKUkVBTCwgQUxMT0NBVEFCTEUgICAgICAgICAgIDo6IFdNTEVTX0ZpbHRlck1hdCg6LDopCgpFTkQgTU9EVUxFIE1PRF9XTUxFU19WYXJzAAAAAAAAAABUMwAAAAAAAAAAAAAAAAAAAAAAAFQzAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "/home/eron/Workspace/CFD/Flexi/flexi/posti/channel_fft/channel_fft.f90",
			"settings":
			{
				"buffer_size": 11226,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "output/output.f90",
			"settings":
			{
				"buffer_size": 28562,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/eron/Workspace/CFD/Flexi/flexi/posti/channel_fft/fft.f90",
			"settings":
			{
				"buffer_size": 35271,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/eron/Workspace/CFD/Flexi/flexi/posti/channel_fft/fft_vars.f90",
			"settings":
			{
				"buffer_size": 3472,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					27,
					1,
					"insert",
					{
						"characters": "\nLOGICAL"
					},
					"CAAAAA4IAAAAAAAADwgAAAAAAAAAAAAADwgAAAAAAAAQCAAAAAAAAAAAAAAQCAAAAAAAABEIAAAAAAAAAAAAABEIAAAAAAAAEggAAAAAAAAAAAAAEggAAAAAAAATCAAAAAAAAAAAAAATCAAAAAAAABQIAAAAAAAAAAAAABQIAAAAAAAAFQgAAAAAAAAAAAAAFQgAAAAAAAAWCAAAAAAAAAAAAAA",
					"IAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAOCAAAAAAAAA4IAAAAAAAA////////738"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": " \t\t\t\t::"
					},
					"BwAAABYIAAAAAAAAFwgAAAAAAAAAAAAAFwgAAAAAAAAbCAAAAAAAAAAAAAAbCAAAAAAAAB8IAAAAAAAAAAAAAB8IAAAAAAAAIwgAAAAAAAAAAAAAIwgAAAAAAAAnCAAAAAAAAAAAAAAnCAAAAAAAACgIAAAAAAAAAAAAACgIAAAAAAAAKQgAAAAAAAAAAAAA",
					"IAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAWCAAAAAAAABYIAAAAAAAAAAAAAAAA8L8"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": " postiMode"
					},
					"CgAAACkIAAAAAAAAKggAAAAAAAAAAAAAKggAAAAAAAArCAAAAAAAAAAAAAArCAAAAAAAACwIAAAAAAAAAAAAACwIAAAAAAAALQgAAAAAAAAAAAAALQgAAAAAAAAuCAAAAAAAAAAAAAAuCAAAAAAAAC8IAAAAAAAAAAAAAC8IAAAAAAAAMAgAAAAAAAAAAAAAMAgAAAAAAAAxCAAAAAAAAAAAAAAxCAAAAAAAADIIAAAAAAAAAAAAADIIAAAAAAAAMwgAAAAAAAAAAAAA",
					"IAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAApCAAAAAAAACkIAAAAAAAAAAAAAAAA8L8"
				],
				[
					35,
					1,
					"left_delete",
					null,
					"AQAAAA8IAAAAAAAADwgAAAAAAAAlAAAATE9HSUNBTCAgICAgICAgICAgICAgICAgOjogcG9zdGlNb2RlCg",
					"IAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAPCAAAAAAAADQIAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "/home/eron/Workspace/CFD/Flexi/flexi/posti/visu/posti_visu.f90",
			"settings":
			{
				"buffer_size": 8962,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/eron/Workspace/CFD/Flexi/flexi/posti/visu/visu.f90",
			"settings":
			{
				"buffer_size": 31189,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/eron/Workspace/CFD/Flexi/flexi/posti/visu/readstate.f90",
			"settings":
			{
				"buffer_size": 13976,
				"line_ending": "Unix"
			}
		},
		{
			"file": "restart/restart.f90",
			"settings":
			{
				"buffer_size": 20955,
				"line_ending": "Unix"
			}
		},
		{
			"file": "io_hdf5/hdf5_output.f90",
			"settings":
			{
				"buffer_size": 52142,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/eron/Workspace/CFD/Flexi/flexi/posti/visu/calc.f90",
			"settings":
			{
				"buffer_size": 31039,
				"line_ending": "Unix"
			}
		},
		{
			"file": "equations/navierstokes/idealgas/eos_posti.f90",
			"settings":
			{
				"buffer_size": 38690,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/eron/Workspace/CFD/Flexi/flexi/posti/visu/visu_vars.f90",
			"settings":
			{
				"buffer_size": 15999,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/eron/Workspace/CFD/Flexi/flexi/posti/recordpoints/prepare/parametriccoords.f90",
			"settings":
			{
				"buffer_size": 20777,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "dg/dg.f90",
			"settings":
			{
				"buffer_size": 32134,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"revert",
					null,
					"",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADZrAAAAAAAANmsAAAAAAAAAAAAAAADwvw"
				],
				[
					1,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					1,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "dg/dg_vars.f90",
			"settings":
			{
				"buffer_size": 7199,
				"line_ending": "Unix"
			}
		},
		{
			"file": "filter/filter.f90",
			"settings":
			{
				"buffer_size": 22285,
				"line_ending": "Unix"
			}
		},
		{
			"file": "filter/filter_vars.f90",
			"settings":
			{
				"buffer_size": 3301,
				"line_ending": "Unix"
			}
		},
		{
			"file": "dg/fillflux.f90",
			"settings":
			{
				"buffer_size": 9345,
				"line_ending": "Unix"
			}
		},
		{
			"file": "equations/navierstokes/idealgas/getboundaryflux.f90",
			"redo_stack":
			[
				[
					245,
					1,
					"",
					null,
					"AgAAAMNWAAAAAAAAKlcAAAAAAAAAAAAApFcAAAAAAACkVwAAAAAAAGcAAAAgICAgICAhIFRoZSBOZXd0b24gaXRlcmF0aW9uIGZvciB0aGUgVF9iIGluIHRoZSBwYXBlciBjYW4gYmUgYXZvaWRlZCBieSByZXdyaXRpbmcgRVEgNSBmcm9tIHRoZSAgcGFwZXIK",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD1XAAAAAAAApFcAAAAAAAAAAAAAAADwvw"
				]
			],
			"settings":
			{
				"buffer_size": 59147,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "equations/navierstokes/riemann.f90",
			"settings":
			{
				"buffer_size": 47152,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "sponge/sponge.f90",
			"settings":
			{
				"buffer_size": 27433,
				"line_ending": "Unix"
			}
		},
		{
			"file": "equations/navierstokes/flux.f90",
			"settings":
			{
				"buffer_size": 19094,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "equations/navierstokes/idealgas/eos.h",
			"settings":
			{
				"buffer_size": 4180,
				"line_ending": "Unix"
			}
		},
		{
			"file": "equations/navierstokes/equation.f90",
			"settings":
			{
				"buffer_size": 14502,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "equations/navierstokes/idealgas/eos.f90",
			"settings":
			{
				"buffer_size": 17423,
				"line_ending": "Unix"
			}
		},
		{
			"file": "equations/navierstokes/idealgas/eos_vars.f90",
			"settings":
			{
				"buffer_size": 2018,
				"line_ending": "Unix"
			}
		},
		{
			"file": "timedisc/timedisc.f90",
			"settings":
			{
				"buffer_size": 25775,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "timedisc/timedisc_vars.f90",
			"settings":
			{
				"buffer_size": 30767,
				"line_ending": "Unix"
			}
		},
		{
			"file": "equations/navierstokes/calctimestep.f90",
			"settings":
			{
				"buffer_size": 9759,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "equations/navierstokes/timeavg.f90",
			"settings":
			{
				"buffer_size": 21356,
				"line_ending": "Unix"
			}
		},
		{
			"file": "analyze/analyze.f90",
			"settings":
			{
				"buffer_size": 21056,
				"line_ending": "Unix"
			}
		},
		{
			"file": "equations/navierstokes/analyze_equation.f90",
			"settings":
			{
				"buffer_size": 26112,
				"line_ending": "Unix"
			}
		},
		{
			"file": "analyze/analyze_vars.f90",
			"settings":
			{
				"buffer_size": 4756,
				"line_ending": "Unix"
			}
		},
		{
			"file": "equations/navierstokes/idealgas/exactfunc.f90",
			"settings":
			{
				"buffer_size": 34903,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "readintools/readintools.f90",
			"settings":
			{
				"buffer_size": 68778,
				"line_ending": "Unix"
			}
		},
		{
			"file": "readintools/options.f90",
			"settings":
			{
				"buffer_size": 32484,
				"line_ending": "Unix"
			}
		},
		{
			"file": "dg/br2/br2.f90",
			"settings":
			{
				"buffer_size": 17961,
				"line_ending": "Unix"
			}
		},
		{
			"file": "dg/br2/br2_vars.f90",
			"settings":
			{
				"buffer_size": 4051,
				"line_ending": "Unix"
			}
		},
		{
			"file": "dg/br2/br2_surfint.f90",
			"settings":
			{
				"buffer_size": 7866,
				"line_ending": "Unix"
			}
		},
		{
			"file": "dg/br2/br2_volint.f90",
			"settings":
			{
				"buffer_size": 13766,
				"line_ending": "Unix"
			}
		},
		{
			"file": "dg/br2/br2_fillflux.f90",
			"settings":
			{
				"buffer_size": 8516,
				"line_ending": "Unix"
			}
		},
		{
			"file": "mpi/mpi.f90",
			"settings":
			{
				"buffer_size": 18847,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "mpi/mpi_vars.f90",
			"settings":
			{
				"buffer_size": 5223,
				"line_ending": "Unix"
			}
		},
		{
			"file": "mesh/mesh.f90",
			"settings":
			{
				"buffer_size": 19669,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "mesh/mesh_vars.f90",
			"settings":
			{
				"buffer_size": 20852,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "mesh/prepare_mesh.f90",
			"settings":
			{
				"buffer_size": 45425,
				"line_ending": "Unix"
			}
		},
		{
			"file": "mesh/mesh_readin.f90",
			"settings":
			{
				"buffer_size": 36265,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "mesh/metrics.f90",
			"settings":
			{
				"buffer_size": 37886,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "mesh/mappings.f90",
			"settings":
			{
				"buffer_size": 20833,
				"line_ending": "Unix"
			}
		},
		{
			"file": "io_hdf5/hdf5_input.f90",
			"settings":
			{
				"buffer_size": 30680,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "io_hdf5/io_hdf5.f90",
			"settings":
			{
				"buffer_size": 20995,
				"line_ending": "Unix"
			}
		},
		{
			"file": "interpolation/changeBasis.f90",
			"settings":
			{
				"buffer_size": 4959,
				"line_ending": "Unix"
			}
		},
		{
			"file": "interpolation/changeBasis.t90",
			"settings":
			{
				"buffer_size": 20579,
				"line_ending": "Unix"
			}
		},
		{
			"file": "interpolation/interpolation.f90",
			"settings":
			{
				"buffer_size": 19266,
				"line_ending": "Unix"
			}
		},
		{
			"file": "interpolation/basis.f90",
			"redo_stack":
			[
				[
					140,
					1,
					"",
					null,
					"AgAAAGFzAAAAAAAAlnMAAAAAAAAAAAAAqXMAAAAAAACpcwAAAAAAADUAAAAhIGlmIHggaXMgZXF1YWwgdG8gYSBHYXVzcyBwb2ludCwgTD0oMCwuLi4uLDEsLi4uLjApCg",
					"NQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0cwAAAAAAAKlzAAAAAAAAAAAAAAAA8L8"
				]
			],
			"settings":
			{
				"buffer_size": 29816,
				"line_ending": "Unix"
			}
		},
		{
			"file": "testcase/channel/testcase.f90",
			"settings":
			{
				"buffer_size": 19145,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "testcase/channel/testcase_vars.f90",
			"settings":
			{
				"buffer_size": 3194,
				"line_ending": "Unix"
			}
		},
		{
			"file": "testcase/default/testcase.f90",
			"settings":
			{
				"buffer_size": 13978,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "testcase/default/testcase_vars.f90",
			"settings":
			{
				"buffer_size": 2245,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"BAAAAAAAAAAAAAAAAAAAAAAAAADFCAAAIT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQohIENvcHlyaWdodCAoYykgMjAxMC0yMDE2ICBQcm9mLiBDbGF1cy1EaWV0ZXIgTXVuegohIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIEZMRVhJLCBhIGhpZ2gtb3JkZXIgYWNjdXJhdGUgZnJhbWV3b3JrIGZvciBudW1lcmljYWxseSBzb2x2aW5nIFBERXMgd2l0aCBkaXNjb250aW51b3VzIEdhbGVya2luIG1ldGhvZHMuCiEgRm9yIG1vcmUgaW5mb3JtYXRpb24gc2VlIGh0dHBzOi8vd3d3LmZsZXhpLXByb2plY3Qub3JnIGFuZCBodHRwczovL25yZy5pYWcudW5pLXN0dXR0Z2FydC5kZS8KIQohIEZMRVhJIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnkgaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZQohIGFzIHB1Ymxpc2hlZCBieSB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvciAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLgohCiEgRkxFWEkgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCwgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkKISBvZiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuIFNlZSB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgdjMuMCBmb3IgbW9yZSBkZXRhaWxzLgohCiEgWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYWxvbmcgd2l0aCBGTEVYSS4gSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LgohPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiE9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiE+IENvbnRhaW5zIHRoZSB2YXJpYWJsZXMgb2YgeW91ciB0ZXN0Y2FzZSB0aGF0IHNob3VsZCBiZSBnbG9iYWxseSBhY2Nlc3NpYmxlIQohPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQpNT0RVTEUgTU9EX1Rlc3RDYXNlX1ZhcnMKISBNT0RVTEVTCklNUExJQ0lUIE5PTkUKUFVCTElDClNBVkUKIS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KISBHTE9CQUwgVkFSSUFCTEVTCiEtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCklOVEVHRVIgOjogbkFuYWx5emVUZXN0Q2FzZT05OTk5OTk5ICE8IGNhbGwgQW5hbHl6ZVRlc3RDYXNlIGV2ZXJ5ICp0aCB0aW1lIHN0ZXAuIE1heSBiZSBhZGp1c3RlZCBpbiBwYXJhbWV0ZXIgZmlsZQpMT0dJQ0FMIDo6IGRvVENTb3VyY2U9LkZBTFNFLiAgICAgICAhPCBjb21wdXRlIHNvdXJjZSB0ZXJtcyBmb3IgdGVzdGNhc2UKQ0hBUkFDVEVSKExFTj0yNTUpIDo6IHRlc3RjYXNlID0gImRlZmF1bHQiICAhPCBuYW1lIG9mIHRlc3RjYXNlCiE9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CgpFTkQgTU9EVUxFIE1PRF9UZXN0Q2FzZV9WYXJzCgAAAAAAAAAAxQgAAAAAAAAAAAAAAAAAAAAAAADFCAAAAAAAAAAAAAAAAAAAAAAAAMUIAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "testcase/phill/testcase.f90",
			"settings":
			{
				"buffer_size": 19461,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					2,
					1,
					"revert",
					null,
					"",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMcrAAAAAAAAxysAAAAAAAAAAAAAAADwvw"
				],
				[
					3,
					1,
					"revert",
					null,
					"",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMcrAAAAAAAAxysAAAAAAAAAAAAAAADwvw"
				],
				[
					1,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					1,
					1,
					"revert",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAADXTAAAIT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQohIENvcHlyaWdodCAoYykgMjAxMC0yMDE2ICBQcm9mLiBDbGF1cy1EaWV0ZXIgTXVuegohIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIEZMRVhJLCBhIGhpZ2gtb3JkZXIgYWNjdXJhdGUgZnJhbWV3b3JrIGZvciBudW1lcmljYWxseSBzb2x2aW5nIFBERXMgd2l0aCBkaXNjb250aW51b3VzIEdhbGVya2luIG1ldGhvZHMuCiEgRm9yIG1vcmUgaW5mb3JtYXRpb24gc2VlIGh0dHBzOi8vd3d3LmZsZXhpLXByb2plY3Qub3JnIGFuZCBodHRwczovL25yZy5pYWcudW5pLXN0dXR0Z2FydC5kZS8KIQohIEZMRVhJIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnkgaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZQohIGFzIHB1Ymxpc2hlZCBieSB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvciAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLgohCiEgRkxFWEkgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCwgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkKISBvZiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuIFNlZSB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgdjMuMCBmb3IgbW9yZSBkZXRhaWxzLgohCiEgWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYWxvbmcgd2l0aCBGTEVYSS4gSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LgohPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiNpbmNsdWRlICJmbGV4aS5oIgoKI2lmIEZWX0VOQUJMRUQKI2Vycm9yICJUaGlzIHRlc3RjYXNlIGlzIG5vdCB0ZXN0ZWQgd2l0aCBGViIKI2VuZGlmCgohPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQohPiBTdWJyb3V0aW5lcyBkZWZpbmluZyBvbmUgc3BlY2lmaWMgdGVzdGNhc2Ugd2l0aCBhbGwgbmVjZXNzYXJ5IHZhcmlhYmxlcwohPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQpNT0RVTEUgTU9EX1Rlc3RjYXNlCiEgTU9EVUxFUwpJTVBMSUNJVCBOT05FClBSSVZBVEUKIS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KISBHTE9CQUwgVkFSSUFCTEVTCgpJTlRFUkZBQ0UgRGVmaW5lUGFyYW1ldGVyc1Rlc3RjYXNlCiAgTU9EVUxFIFBST0NFRFVSRSBEZWZpbmVQYXJhbWV0ZXJzVGVzdGNhc2UKRW5kIElOVEVSRkFDRQoKSU5URVJGQUNFIEluaXRUZXN0Y2FzZQogIE1PRFVMRSBQUk9DRURVUkUgSW5pdFRlc3RjYXNlCkVORCBJTlRFUkZBQ0UKCklOVEVSRkFDRSBGaW5hbGl6ZVRlc3RjYXNlCiAgTU9EVUxFIFBST0NFRFVSRSBGaW5hbGl6ZVRlc3RjYXNlCkVORCBJTlRFUkZBQ0UKCklOVEVSRkFDRSBFeGFjdEZ1bmNUZXN0Y2FzZQogIE1PRFVMRSBQUk9DRURVUkUgRXhhY3RGdW5jVGVzdGNhc2UKRU5EIElOVEVSRkFDRQoKSU5URVJGQUNFIENhbGNGb3JjaW5nCiAgTU9EVUxFIFBST0NFRFVSRSBDYWxjRm9yY2luZwpFTkQgSU5URVJGQUNFCgpJTlRFUkZBQ0UgVGVzdGNhc2VTb3VyY2UKICBNT0RVTEUgUFJPQ0VEVVJFIFRlc3RjYXNlU291cmNlCkVORCBJTlRFUkZBQ0UKCklOVEVSRkFDRSBBbmFseXplVGVzdENhc2UKICBNT0RVTEUgUFJPQ0VEVVJFIERPX05PVEhJTkcKRU5EIElOVEVSRkFDRQoKSU5URVJGQUNFIEdldEJvdW5kYXJ5Rmx1eFRlc3RjYXNlCiAgTU9EVUxFIFBST0NFRFVSRSBHZXRCb3VuZGFyeUZsdXhUZXN0Y2FzZQpFTkQgSU5URVJGQUNFCgpJTlRFUkZBQ0UgR2V0Qm91bmRhcnlGVmdyYWRpZW50VGVzdGNhc2UKICBNT0RVTEUgUFJPQ0VEVVJFIEdldEJvdW5kYXJ5RlZncmFkaWVudFRlc3RjYXNlCkVORCBJTlRFUkZBQ0UKCklOVEVSRkFDRSBMaWZ0aW5nX0dldEJvdW5kYXJ5Rmx1eFRlc3RjYXNlCiAgTU9EVUxFIFBST0NFRFVSRSBMaWZ0aW5nX0dldEJvdW5kYXJ5Rmx1eFRlc3RjYXNlCkVORCBJTlRFUkZBQ0UKClBVQkxJQzo6IERlZmluZVBhcmFtZXRlcnNUZXN0Y2FzZQpQVUJMSUM6OiBJbml0VGVzdGNhc2UKUFVCTElDOjogRmluYWxpemVUZXN0Y2FzZQpQVUJMSUM6OiBFeGFjdEZ1bmNUZXN0Y2FzZQpQVUJMSUM6OiBUZXN0Y2FzZVNvdXJjZQpQVUJMSUM6OiBDYWxjRm9yY2luZwpQVUJMSUM6OiBBbmFseXplVGVzdENhc2UKUFVCTElDOjogR2V0Qm91bmRhcnlGbHV4VGVzdGNhc2UKUFVCTElDOjogR2V0Qm91bmRhcnlGVmdyYWRpZW50VGVzdGNhc2UKUFVCTElDOjogTGlmdGluZ19HZXRCb3VuZGFyeUZsdXhUZXN0Y2FzZQoKQ09OVEFJTlMKCiE9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiE+IERlZmluZSBwYXJhbWV0ZXJzCiE9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ClNVQlJPVVRJTkUgRGVmaW5lUGFyYW1ldGVyc1Rlc3RjYXNlKCkKISBNT0RVTEVTClVTRSBNT0RfR2xvYmFscwpVU0UgTU9EX1JlYWRJblRvb2xzICxPTkxZOiBwcm1zCklNUExJQ0lUIE5PTkUKIT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KQ0FMTCBwcm1zJVNldFNlY3Rpb24oIlRlc3RjYXNlIikKQ0FMTCBwcm1zJUNyZWF0ZVJlYWxPcHRpb24oJ21hc3NGbG93UmVmJywgICAgICAiUHJlc2NyaWJlZCBtYXNzZmxvdyBmb3IgdGVzdGNhc2UuIiwgJzEuJykKQ0FMTCBwcm1zJUNyZWF0ZVJlYWxPcHRpb24oJ0ZvcmNpbmdfTWF4TWVtb3J5JywiTWF4aW11bSBhbW91bnQgb2YgbWVtb3J5IHRvIGJlIHVzZWQgdG8gYnVmZmVyIHRlc3RjYXNlIGZvcmNpbmcgbG9nIGRhdGEuICIvLyYKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiSWYgbWVtb3J5IGlzIGV4Y2VlZGVkIGJlZm9yZSBhbmFseXplIGxldmVsLCBsb2cgZmlsZXMgYXJlIHdyaXR0ZW4uIiwgJzEwMC4nKQpDQUxMIHBybXMlQ3JlYXRlU3RyaW5nT3B0aW9uKCdtYXNzRmxvd0JDTmFtZScsICJOYW1lIG9mIEJDIGF0IHdoaWNoIG1hc3NmbG93IGlzIGNvbXB1dGVkLiIsICdJTkZMT1cnKQpFTkQgU1VCUk9VVElORSBEZWZpbmVQYXJhbWV0ZXJzVGVzdGNhc2UKCgohPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQohPiBJbml0aWFsaXplIHRlc3RjYXNlIHNwZWNpZmljIHZhcmlhYmxlcwohPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQpTVUJST1VUSU5FIEluaXRUZXN0Y2FzZSgpCiEgTU9EVUxFUwpVU0UgTU9EX1ByZVByb2MKVVNFIE1PRF9HbG9iYWxzClVTRSBNT0RfVGVzdENhc2VfVmFycwpVU0UgTU9EX1JlYWRJblRvb2xzLCAgICBPTkxZOiBHRVRSRUFMLEdFVFNUUixHRVRJTlQKVVNFIE1PRF9NZXNoX1ZhcnMsICAgICAgT05MWTogbkJDcyxCb3VuZGFyeU5hbWUKVVNFIE1PRF9PdXRwdXRfVmFycywgICAgT05MWTogUHJvamVjdE5hbWUKVVNFIE1PRF9PdXRwdXQsICAgICAgICAgT05MWTogSW5pdE91dHB1dFRvRmlsZQpJTVBMSUNJVCBOT05FCiEtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiEgSU5QVVQvT1VUUFVUIFZBUklBQkxFUwohLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQohIExPQ0FMIFZBUklBQkxFUwpDSEFSQUNURVIoTEVOPTI1NSkgICAgICAgOjogbWFzc0Zsb3dCQ05hbWUKSU5URUdFUiAgICAgICAgICAgICAgICAgIDo6IGlvVW5pdCxvcGVuU3RhdCxpClJFQUwgICAgICAgICAgICAgICAgICAgICA6OiBtYXhNZW1vcnkKQ0hBUkFDVEVSKExFTj0yMCkgICAgICAgIDo6IHZhcm5hbWVzKDUpCiE9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ClNXUklURShVTklUX1N0ZE91dCwnKDEzMigiLSIpKScpClNXUklURShVTklUX3N0ZE91dCwnKEEpJykgJyBJTklUIFRFU1RDQVNFIFBFUklPRElDIEhJTEwuLi4nCgojaWYgRlZfRU5BQkxFRApDQUxMIENvbGxlY3RpdmVTdG9wKF9fU1RBTVBfXywgJgogICdUaGUgdGVzdGNhc2UgaGFzIG5vdCBiZWVuIGltcGxlbWVudGVkIGZvciBGViB5ZXQhJykKI2VuZGlmCgptYXNzRmxvd1JlZiAgICA9IEdFVFJFQUwoJ21hc3NGbG93UmVmJywnMS4nKQptYXNzRmxvd0JDTmFtZSA9IEdFVFNUUiggJ21hc3NGbG93QkNOYW1lJywnSU5GTE9XJykKbWF4TWVtb3J5ICAgICAgPSBHRVRSRUFMKCdGb3JjaW5nX01heE1lbW9yeScgICAgICwnMTAwLicpICEgTWF4IGJ1ZmZlciAoMTAwTUIpCk1heEJ1ZmZlciAgICAgID0gTWF4TWVtb3J5KjEzMTA3Mi81ICAgICAgICAgICAgICAgICAgICAgICAhPSBzaXplIGluIGJ5dGVzL25Mb2dWYXJzCm1hc3NGbG93UHJldiAgID0gbWFzc0Zsb3dSZWYKCm1hc3NGbG93QkM9LTEKRE8gaT0xLG5CQ3MKICBJRihUUklNKEJvdW5kYXJ5TmFtZShpKSkuRVEuVFJJTShtYXNzRmxvd0JDTmFtZSkpIG1hc3NGbG93QkM9aQpFTkQgRE8KSUYobWFzc0Zsb3dCQy5FUS4tMSkgQ0FMTCBhYm9ydChfX1NUQU1QX18sJ05vIGluZmxvdyBCQyBmb3VuZC4nKQoKSUYoLk5PVC5NUElSb290KSBSRVRVUk4KCkZpbGVuYW1lID0gVFJJTShQcm9qZWN0TmFtZSkvLydfU3RhdHMnCnZhcm5hbWVzKDEpID0gJ2RwZHgnCnZhcm5hbWVzKDIpID0gJ2J1bGtWZWwnCnZhcm5hbWVzKDMpID0gJ2luZmxvd0J1bGtWZWwnCnZhcm5hbWVzKDQpID0gJ21hc3NGbG93UmF0ZUdsb2JhbCcKdmFybmFtZXMoNSkgPSAnbWFzc0Zsb3dSYXRlUGVyaW9kaWMnCkNBTEwgSW5pdE91dHB1dFRvRmlsZShGaWxlbmFtZSwnU3RhdGlzdGljcycsNCx2YXJuYW1lcykKClNXUklURShVTklUX3N0ZE91dCwnKEEpJyknIElOSVQgVEVTVENBU0UgUEVSSU9ESUMgSElMTCBET05FIScKU1dSSVRFKFVOSVRfU3RkT3V0LCcoMTMyKCItIikpJykKRU5EIFNVQlJPVVRJTkUgSW5pdFRlc3RjYXNlCgoKCiE9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiE+IFNwZWNpZmllcyBhbGwgdGhlIGluaXRpYWwgY29uZGl0aW9ucyBmb3IgdGhlIHBlcmlvZGljIGhpbGwgdGVzdGNhc2UuCiE9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ClNVQlJPVVRJTkUgRXhhY3RGdW5jVGVzdGNhc2UodEluLHgsUmVzdSxSZXN1X3QsUmVzdV90dCkKISBNT0RVTEVTClVTRSBNT0RfR2xvYmFscywgICAgICBPTkxZOiBBYm9ydApVU0UgTU9EX0VxdWF0aW9uX1ZhcnMsT05MWTogUmVmU3RhdGVQcmltLEluaVJlZlN0YXRlClVTRSBNT0RfRU9TLCAgICAgICAgICBPTkxZOiBQcmltVG9Db25zCklNUExJQ0lUIE5PTkUKIS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KISBJTlBVVC9PVVRQVVQgVkFSSUFCTEVTClJFQUwsSU5URU5UKElOKSAgICAgICAgICAgICAgICAgOjogeCgzKSAgICAgICAgITwgcG9zaXRpb24gaW4gcGh5c2ljYWwgY29vcmRpbmF0ZXMKUkVBTCxJTlRFTlQoSU4pICAgICAgICAgICAgICAgICA6OiB0SW4gICAgICAgICAhPCBjdXJyZW50IHNpbXVsYXRpb24gdGltZQpSRUFMLElOVEVOVChPVVQpICAgICAgICAgICAgICAgIDo6IFJlc3UoNSkgICAgICE8IGV4YWN0IGZ1Y3Rpb24gZXZhbHVhdGVkIGF0IHRJbiwgcmV0dXJuaW5nIHN0YXRlIGluIGNvbnNlcnZhdGl2ZSB2YXJpYWJsZXMKUkVBTCxJTlRFTlQoT1VUKSAgICAgICAgICAgICAgICA6OiBSZXN1X3QoNSkgICAhPCBmaXJzdCB0aW1lIGRlcml2IG9mIGV4YWN0IGZ1Y3Rpb24KUkVBTCxJTlRFTlQoT1VUKSAgICAgICAgICAgICAgICA6OiBSZXN1X3R0KDUpICAhPCBzZWNvbmQgdGltZSBkZXJpdiBvZiBleGFjdCBmdWN0aW9uCiEtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiEgTE9DQUwgVkFSSUFCTEVTClJFQUwgICAgICAgICAgICAgICAgICAgICAgICAgICAgOjogeGxvYyxoLHByaW0oUFBfblZhclByaW0pCiE9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CgohIHBlcmlvZGljIGhpbGwgaW5pdGlhbCBjb25kaXRpb24gKGdlb21ldHJ5IHNjYWxlZCBkb3duIHRvIDEgYnkgYSBmYWN0b3Igb2YgMjgpCnhsb2M9IHgoMSkqMjguCklGKHhsb2MuR1QuNTQpIHhsb2M9MjguKjkuLXhsb2MKSUYoKHhsb2MuR1QuLTEuZS0xMCkuQU5ELih4bG9jLkxFLjkuKSlUSEVOCiFCZXR3ZWVuIHg9MC4gYW5kIHg9OS4KaD1taW4oMjguLCYKICAgICAgMi44MDAwMDAwMDAwMDBFKzAxICAgICAgICAgICswLjAwMDAwMDAwMDAwMEUrMDAqeGxvYyAgICAgJgogICAgICs2Ljc3NTA3MDk2OTg1MUUtMDMqeGxvYyoqMiAgLTIuMTI0NTI3Nzc1ODAwRS0wMyp4bG9jKiozKQpFTFNFSUYoKHhsb2MuR1QuOS4pLkFORC4oeGxvYy5MRS4xNC4pKVRIRU4KIUJldHdlZW4geD05LiBhbmQgeD0xNC4KaD0gIDIuNTA3MzU1ODkzMTMxRSswMSAgICAgICAgICArOS43NTQ4MDM1NjIzMTVFLTAxKnhsb2MgICAgICAgJgogICAtMS4wMTYxMTYzNTI3ODFFLTAxKnhsb2MqKjIgICsxLjg4OTc5NDY3NzgyOEUtMDMqeGxvYyoqMwoKRUxTRUlGKCh4bG9jLkdULjE0LikuQU5ELih4bG9jLkxFLjIwLikpVEhFTgohQmV0d2VlbiB4PTE0LiBhbmQgeD0yMC4KaD0gIDIuNTc5NjAxMDUyMzU3RSswMSAgICAgICAgICArOC4yMDY2OTMwMDc0NTdFLTAxKnhsb2MgICAgICAgJgogICAtOS4wNTUzNzAyNzQzMzlFLTAyKnhsb2MqKjIgICsxLjYyNjUxMDU2OTg1OUUtMDMqeGxvYyoqMwoKRUxTRUlGKCh4bG9jLkdULjIwLikuQU5ELih4bG9jLkxFLjMwLikpVEhFTgohQmV0d2VlbiB4PTIwLiBhbmQgeD0zMC4KaD0gIDQuMDQ2NDM1MDIyODE5RSswMSAgICAgICAgICAtMS4zNzk1ODE2NTQ5NDhFKzAwKnhsb2MgICAgICAgJgogICArMS45NDU4ODQ1MDQxMjhFLTAyKnhsb2MqKjIgIC0yLjA3MDMxODkzMjE5MEUtMDQqeGxvYyoqMwoKRUxTRUlGKCh4bG9jLkdULjMwLikuQU5ELih4bG9jLkxFLjQwLikpVEhFTgohQmV0d2VlbiB4PTMwLiBhbmQgeD00MC4KaD0gIDEuNzkyNDYxMzM0NjY0RSswMSAgICAgICAgICArOC43NDM5MjAzMzIwODFFLTAxKnhsb2MgICAgICAgJgogICAtNS41NjczNjExMjMwNThFLTAyKnhsb2MqKjIgICs2LjI3NzczMTc2NDY4M0UtMDQqeGxvYyoqMwoKRUxTRUlGKCh4bG9jLkdULjQwLikuQU5ELih4bG9jLkxFLjU0LikpVEhFTgohQmV0d2VlbiB4PTQwLiBhbmQgeD01NC4KaD1tYXgoMC4sJgogICAgICA1LjYzOTAxMTE5MDk4OEUrMDEgICAgICAgICAgLTIuMDEwNTIwMzU5MDM1RSswMCp4bG9jICAgICAmCiAgICAgKzEuNjQ0OTE5ODU3NTQ5RS0wMip4bG9jKioyICArMi42NzQ5NzYxNDE3NjZFLTA1Knhsb2MqKjMpCkVMU0VJRih4bG9jLkdULjU0LilUSEVOCmg9ICAwLgpFTFNFCiAgQ0FMTCBhYm9ydChfX1NUQU1QX18sJgogICAgICAgICAgICAgJ1dyb25nIGhpbGwgZ2VvbWV0cnknKQpFTkQgSUYKaD1oLzI4LgpQcmltICAgID0gUmVmU3RhdGVQcmltKDosSW5pUmVmU3RhdGUpClByaW0oMikgPSBQcmltKDIpKjIuMDI1LygzLjAyNS1oKQpQcmltKDYpID0gMC4gISBUIGRvZXMgbm90IG1hdHRlciBmb3IgcHJpbSB0byBjb25zCkNBTEwgUHJpbVRvQ29ucyhQcmltLFJlc3UpClJlc3VfdCA9MC4KUmVzdV90dD0wLgpFTkQgU1VCUk9VVElORSBFeGFjdEZ1bmNUZXN0Y2FzZQoKCgohPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQohPiBTcGVjaWZpZXMgdGhlIGZvcmNpbmcgdGVybSBmb3IgdGhlIHBlcmlvZGljIGhpbGwgdGVzdGNhc2UKIT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KU1VCUk9VVElORSBDYWxjRm9yY2luZyh0LGR0KQohIE1PRFVMRVMKVVNFIE1PRF9QcmVQcm9jClVTRSBNT0RfR2xvYmFscwpVU0UgTU9EX1Rlc3RDYXNlX1ZhcnMKVVNFIE1PRF9ER19WYXJzLCAgICAgICAgT05MWTogVSxVX21hc3RlcixVX3NsYXZlClVTRSBNT0RfQW5hbHl6ZV9WYXJzLCAgIE9OTFk6IHdHUFN1cmYsd0dQVm9sLFN1cmYsVm9sLHdyaXRlRGF0YV9kdCx0V3JpdGVEYXRhClVTRSBNT0RfTWVzaF9WYXJzLCAgICAgIE9OTFk6IFN1cmZFbGVtLEFuYWx5emVTaWRlLG5TaWRlcyxuTVBJU2lkZXNfWU9VUixzSgpVU0UgTU9EX01lc2hfVmFycywgICAgICBPTkxZOiBuRWxlbXMKSU1QTElDSVQgTk9ORQohLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQohIElOUFVUL09VVFBVVCBWQVJJQUJMRVMKUkVBTCxJTlRFTlQoSU4pICAgICAgICAgICAgICAgICA6OiB0ICAgICAgICAgICAgICAgICAgICAgICE8IGN1cnJlbnQgc29sdXRpb24gdGltZQpSRUFMLElOVEVOVChJTikgICAgICAgICAgICAgICAgIDo6IGR0ICAgICAgICAgICAgICAgICAgICAgITwgY3VycmVudCB0aW1lIHN0ZXAKIS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KISBMT0NBTCBWQVJJQUJMRVMKSU5URUdFUiAgICAgICAgICAgICAgICAgICAgICAgICA6OiBpLGosayxpRWxlbSxTaWRlSUQKUkVBTCAgICAgICAgICAgICAgICAgICAgICAgICAgICA6OiBtYXNzRmxvdyxtYXNzRmxvd0dsb2JhbCxtYXNzRmxvd1BlcmlvZGljLHRtcCxpbmZsb3dCdWxrVmVsCiNpZiBVU0VfTVBJClJFQUwgICAgICAgICAgICAgICAgICAgICAgICAgICAgOjogYm94KDMpCiNlbmRpZgohPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQptYXNzRmxvd0dsb2JhbD0wLgptYXNzRmxvd1BlcmlvZGljPTAuCkJ1bGtWZWwgPTAuCmluZmxvd0J1bGtWZWwgPSAwLgohIFBlcmlvZGljIGhpbGwgdGVzdGNhc2UKISAxLiBHZXQgTWFzc2ZsdXggYXQgdGhlIHBlcmlvZGljIGlubGV0IChoaWxsIGNyZXN0KQpETyBTaWRlSUQ9MSxuU2lkZXMtbk1QSVNpZGVzX1lPVVIKICBJRihBbmFseXplU2lkZShTaWRlSUQpLk5FLm1hc3NGbG93QkMpIENZQ0xFCiAgRE8gaj0wLFBQX047IERPIGk9MCxQUF9OCiAgICB0bXAgICAgID0wLjUqd0dQU3VyZihpLGopKlN1cmZFbGVtKGksaiwwLFNpZGVJRCkKICAgIG1hc3NGbG93UGVyaW9kaWM9bWFzc0Zsb3dQZXJpb2RpYysoVV9tYXN0ZXIoMixpLGosU2lkZUlEKStVX3NsYXZlKDIsaSxqLFNpZGVJRCkpKnRtcAogICAgaW5mbG93QnVsa1ZlbD1pbmZsb3dCdWxrVmVsKygoVV9tYXN0ZXIoMixpLGosU2lkZUlEKS9VX21hc3RlcigxLGksaixTaWRlSUQpKSsoVV9zbGF2ZSgyLGksaixTaWRlSUQpL1Vfc2xhdmUoMSxpLGosU2lkZUlEKSkpKnRtcAogIEVORCBETzsgRU5EIERPCkVORCBETwoKRE8gaUVsZW09MSxuRWxlbXMKICBETyBrPTAsUFBfTjsgRE8gaj0wLFBQX047IERPIGk9MCxQUF9OCiAgICBtYXNzRmxvd0dsb2JhbCA9IG1hc3NGbG93R2xvYmFsK1UoMixpLGosayxpRWxlbSkqd0dQVm9sKGksaixrKS9zSihpLGosayxpRWxlbSwwKQogICAgQnVsa1ZlbCA9IEJ1bGtWZWwrVSgyLGksaixrLGlFbGVtKS9VKDEsaSxqLGssaUVsZW0pKndHUFZvbChpLGosaykvc0ooaSxqLGssaUVsZW0sMCkKICBFTkQgRE87IEVORCBETzsgRU5EIERPCkVORCBETwoKI2lmIFVTRV9NUEkKYm94KDEpID0gbWFzc0Zsb3dHbG9iYWw7IGJveCgyKSA9IG1hc3NGbG93UGVyaW9kaWM7IGJveCgzKSA9IEJ1bGtWZWwKQ0FMTCBNUElfQUxMUkVEVUNFKE1QSV9JTl9QTEFDRSxib3gsMyxNUElfRE9VQkxFX1BSRUNJU0lPTixNUElfU1VNLE1QSV9DT01NX0ZMRVhJLGlFcnJvcikKbWFzc0Zsb3dHbG9iYWwgPSBib3goMSk7IG1hc3NGbG93UGVyaW9kaWMgPSBib3goMik7IEJ1bGtWZWwgPSBib3goMykKI2VuZGlmCgpCdWxrVmVsID0gQnVsa1ZlbC9Wb2wKbWFzc0Zsb3dHbG9iYWwgPSBtYXNzRmxvd0dsb2JhbC85LiAhIGF2ZXJhZ2VkIG1hc3MgZmxvdyBvdmVyIGNoYW5uZWwgbGVuZ3RoCklGKGZpcnN0VGltZXN0ZXApVEhFTgogIGR0UHJldj1kdAogIG1hc3NGbG93UHJldiA9IG1hc3NGbG93UmVmCiAgZmlyc3RUaW1lU3RlcD0uRkFMU0UuCkVORCBJRgoKbWFzc0Zsb3cgPSBtYXNzRmxvd0dsb2JhbCAhIHVzZSBnbG9iYWwKCiEgMi4gY29tcHV0ZSBmb3JjaW5nIHRlcm0gZHAvZHgKISBkcGR4X24rMSA9IGRwZHhfbiAtIChtUmVmIC0gMiptX24gKyBtX24tMSkgLyAoc3VyZipkdCkKZHBkeCA9IGRwZHhQcmV2IC0gMC4zKihtYXNzRmxvd1JlZiAtIDIqbWFzc0Zsb3cgKyBtYXNzRmxvd1ByZXYpIC8gKFN1cmYobWFzc0Zsb3dCQykqZHQpCgohISBwcm9wb3NlZCBieSBMZW5vcm1hbmQ6CiEhZHBkeCA9IGRwZHhQcmV2IC0gKGFscGhhKihtYXNzRmxvdy1tYXNzRmxvd1JlZikgKyBiZXRhKihtYXNzRmxvd1ByZXYgLSBtYXNzRmxvd1JlZikpIC8gKFN1cmYobWFzc0Zsb3dCQykpCiFhbHBoYT0yLgohYmV0YSA9LTAuMgohbWFzc0Zsb3dQcmVkaWN0b3IgPSBtYXNzRmxvdytkdC9kdFByZXYqKG1hc3NGbG93LW1hc3NGbG93UHJldikKIWRwZHggPSBkcGR4UHJldiArIChhbHBoYSoobWFzc0Zsb3dQcmVkaWN0b3ItbWFzc0Zsb3dSZWYpICsgYmV0YSoobWFzc0Zsb3cgLSBtYXNzRmxvd1JlZikpIC8gKFN1cmYobWFzc0Zsb3dCQykpCgptYXNzRmxvd1ByZXYgPSBtYXNzRmxvdwpkcGR4UHJldiAgICAgPSBkcGR4CmR0UHJldiAgICAgICA9IGR0CklGKE1QSVJvb3QpVEhFTgogIElGKC5OT1QuQUxMT0NBVEVEKHdyaXRlQnVmKSlUSEVOCiAgICBCdWZmZXIgPSBNSU4oQ0VJTElORygoMi4wKldyaXRlRGF0YV9kdCkvZHQpLE1heEJ1ZmZlcikgISB1c2UgMnggc2VjdXJpdHkKICAgIEFMTE9DQVRFKHdyaXRlQnVmKDYsYnVmZmVyKSkKICAgIFNXUklURSgqLCopICdCdWZmZXIgZm9yIG1hc3NmbG93IGxvZ2dpbmcgaXMgJywgYnVmZmVyCiAgRU5EIElGCiAgaW9Db3VudGVyPWlvQ291bnRlcisxCiAgd3JpdGVCdWYoOixpb0NvdW50ZXIpID0gKC90LCBkcGR4LCBCdWxrVmVsLCBpbmZsb3dCdWxrVmVsLCBNYXNzRmxvd0dsb2JhbCwgTWFzc0Zsb3dQZXJpb2RpYyAvKQogIElGKChpb0NvdW50ZXIuR0UuYnVmZmVyKS5PUi4oKHRXcml0ZURhdGEtdC1kdCkuTFQuMWUtMTApKVRIRU4KICAgIENBTEwgV3JpdGVTdGF0cygpCiAgRU5EIElGCkVORCBJRgoKRU5EIFNVQlJPVVRJTkUgQ2FsY0ZvcmNpbmcKCgohPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQohPiBBcHBseSBmb3JjaW5nIHRlcm0gZm9yIHBlcmlvZGljIGhpbGwgdGVzdGNhc2UuCiE+IC0gU3RyZWFtd2lzZSBwcmVzc3VyZSBncmFkaWVudCBjb21wdXRlZCBieSBwcmVkZWZpbmVkIG1hc3NmbG93CiE9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ClNVQlJPVVRJTkUgVGVzdGNhc2VTb3VyY2UoVXQpCiEgTU9EVUxFUwpVU0UgTU9EX1ByZVByb2MKVVNFIE1PRF9UZXN0Q2FzZV9WYXJzLE9OTFk6ZHBkeCxCdWxrVmVsClVTRSBNT0RfTWVzaF9WYXJzLCAgICBPTkxZOnNKLG5FbGVtcwpJTVBMSUNJVCBOT05FCiEtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiEgSU5QVVQvT1VUUFVUIFZBUklBQkxFUwpSRUFMLElOVEVOVChJTk9VVCkgICAgICAgICAgICAgIDo6IFV0KFBQX25WYXIsMDpQUF9OLDA6UFBfTiwwOlBQX04sMTpuRWxlbXMpCiEtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiEgTE9DQUwgVkFSSUFCTEVTCklOVEVHRVIgICAgICAgICAgICAgICAgICAgICAgICAgOjogaSxqLGssaUVsZW0KIT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KISBQZXJpb2RpYyBoaWxsIHRlc3RjYXNlCkRPIGlFbGVtPTEsbkVsZW1zCiAgRE8gaz0wLFBQX047IERPIGo9MCxQUF9OOyBETyBpPTAsUFBfTgogICAgVXQoMixpLGosayxpRWxlbSk9VXQoMixpLGosayxpRWxlbSktZHBkeC9zSihpLGosayxpRWxlbSwwKQogICAgVXQoNSxpLGosayxpRWxlbSk9VXQoNSxpLGosayxpRWxlbSktZHBkeCpCdWxrVmVsL3NKKGksaixrLGlFbGVtLDApCiAgRU5EIERPOyBFTkQgRE87IEVORCBETwpFTkQgRE8KRU5EIFNVQlJPVVRJTkUgVGVzdGNhc2VTb3VyY2UKCgohPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQohPiBXcml0ZXMgc3RhdGlzdGljcyBvZiB0ZXN0Y2FzZSB0byBmaWxlCiE9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ClNVQlJPVVRJTkUgV3JpdGVTdGF0cygpCiEgTU9EVUxFUwpVU0UgTU9EX0dsb2JhbHMgICAgICAsT05MWTpBYm9ydApVU0UgTU9EX1Rlc3RDYXNlX1ZhcnMsT05MWTp3cml0ZUJ1ZixGaWxlTmFtZSxpb0NvdW50ZXIKVVNFIE1PRF9PdXRwdXQsICAgICAgIE9OTFk6T3V0cHV0VG9GaWxlCklNUExJQ0lUIE5PTkUKIS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KISBJTlBVVC9PVVRQVVQgVkFSSUFCTEVTCiEtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiEgTE9DQUwgVkFSSUFCTEVTCklOVEVHRVIgICAgICAgICAgICAgICAgICA6OiBpb1VuaXQsb3BlblN0YXQsaQohPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQpDQUxMIE91dHB1dFRvRmlsZShGaWxlTmFtZSx3cml0ZUJ1ZigxLDE6aW9Db3VudGVyKSwoLzQsaW9Db3VudGVyLyksUkVTSEFQRSh3cml0ZUJ1ZigyOjUsMTppb0NvdW50ZXIpLCgvNCppb0NvdW50ZXIvKSkpCmlvQ291bnRlcj0wCgpFTkQgU1VCUk9VVElORSBXcml0ZVN0YXRzCgoKIT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KIT4gU3BlY2lmaWVzIGFsbCB0aGUgaW5pdGlhbCBjb25kaXRpb25zLiBUaGUgc3RhdGUgaW4gY29uc2VydmF0aXZlIHZhcmlhYmxlcyBpcyByZXR1cm5lZC4KIT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KU1VCUk9VVElORSBGaW5hbGl6ZVRlc3RjYXNlKCkKISBNT0RVTEVTClVTRSBNT0RfR2xvYmFscyAgICAgIApVU0UgTU9EX1Rlc3RDYXNlX1ZhcnMsT05MWTp3cml0ZUJ1ZgpJTVBMSUNJVCBOT05FCiE9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CklGICguTk9ULnBvc3RpTW9kZSkgVEhFTgogIElGKE1QSVJvb3QpIENBTEwgV3JpdGVTdGF0cygpCiAgSUYoTVBJUm9vdCkgREVBTExPQ0FURSh3cml0ZUJ1ZikKRU5EIElGCkVORCBTVUJST1VUSU5FCgoKU1VCUk9VVElORSBET19OT1RISU5HKG9wdGlvbmFsUkVBTCxvcHRpb25hbFJFQUwyKQpSRUFMLCBPUFRJT05BTCAgOjogb3B0aW9uYWxSRUFMLG9wdGlvbmFsUkVBTDIKRU5EIFNVQlJPVVRJTkUgRE9fTk9USElORwoKClNVQlJPVVRJTkUgR2V0Qm91bmRhcnlGbHV4VGVzdGNhc2UoU2lkZUlELHQsTmxvYyxGbHV4LFVQcmltX21hc3RlciwgICAgICAgICAgICAgICAgICAgJgojaWYgUEFSQUJPTElDCiAgICAgICAgICAgICAgICAgICAgICAgICAgIGdyYWRVeF9tYXN0ZXIsZ3JhZFV5X21hc3RlcixncmFkVXpfbWFzdGVyLCYKI2VuZGlmCiAgICAgICAgICAgICAgICAgICAgICAgICAgIE5vcm1WZWMsVGFuZ1ZlYzEsVGFuZ1ZlYzIsRmFjZV94R1ApCiEgTU9EVUxFUwohLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQohIElOUFVUIC8gT1VUUFVUIFZBUklBQkxFUwpJTlRFR0VSLElOVEVOVChJTikgICA6OiBTaWRlSUQKUkVBTCxJTlRFTlQoSU4pICAgICAgOjogdCAgICAgICAhPCBjdXJyZW50IHRpbWUgKHByb3ZpZGVkIGJ5IHRpbWUgaW50ZWdyYXRpb24gc2NoZW1lKQpJTlRFR0VSLElOVEVOVChJTikgICA6OiBObG9jICAgICE8IHBvbHlub21pYWwgZGVncmVlClJFQUwsSU5URU5UKElOKSAgICAgIDo6IFVQcmltX21hc3RlciggUFBfblZhclByaW0sMDpObG9jLDA6TmxvYykgITwgaW5uZXIgc3VyZmFjZSBzb2x1dGlvbgojaWYgUEFSQUJPTElDCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIT4gaW5uZXIgc3VyZmFjZSBzb2x1dGlvbiBncmFkaWVudHMgaW4geC95L3otZGlyZWN0aW9uClJFQUwsSU5URU5UKElOKSAgICAgIDo6IGdyYWRVeF9tYXN0ZXIoUFBfblZhclByaW0sMDpObG9jLDA6TmxvYykKUkVBTCxJTlRFTlQoSU4pICAgICAgOjogZ3JhZFV5X21hc3RlcihQUF9uVmFyUHJpbSwwOk5sb2MsMDpObG9jKQpSRUFMLElOVEVOVChJTikgICAgICA6OiBncmFkVXpfbWFzdGVyKFBQX25WYXJQcmltLDA6TmxvYywwOk5sb2MpCiNlbmRpZiAvKlBBUkFCT0xJQyovCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIT4gbm9ybWFsIGFuZCB0YW5nZW50aWFsIHZlY3RvcnMgb24gc3VyZmFjZXMKUkVBTCxJTlRFTlQoSU4pICAgICAgOjogTm9ybVZlYyAoMywwOk5sb2MsMDpObG9jKQpSRUFMLElOVEVOVChJTikgICAgICA6OiBUYW5nVmVjMSgzLDA6TmxvYywwOk5sb2MpClJFQUwsSU5URU5UKElOKSAgICAgIDo6IFRhbmdWZWMyKDMsMDpObG9jLDA6TmxvYykKUkVBTCxJTlRFTlQoSU4pICAgICAgOjogRmFjZV94R1AoMywwOk5sb2MsMDpObG9jKSAgICAhPCBwb3NpdGlvbnMgb2Ygc3VyZmFjZSBmbHV4IHBvaW50cwpSRUFMLElOVEVOVChPVVQpICAgICA6OiBGbHV4KFBQX25WYXIsMDpObG9jLDA6TmxvYykgICE8IHJlc3VsdGluZyBib3VuZGFyeSBmbHV4ZXMKIT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KRU5EIFNVQlJPVVRJTkUgR2V0Qm91bmRhcnlGbHV4VGVzdGNhc2UKCgpTVUJST1VUSU5FIEdldEJvdW5kYXJ5RlZncmFkaWVudFRlc3RjYXNlKFNpZGVJRCx0LGdyYWRVLFVQcmltX21hc3RlcikKVVNFIE1PRF9QcmVQcm9jCiEtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiEgSU5QVVQgLyBPVVRQVVQgVkFSSUFCTEVTCklOVEVHRVIsSU5URU5UKElOKSA6OiBTaWRlSUQKUkVBTCxJTlRFTlQoSU4pICAgIDo6IHQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAhPCBjdXJyZW50IHRpbWUgKHByb3ZpZGVkIGJ5IHRpbWUgaW50ZWdyYXRpb24gc2NoZW1lKQpSRUFMLElOVEVOVChJTikgICAgOjogVVByaW1fbWFzdGVyKFBQX25WYXJQcmltLDA6UFBfTiwwOlBQX04pICE8IHByaW1pdGl2ZSBzb2x1dGlvbiBmcm9tIHRoZSBpbnNpZGUKUkVBTCxJTlRFTlQoT1VUKSAgIDo6IGdyYWRVICAgICAgIChQUF9uVmFyUHJpbSwwOlBQX04sMDpQUF9OKSAhPCBGViBib3VuZGFyeSBncmFkaWVudAohPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQpFTkQgU1VCUk9VVElORSBHZXRCb3VuZGFyeUZWZ3JhZGllbnRUZXN0Y2FzZQoKClNVQlJPVVRJTkUgTGlmdGluZ19HZXRCb3VuZGFyeUZsdXhUZXN0Y2FzZShTaWRlSUQsdCxVUHJpbV9tYXN0ZXIsRmx1eCkKVVNFIE1PRF9QcmVQcm9jCiEtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiEgSU5QVVQgLyBPVVRQVVQgVkFSSUFCTEVTCklOVEVHRVIsSU5URU5UKElOKSA6OiBTaWRlSUQKUkVBTCxJTlRFTlQoSU4pICAgIDo6IHQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAhPCBjdXJyZW50IHRpbWUgKHByb3ZpZGVkIGJ5IHRpbWUgaW50ZWdyYXRpb24gc2NoZW1lKQpSRUFMLElOVEVOVChJTikgICAgOjogVVByaW1fbWFzdGVyKFBQX25WYXJQcmltLDA6UFBfTiwwOlBQX04pICE8IHByaW1pdGl2ZSBzb2x1dGlvbiBmcm9tIHRoZSBpbnNpZGUKUkVBTCxJTlRFTlQoT1VUKSAgIDo6IEZsdXgoICAgICAgICBQUF9uVmFyUHJpbSwwOlBQX04sMDpQUF9OKSAhPCBsaWZ0aW5nIGJvdW5kYXJ5IGZsdXgKIT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KRU5EIFNVQlJPVVRJTkUgTGlmdGluZ19HZXRCb3VuZGFyeUZsdXhUZXN0Y2FzZQoKRU5EIE1PRFVMRSBNT0RfVGVzdGNhc2UKAAAAAAAAAAAFTAAAAAAAAAAAAAAAAAAAAAAAAAVMAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"disco",
				"Discord Rich Presence: Connect to Discord"
			],
			[
				"disc",
				"Discord Rich Presence: Reconnect to Discord"
			],
			[
				"dis",
				"Discord Rich Presence: Disconnect"
			],
			[
				"discord",
				"Discord Rich Presence: Reconnect to Discord"
			],
			[
				"Package Control: ins",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/eron/Workspace/CFD/Flexi/flexi/src"
	],
	"file_history":
	[
		"/home/eron/Workspace/CFD/Flexi/flexi/posti/preparewmmesh/connect.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/posti/preparewmmesh/preparewmmesh.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/posti/CMakeLists.txt",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/testcase/phill/testcase.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/equations/navierstokes/equation.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi-zles_dev/src/interface/wm/wm.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/equations/linearscalaradvection/flux.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/indicator/indicator.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi-zles_dev/src/baseflow/baseflow.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi-zles_dev/src/baseflow/baseflow_readin.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/globals/commandlinearguments.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/equations/navierstokes/eddyVisc/smagorinsky/smagorinsky.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/equations/navierstokes/eddyVisc/eddyVisc_vars.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/interpolation/interpolation.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/interpolation/interpolation_vars.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/dg/overintegration.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/fv/fv_vars.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/globals/mathtools.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/dg/dg.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/mortar/fillmortar.t90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/mortar/fillmortar.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/equations/navierstokes/eddyVisc/eddyVisc.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/testcase/phill/testcase_vars.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/output/output_vars.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/equations/navierstokes/idealgas/viscosity.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/globals/preprocessing.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/equations/navierstokes/equation_vars.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/dg/br2/br2.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/posti/visu/mappings.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/equations/navierstokes/idealgas/eos_posti_vars.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/posti/channel_fft/channel_fft.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/output/output.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/equations/navierstokes/splitflux.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/dg/volint.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/testcase/default/testcase.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/readintools/readintools.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/equations/rans_sa/idealgas/getboundaryflux.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/posti/visu/visu.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/filter/filter.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/equations/navierstokes/analyze_equation.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/analyze/analyze_vars.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/equations/navierstokes/timeavg.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/timedisc/timedisc.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/readintools/options.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/equations/navierstokes/idealgas/eos_vars.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/equations/navierstokes/idealgas/eos.h",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/dg/surfint.t90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/dg/surfint.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/equations/navierstokes/idealgas/eos.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/dg/br2/br2_vars.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/interpolation/prolongtoface.t90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/interpolation/prolongtoface.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/recordpoints/recordpoints.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/posti/recordpoints/prepare/parametriccoords.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/posti/recordpoints/prepare/rpset.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/posti/recordpoints/prepare/preparerecordpoints.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/posti/recordpoints/prepare/rpset_vars.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/timedisc/timedisc_vars.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/globals/vector.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/equations/navierstokes/calctimestep.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/testcase/channel/testcase_vars.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/testcase/channel/testcase.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/equations/navierstokes/riemann.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/posti/recordpoints/prepare/hdf5_outputrp.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/posti/recordpoints/prepare/parameters.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/recordpoints/recordpoints_vars.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/interpolation/basis.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/equations/navierstokes/idealgas/eos_posti.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/io_hdf5/io_hdf5.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/io_hdf5/hdf5_input.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/posti/visu/visu_vars.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/restart/restart.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/posti/visu/readstate.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/posti/visu/calc.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/posti/visu/posti_visu.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/posti/visu/visumesh.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/posti/visu/converttovisu.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/interpolation/changeBasis.t90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/interpolation/changeBasis.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/readintools/stringtools.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/equations/linearscalaradvection/equation_vars.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/equations/navierstokes/wmles/wmles.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/mesh/mesh.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/mesh/mappings.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/mesh/mesh_readin.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/mesh/metrics.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/mesh/prepare_mesh.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/mesh/mesh_vars.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/equations/navierstokes/wmles/wmles_vars.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/mpi/mpi.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/mpi/mpi_vars.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/equations/navierstokes/idealgas/exactfunc.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/dg/fillflux.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/equations/navierstokes/flux.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/dg/br2/br2_surfint.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/dg/br2/br2_volint.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/dg/br2/br2_fillflux.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/equations/navierstokes/idealgas/getboundaryflux.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/sponge/sponge.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/io_hdf5/hdf5_output.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/interpolation/applyjacobian.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/analyze/analyze.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/readintools/isovaryingstring.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/flexi.h",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/globals/globals.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/flexilib.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/flexi.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/dg/dg_vars.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/fv/fv_metrics.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/dg/overintegration_vars.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/equations/rans_sa/riemann.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/analyze/benchmarking.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/filter/filter_vars.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/mortar/mortar.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/mortar/mortar_vars.f90",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/output/read_userblock.c",
		"/home/eron/Workspace/CFD/Flexi/flexi/src/globals/stacksize.c",
		"/home/eron/Workspace/CFD/Flexi/runs/channel/Under-resolved/Re550/gnuplot_P3_40DOF.plt",
		"/home/eron/Workspace/CS/CSAPP/Chap3/PraticeProblems/pp3.26.c"
	],
	"find":
	{
		"height": 27.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"                         ",
			"GNU",
			"Intel",
			"INTEL",
			"WMLES_TauW",
			"ReadState",
			"WMLES_FilterMat",
			"WMLES_Filter",
			"NFilter",
			"vKarma)",
			"abs_h_wm",
			"NewtonLogLaw",
			"MODULES",
			")\n",
			"symmetry",
			"calctimeaverage",
			"Surf",
			"AnalyzeSide",
			"Surf",
			"bulk",
			"mu0",
			"Requests",
			"posti",
			"myRank",
			"myRank.",
			"WRITE(*,*)",
			"myRank ",
			"myRank.EQ.",
			"WRITE",
			"myrank",
			"vector",
			"startsend",
			"wbary",
			"xgp",
			"iSendPoin",
			"nHWMProp",
			"nHWMSendPoints",
			"sponge",
			"InterpToLocalPoint",
			"j",
			"SendToInterpPoint",
			"ALLOCATE",
			"HWMSendInfo",
			"DO",
			"WMLESSendRange",
			"nHWMLocalPoints",
			"ALLOCATE",
			"nRecvProcs",
			"nSendProcs",
			"nHWMRecvPoints",
			"RecvFromProc",
			"SendToProc",
			"InterpToLocalPoint",
			"nHWMSendPoints",
			"iSide",
			"nModelledBCSides_global",
			"WMLESSides",
			"hsize",
			"subroutine mesh",
			"FALSE",
			"cflscale",
			"dowm",
			"Allocate",
			"PP_N",
			"SideToElem",
			"1",
			"UPrim_slave",
			"UPrim_master",
			"nBCSides",
			"abs_h_wm",
			"abs_h",
			"h_wmm",
			"h_wm",
			"abs_h_wm",
			"Master",
			"master",
			"Master",
			"master",
			"Master",
			"MasterToWMLESSide",
			"MasterOppFlip_tmp",
			"IF (myRank.EQ.90) THEN\n!     DO i=1,nMasterWMLESSide\n!         IF (UseSemiLocal) THEN\n!             ! We use info of the above element.\n!             ! Hence, we never need to flip anything.\n!             ! HOWEVER, in case of Face_xGP, since only MASTER have this info, flips will be needed,\n!             ! but not when we use master info\n!             flip = 0\n!         ELSE\n!             ! Now we use master info, but we're using local info, so flip is needed\n!             flip = SideToElem(S2E_FLIP, MasterToOppSide_tmp(i))\n!         END IF\n        \n!         DO q=0,PP_NZ; DO p=0,PP_N\n!             WRITE(*,'((A3,X),2(I6,X),4(I5,X),9(E15.8,X))') \"M\", SideToGlobalSide(WMLESToBCSide_tmp(MasterToWMLESSide_tmp(i))), SideToGlobalSide(MasterToOppSide_tmp(i)), p, q, SideToElem(S2E_FLIP, MasterToOppSide_tmp(i)), flip, Face_xGP(1,p,q,0,WMLESToBCSide_tmp(MasterToWMLESSide_tmp(i))), Face_xGP(2,p,q,0,WMLESToBCSide_tmp(MasterToWMLESSide_tmp(i))), Face_xGP(3,p,q,0,WMLESToBCSide_tmp(MasterToWMLESSide_tmp(i))), &\n!                                                     Face_xGP(1,FS2M(1,p,q,flip),FS2M(2,p,q,flip),0,MasterToOppSide_tmp(i)), Face_xGP(2,FS2M(1,p,q,flip),FS2M(2,p,q,flip),0,MasterToOppSide_tmp(i)), Face_xGP(3,FS2M(1,p,q,flip),FS2M(2,p,q,flip),0,MasterToOppSide_tmp(i)), &\n!                                                     ABS(Face_xGP(1,p,q,0,WMLESToBCSide_tmp(MasterToWMLESSide_tmp(i)))-Face_xGP(1,FS2M(1,p,q,flip),FS2M(2,p,q,flip),0,MasterToOppSide_tmp(i))), ABS(Face_xGP(2,p,q,0,WMLESToBCSide_tmp(MasterToWMLESSide_tmp(i)))-Face_xGP(2,FS2M(1,p,q,flip),FS2M(2,p,q,flip),0,MasterToOppSide_tmp(i))), ABS(Face_xGP(3,p,q,0,WMLESToBCSide_tmp(MasterToWMLESSide_tmp(i)))-Face_xGP(3,FS2M(1,p,q,flip),FS2M(2,p,q,flip),0,MasterToOppSide_tmp(i)))\n!                                                     !ABS(Face_xGP(1,p,q,0,WMLESToBCSide_tmp(i))-Face_xGP(1,p,q,0,OppSideID)), ABS(Face_xGP(2,p,q,0,WMLESToBCSide_tmp(i))-Face_xGP(2,p,q,0,OppSideID)), ABS(Face_xGP(3,p,q,0,WMLESToBCSide_tmp(i))-Face_xGP(3,p,q,0,OppSideID))\n!         END DO; END DO ! p,q\n!     END DO\n\n!     DO i=1,nSlaveWMLESSide\n!         IF (UseSemiLocal) THEN\n!             ! Once again, whenever we use info of the element above, we'll never need to flip\n!             ! However, for the specific case of Face_xGP, since only master have this info,\n!             ! we need to flip in some cases. \n!             ! Here, since we're using slave info and taking info from the above element, we are\n!             ! also master of this side, so a flip is needed\n!             flip = SideToElem(S2E_FLIP, SlaveToOppSide_tmp(i))\n!         ELSE\n!             flip = 0\n!         END IF\n!         DO q=0,PP_NZ; DO p=0,PP_N\n!             WRITE(*,'((A3,X),2(I6,X),4(I5,X),9(E15.8,X))') \"S\", SideToGlobalSide(WMLESToBCSide_tmp(SlaveToWMLESSide_tmp(i))), SideToGlobalSide(SlaveToOppSide_tmp(i)), p, q, SideToElem(S2E_FLIP, SlaveToOppSide_tmp(i)), flip, Face_xGP(1,p,q,0,WMLESToBCSide_tmp(SlaveToWMLESSide_tmp(i))), Face_xGP(2,p,q,0,WMLESToBCSide_tmp(SlaveToWMLESSide_tmp(i))), Face_xGP(3,p,q,0,WMLESToBCSide_tmp(SlaveToWMLESSide_tmp(i))), &\n!                                                     Face_xGP(1,FS2M(1,p,q,flip),FS2M(2,p,q,flip),0,SlaveToOppSide_tmp(i)), Face_xGP(2,FS2M(1,p,q,flip),FS2M(2,p,q,flip),0,SlaveToOppSide_tmp(i)), Face_xGP(3,FS2M(1,p,q,flip),FS2M(2,p,q,flip),0,SlaveToOppSide_tmp(i)), &\n!                                                     ABS(Face_xGP(1,p,q,0,WMLESToBCSide_tmp(SlaveToWMLESSide_tmp(i)))-Face_xGP(1,FS2M(1,p,q,flip),FS2M(2,p,q,flip),0,SlaveToOppSide_tmp(i))), ABS(Face_xGP(2,p,q,0,WMLESToBCSide_tmp(SlaveToWMLESSide_tmp(i)))-Face_xGP(2,FS2M(1,p,q,flip),FS2M(2,p,q,flip),0,SlaveToOppSide_tmp(i))), ABS(Face_xGP(3,p,q,0,WMLESToBCSide_tmp(SlaveToWMLESSide_tmp(i)))-Face_xGP(3,FS2M(1,p,q,flip),FS2M(2,p,q,flip),0,SlaveToOppSide_tmp(i)))\n!                                                     !ABS(Face_xGP(1,p,q,0,WMLESToBCSide_tmp(i))-Face_xGP(1,p,q,0,OppSideID)), ABS(Face_xGP(2,p,q,0,WMLESToBCSide_tmp(i))-Face_xGP(2,p,q,0,OppSideID)), ABS(Face_xGP(3,p,q,0,WMLESToBCSide_tmp(i))-Face_xGP(3,p,q,0,OppSideID))\n!         END DO; END DO ! p,q\n!     END DO\n!     CALL Abort(__STAMP__, \"GREAT!\")\n! END IF",
			"p,q",
			"SlaveToOppSide_tmp",
			"SlaveToWMLESSide_tmp",
			"OppSideID",
			"WMLESToBCSide_tmp(i)",
			"FS2M(1,p,q,flip),FS2M(2,p,q,flip)",
			"r",
			"WMLESToBCSide(SlaveToWMLESSide(i))",
			"WMLESToBCSide(MasterToWMLESSide(i))",
			"UPrim_slave",
			"UPrim_master",
			"WMLESToBCSide_tmp(i)",
			"SlaveToWMLESSide",
			"WMLESToBCSide(i)",
			"_tmp",
			"UPrim_master",
			"OppSideID",
			"PP_N-p",
			"Face_xGP",
			"nSlaveWMLESSide",
			" WRITE",
			"WRITE",
			"WMLES",
			"lastMPISide_YOUR",
			"CALL Write",
			"Write",
			"Master",
			"ALLOCATE",
			"WMLES_TauW",
			"Face_xGP",
			"Master",
			"UPrim_Slave",
			"Master",
			"master",
			"Master",
			"master",
			"Master",
			"WMLESSide",
			"Master",
			"IntPInd",
			"TolVec",
			"WRITE",
			"FaceToLocal",
			"InterpToLocalPoint(IntPInd)",
			"InteriorToLocalPoint(IPInd)",
			"FaceToLocalPoint(FPInd)"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"nWMLESRecvProcs",
			"nWMLESSendProcs",
			"WMLESRecvFromProc",
			"WMLESSendToProc",
			"nWMLESSides_global"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "flexi.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2105,
						"regions":
						{
						},
						"selection":
						[
							[
								1869,
								1869
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "flexilib.f90",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11441,
						"regions":
						{
						},
						"selection":
						[
							[
								7815,
								7815
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2911.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/home/eron/Workspace/CFD/Flexi/flexi-zles_dev/src/flexilib.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13254,
						"regions":
						{
						},
						"selection":
						[
							[
								9468,
								9468
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3315.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "flexi.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5163,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 922.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "globals/globals.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 26688,
						"regions":
						{
						},
						"selection":
						[
							[
								4951,
								4951
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2457.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 5,
					"file": "/home/eron/Workspace/CFD/Flexi/flexi-zles_dev/posti/preparewmmesh/preparewmmesh.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6842,
						"regions":
						{
						},
						"selection":
						[
							[
								6374,
								6374
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1575.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/home/eron/Workspace/CFD/Flexi/flexi-zles_dev/posti/preparewmmesh/preparewmmesh_vars.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6048,
						"regions":
						{
						},
						"selection":
						[
							[
								903,
								903
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 31,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/home/eron/Workspace/CFD/Flexi/flexi-zles_dev/posti/preparewmmesh/connect.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 36542,
						"regions":
						{
						},
						"selection":
						[
							[
								8595,
								8595
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3165.0,
						"zoom_level": 1.0
					},
					"stack_index": 29,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/home/eron/Workspace/CFD/Flexi/flexi-zles_dev/posti/preparewmmesh/connect_output.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10479,
						"regions":
						{
						},
						"selection":
						[
							[
								7843,
								7843
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2504.0,
						"zoom_level": 1.0
					},
					"stack_index": 50,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "/home/eron/Workspace/CFD/Flexi/flexi-zles_dev/src/interface/interface.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 37860,
						"regions":
						{
						},
						"selection":
						[
							[
								14927,
								14937
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4089.0,
						"zoom_level": 1.0
					},
					"stack_index": 44,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "/home/eron/Workspace/CFD/Flexi/flexi-zles_dev/src/interface/interface_vars.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9345,
						"regions":
						{
						},
						"selection":
						[
							[
								5344,
								5344
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1071.0,
						"zoom_level": 1.0
					},
					"stack_index": 45,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "/home/eron/Workspace/CFD/Flexi/flexi-zles_dev/src/interface/interface_interpolation.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11945,
						"regions":
						{
						},
						"selection":
						[
							[
								7571,
								7571
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1688.0,
						"zoom_level": 1.0
					},
					"stack_index": 37,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "/home/eron/Workspace/CFD/Flexi/flexi-zles_dev/src/interface/wm/wm.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 32183,
						"regions":
						{
						},
						"selection":
						[
							[
								13268,
								13268
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4208.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "/home/eron/Workspace/CFD/Flexi/flexi-zles_dev/src/interface/wm/wm_vars.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3681,
						"regions":
						{
						},
						"selection":
						[
							[
								2218,
								2218
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 51.0,
						"zoom_level": 1.0
					},
					"stack_index": 49,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "/home/eron/Workspace/CFD/Flexi/flexi-zles_dev/src/timedisc/timedisc.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 28913,
						"regions":
						{
						},
						"selection":
						[
							[
								10873,
								10873
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3821.0,
						"zoom_level": 1.0
					},
					"stack_index": 48,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "/home/eron/Workspace/CFD/Flexi/flexi-zles_dev/src/dg/dg.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 32356,
						"regions":
						{
						},
						"selection":
						[
							[
								28404,
								28404
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 9153.0,
						"zoom_level": 1.0
					},
					"stack_index": 39,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "/home/eron/Workspace/CFD/Flexi/flexi-zles_dev/src/dg/lifting/lifting.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10239,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 918.0,
						"zoom_level": 1.0
					},
					"stack_index": 54,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "/home/eron/Workspace/CFD/Flexi/flexi-zles_dev/src/dg/lifting/lifting_br2.t90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16258,
						"regions":
						{
						},
						"selection":
						[
							[
								7318,
								7318
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1836.0,
						"zoom_level": 1.0
					},
					"stack_index": 55,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "/home/eron/Workspace/CFD/Flexi/flexi-zles_dev/src/dg/lifting/lifting_fillflux.t90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12894,
						"regions":
						{
						},
						"selection":
						[
							[
								9111,
								9111
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2193.0,
						"zoom_level": 1.0
					},
					"stack_index": 56,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "/home/eron/Workspace/CFD/Flexi/flexi-zles_dev/src/equations/navierstokes/idealgas/getboundaryflux.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 70005,
						"regions":
						{
						},
						"selection":
						[
							[
								58452,
								58461
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 19651.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "/home/eron/Workspace/CFD/Flexi/flexi-zles_dev/src/interface/wm/sensor.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 24761,
						"regions":
						{
						},
						"selection":
						[
							[
								6079,
								6079
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2856.0,
						"zoom_level": 1.0
					},
					"stack_index": 47,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "/home/eron/Workspace/CFD/Flexi/flexi-zles_dev/src/dg/lifting/lifting_br1.t90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17667,
						"regions":
						{
						},
						"selection":
						[
							[
								6996,
								6996
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1824.0,
						"zoom_level": 1.0
					},
					"stack_index": 42,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "equations/navierstokes/wmles/wmles.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 57828,
						"regions":
						{
						},
						"selection":
						[
							[
								37183,
								37183
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 12258.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "/home/eron/Workspace/CFD/Flexi/flexi/posti/avg2D/posti_avg2D.f90",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8179,
						"regions":
						{
						},
						"selection":
						[
							[
								3796,
								3796
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 486.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "equations/navierstokes/wmles/wmles_vars.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13140,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 216.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "/home/eron/Workspace/CFD/Flexi/flexi/posti/channel_fft/channel_fft.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11226,
						"regions":
						{
						},
						"selection":
						[
							[
								8428,
								8428
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3097.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "output/output.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 28562,
						"regions":
						{
						},
						"selection":
						[
							[
								19611,
								19611
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7866.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "/home/eron/Workspace/CFD/Flexi/flexi/posti/channel_fft/fft.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 35271,
						"regions":
						{
						},
						"selection":
						[
							[
								33620,
								33620
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 12831.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "/home/eron/Workspace/CFD/Flexi/flexi/posti/channel_fft/fft_vars.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3472,
						"regions":
						{
						},
						"selection":
						[
							[
								2063,
								2063
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 32,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "/home/eron/Workspace/CFD/Flexi/flexi/posti/visu/posti_visu.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8962,
						"regions":
						{
						},
						"selection":
						[
							[
								3784,
								3784
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1153.0,
						"zoom_level": 1.0
					},
					"stack_index": 57,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "/home/eron/Workspace/CFD/Flexi/flexi/posti/visu/visu.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 31189,
						"regions":
						{
						},
						"selection":
						[
							[
								23338,
								23338
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 8219.0,
						"zoom_level": 1.0
					},
					"stack_index": 58,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "/home/eron/Workspace/CFD/Flexi/flexi/posti/visu/readstate.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13976,
						"regions":
						{
						},
						"selection":
						[
							[
								8909,
								8909
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2300.0,
						"zoom_level": 1.0
					},
					"stack_index": 59,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 32,
					"file": "restart/restart.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20955,
						"regions":
						{
						},
						"selection":
						[
							[
								20883,
								20883
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3468.0,
						"zoom_level": 1.0
					},
					"stack_index": 60,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 33,
					"file": "io_hdf5/hdf5_output.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 52142,
						"regions":
						{
						},
						"selection":
						[
							[
								11161,
								11161
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4510.0,
						"zoom_level": 1.0
					},
					"stack_index": 61,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "/home/eron/Workspace/CFD/Flexi/flexi/posti/visu/calc.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 31039,
						"regions":
						{
						},
						"selection":
						[
							[
								3773,
								3773
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 252.0,
						"zoom_level": 1.0
					},
					"stack_index": 62,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "equations/navierstokes/idealgas/eos_posti.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 38690,
						"regions":
						{
						},
						"selection":
						[
							[
								28405,
								28405
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 9454.0,
						"zoom_level": 1.0
					},
					"stack_index": 63,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 36,
					"file": "/home/eron/Workspace/CFD/Flexi/flexi/posti/visu/visu_vars.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15999,
						"regions":
						{
						},
						"selection":
						[
							[
								2605,
								2605
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 64,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "/home/eron/Workspace/CFD/Flexi/flexi/posti/recordpoints/prepare/parametriccoords.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20777,
						"regions":
						{
						},
						"selection":
						[
							[
								4116,
								4116
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7038.0,
						"zoom_level": 1.0
					},
					"stack_index": 65,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 38,
					"file": "dg/dg.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 32134,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 8516.0,
						"zoom_level": 1.0
					},
					"stack_index": 38,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 39,
					"file": "dg/dg_vars.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7199,
						"regions":
						{
						},
						"selection":
						[
							[
								3326,
								3326
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 8,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 714.0,
						"zoom_level": 1.0
					},
					"stack_index": 66,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 40,
					"file": "filter/filter.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22285,
						"regions":
						{
						},
						"selection":
						[
							[
								6305,
								6305
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3840.0,
						"zoom_level": 1.0
					},
					"stack_index": 67,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 41,
					"file": "filter/filter_vars.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3301,
						"regions":
						{
						},
						"selection":
						[
							[
								2158,
								2158
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 68,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 42,
					"file": "dg/fillflux.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9345,
						"regions":
						{
						},
						"selection":
						[
							[
								8698,
								8698
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2538.0,
						"zoom_level": 1.0
					},
					"stack_index": 69,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 43,
					"file": "equations/navierstokes/idealgas/getboundaryflux.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 59147,
						"regions":
						{
						},
						"selection":
						[
							[
								13822,
								13822
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5512.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 44,
					"file": "equations/navierstokes/riemann.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 47152,
						"regions":
						{
						},
						"selection":
						[
							[
								8873,
								8873
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2516.0,
						"zoom_level": 1.0
					},
					"stack_index": 41,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 45,
					"file": "sponge/sponge.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 27433,
						"regions":
						{
						},
						"selection":
						[
							[
								25630,
								25630
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 8641.0,
						"zoom_level": 1.0
					},
					"stack_index": 40,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 46,
					"file": "equations/navierstokes/flux.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19094,
						"regions":
						{
						},
						"selection":
						[
							[
								10081,
								10081
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3052.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 47,
					"file": "equations/navierstokes/idealgas/eos.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4180,
						"regions":
						{
						},
						"selection":
						[
							[
								3814,
								3814
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 707.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 48,
					"file": "equations/navierstokes/equation.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14502,
						"regions":
						{
						},
						"selection":
						[
							[
								7060,
								7060
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2841.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 49,
					"file": "equations/navierstokes/idealgas/eos.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17423,
						"regions":
						{
						},
						"selection":
						[
							[
								6233,
								6233
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2238.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 50,
					"file": "equations/navierstokes/idealgas/eos_vars.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2018,
						"regions":
						{
						},
						"selection":
						[
							[
								347,
								347
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 70,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 51,
					"file": "timedisc/timedisc.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 25775,
						"regions":
						{
						},
						"selection":
						[
							[
								23842,
								23842
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6706.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 52,
					"file": "timedisc/timedisc_vars.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 30767,
						"regions":
						{
						},
						"selection":
						[
							[
								1546,
								1546
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 53,
					"file": "equations/navierstokes/calctimestep.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9759,
						"regions":
						{
						},
						"selection":
						[
							[
								8753,
								8753
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3171.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 54,
					"file": "equations/navierstokes/timeavg.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 21356,
						"regions":
						{
						},
						"selection":
						[
							[
								6834,
								6834
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1347.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 55,
					"file": "analyze/analyze.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 21056,
						"regions":
						{
						},
						"selection":
						[
							[
								8071,
								8071
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 612.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 56,
					"file": "equations/navierstokes/analyze_equation.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 26112,
						"regions":
						{
						},
						"selection":
						[
							[
								4492,
								4492
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 991.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 57,
					"file": "analyze/analyze_vars.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4756,
						"regions":
						{
						},
						"selection":
						[
							[
								2676,
								2680
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 216.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 58,
					"file": "equations/navierstokes/idealgas/exactfunc.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 34903,
						"regions":
						{
						},
						"selection":
						[
							[
								9269,
								9269
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2694.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 59,
					"file": "readintools/readintools.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 68778,
						"regions":
						{
						},
						"selection":
						[
							[
								52092,
								52092
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 17379.0,
						"zoom_level": 1.0
					},
					"stack_index": 46,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 60,
					"file": "readintools/options.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 32484,
						"regions":
						{
						},
						"selection":
						[
							[
								24040,
								24040
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 10766.0,
						"zoom_level": 1.0
					},
					"stack_index": 71,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 61,
					"file": "dg/br2/br2.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17961,
						"regions":
						{
						},
						"selection":
						[
							[
								13507,
								13507
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3677.0,
						"zoom_level": 1.0
					},
					"stack_index": 72,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 62,
					"file": "dg/br2/br2_vars.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4051,
						"regions":
						{
						},
						"selection":
						[
							[
								2665,
								2665
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 73,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 63,
					"file": "dg/br2/br2_surfint.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7866,
						"regions":
						{
						},
						"selection":
						[
							[
								7159,
								7159
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 549.0,
						"zoom_level": 1.0
					},
					"stack_index": 74,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 64,
					"file": "dg/br2/br2_volint.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13766,
						"regions":
						{
						},
						"selection":
						[
							[
								2334,
								2334
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 838.0,
						"zoom_level": 1.0
					},
					"stack_index": 75,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 65,
					"file": "dg/br2/br2_fillflux.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8516,
						"regions":
						{
						},
						"selection":
						[
							[
								5059,
								5059
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 828.0,
						"zoom_level": 1.0
					},
					"stack_index": 76,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 66,
					"file": "mpi/mpi.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18847,
						"regions":
						{
						},
						"selection":
						[
							[
								5351,
								5357
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1312.0,
						"zoom_level": 1.0
					},
					"stack_index": 33,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 67,
					"file": "mpi/mpi_vars.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5223,
						"regions":
						{
						},
						"selection":
						[
							[
								1860,
								1861
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 34,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 68,
					"file": "mesh/mesh.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19669,
						"regions":
						{
						},
						"selection":
						[
							[
								14539,
								14539
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5074.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 69,
					"file": "mesh/mesh_vars.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20852,
						"regions":
						{
						},
						"selection":
						[
							[
								8427,
								8438
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1276.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 70,
					"file": "mesh/prepare_mesh.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 45425,
						"regions":
						{
						},
						"selection":
						[
							[
								33221,
								33232
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 12796.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 71,
					"file": "mesh/mesh_readin.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 36265,
						"regions":
						{
						},
						"selection":
						[
							[
								2180,
								2197
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 198.0,
						"zoom_level": 1.0
					},
					"stack_index": 30,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 72,
					"file": "mesh/metrics.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 37886,
						"regions":
						{
						},
						"selection":
						[
							[
								35045,
								35062
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 8769.0,
						"zoom_level": 1.0
					},
					"stack_index": 51,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 73,
					"file": "mesh/mappings.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20833,
						"regions":
						{
						},
						"selection":
						[
							[
								6337,
								6337
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1047.0,
						"zoom_level": 1.0
					},
					"stack_index": 52,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 74,
					"file": "io_hdf5/hdf5_input.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 30680,
						"regions":
						{
						},
						"selection":
						[
							[
								1489,
								1503
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 105.0,
						"zoom_level": 1.0
					},
					"stack_index": 43,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 75,
					"file": "io_hdf5/io_hdf5.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20995,
						"regions":
						{
						},
						"selection":
						[
							[
								12115,
								12115
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3581.0,
						"zoom_level": 1.0
					},
					"stack_index": 53,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 76,
					"file": "interpolation/changeBasis.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4959,
						"regions":
						{
						},
						"selection":
						[
							[
								2561,
								2561
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 204.0,
						"zoom_level": 1.0
					},
					"stack_index": 77,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 77,
					"file": "interpolation/changeBasis.t90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20579,
						"regions":
						{
						},
						"selection":
						[
							[
								3947,
								3947
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4585.0,
						"zoom_level": 1.0
					},
					"stack_index": 78,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 78,
					"file": "interpolation/interpolation.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19266,
						"regions":
						{
						},
						"selection":
						[
							[
								3616,
								3616
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 936.0,
						"zoom_level": 1.0
					},
					"stack_index": 35,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 79,
					"file": "interpolation/basis.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 29816,
						"regions":
						{
						},
						"selection":
						[
							[
								29155,
								29155
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 36,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 80,
					"file": "testcase/channel/testcase.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19145,
						"regions":
						{
						},
						"selection":
						[
							[
								4351,
								4351
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2265.0,
						"zoom_level": 1.0
					},
					"stack_index": 28,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 81,
					"file": "testcase/channel/testcase_vars.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3194,
						"regions":
						{
						},
						"selection":
						[
							[
								1927,
								1927
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 79,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 82,
					"file": "testcase/default/testcase.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13978,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1399.0,
						"zoom_level": 1.0
					},
					"stack_index": 27,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 83,
					"file": "testcase/default/testcase_vars.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2245,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 84,
					"file": "testcase/phill/testcase.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19461,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/grammars/FortranModern.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4474.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.323833957093,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "flexi-view.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"avg",
				"posti/avg2D/posti_avg2D.f90"
			],
			[
				"wmles.",
				"src/equations/navierstokes/wmles/wmles.f90"
			],
			[
				"",
				"src/equations/navierstokes/idealgas/getboundaryflux.f90"
			],
			[
				"getbou",
				"src/equations/navierstokes/idealgas/getboundaryflux.f90"
			],
			[
				"connec",
				"posti/preparewmmesh/connect.f90"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 166.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
